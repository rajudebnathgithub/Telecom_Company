{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPLl3BKzEdFZDii5o8Qbnj5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Problem Statement**\n","\n","**A telecom company has the following data related to its subscribers. It wants to find out potential churn customers to find out the potential churners and to turn them into regular customers by retaining them.**"],"metadata":{"id":"h-pGKBMjpdyF"}},{"cell_type":"markdown","source":["# Attribute Description \n","\n","**Cust_Id** : An Unique value for each Customer.\n","\n","**International.Plan** : Whether the customer has International plan or not.\n","\n","**Voice.Mail.Plan** : Whether the customer has Voice Mail plan or not.\n","\n","**X..Vmail.Messages** : Number of Voicemail messages customer has sent.\n","\n","**Total.Day.Minutes** : Total call duration taken by customer per Day in minutes.\n","\n","**Total.Day.Calls** : Number of calls in total customer did per Day.\n","\n","**Total.Day.Charge** : Total Charges accordingly per Day.\n","\n","**Total.Eve.Minutes** : Total Number of minutes taken by customer in the Evening.\n","\n","**Total.Eve.Calls** : Total Number of calls made by customer in the Evening.\n","\n","**Total.Eve.Charge** : Total Charges accordingly per Evening calls.\n","\n","**Total.Night.Minutes** : Total Number of minutes taken by customer in the Night.\n","\n","**Total.Night.Calls** : Total Number of calls made by customer in the Night.\n","\n","**Total.Night.Charge** : Total Charges accordingly per Night calls.\n","\n","**Total.Intl.Minutes** : Total Number of minutes taken by customer for International calls.\n","\n","**Total.Intl.Calls** : Total Number of International calls made by customer.\n","\n","**Total.Intl.Charge** : Total Charges accordingly per International calls.\n","\n","**X..customer.Service.Calls** : Number of calls made by customer.\n","\n","**Churn** : Whether that customer churn out of the company or not.\n","\n","**Trainrows** : For Splitting Data into Train & Test sets."],"metadata":{"id":"68Ed7irZqdTV"}},{"cell_type":"markdown","source":["# Import libraries"],"metadata":{"id":"81wFyOesnnHt"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import roc_curve, auc\n","from sklearn.metrics import accuracy_score,recall_score,precision_score,roc_auc_score,f1_score\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.preprocessing import StandardScaler,OneHotEncoder\n","from sklearn.ensemble import RandomForestClassifier\n","from imblearn.over_sampling import SMOTE\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.linear_model import Lasso,Ridge\n","%matplotlib inline\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"76ntSOGaofqN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Mounting Drive"],"metadata":{"id":"LXfIW5YdpuTc"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5chFnz2pVK7P","executionInfo":{"status":"ok","timestamp":1672670236926,"user_tz":-330,"elapsed":27867,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"ac88c6c0-5086-4115-dcb1-c304da986e1a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# Loading data"],"metadata":{"id":"9A6ldq-Ln6ET"}},{"cell_type":"code","source":["Telco_Churn1=pd.read_csv('/content/drive/MyDrive/project/Telco_Churn1.csv')\n","Telco_Churn2=pd.read_csv('/content/drive/MyDrive/project/Telco_Churn2.csv')\n","Telco_Customer_Call_Details1=pd.read_csv('/content/drive/MyDrive/project/Telco_Customer_Call_Details1.csv')\n","Telco_Customer_Call_Details2=pd.read_csv('/content/drive/MyDrive/project/Telco_Customer_Call_Details2.csv')"],"metadata":{"id":"L1EbXVVRUE4v"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Concatenate"],"metadata":{"id":"7_cDesOFqvRT"}},{"cell_type":"code","source":["Telcom = pd.concat([Telco_Churn1,Telco_Churn2],ignore_index=True)\n","Telcom_cust=pd.concat([Telco_Customer_Call_Details1,Telco_Customer_Call_Details2],ignore_index=True)\n"],"metadata":{"id":"yqo7ovRQUE-i"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Merging two dataset"],"metadata":{"id":"abNPvT7xrulY"}},{"cell_type":"code","source":["data=pd.merge(Telcom,Telcom_cust, how='inner', on ='Cust_ID')"],"metadata":{"id":"wGdIaibOUFKG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Data Understanding"],"metadata":{"id":"tIq49xiEuzSp"}},{"cell_type":"markdown","source":["# Number of rows and columns"],"metadata":{"id":"E9M03nHvvvMj"}},{"cell_type":"code","source":["print('The number of rows:',data.shape[0])\n","print('The number of columns:',data.shape[1])"],"metadata":{"id":"va53r-S7vtEE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678703923,"user_tz":-330,"elapsed":149,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"c4748a13-f051-413c-b8dd-396d7c019e21"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The number of rows: 5000\n","The number of columns: 19\n"]}]},{"cell_type":"markdown","source":["# see the first and last five records"],"metadata":{"id":"vP7k_QJ8yFyD"}},{"cell_type":"code","source":["data.head()"],"metadata":{"id":"fpDMqdDsy0bh","colab":{"base_uri":"https://localhost:8080/","height":270},"executionInfo":{"status":"ok","timestamp":1672678703926,"user_tz":-330,"elapsed":121,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"5010f43f-280d-44a5-c647-97953cbada72"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Cust_ID International.Plan Voice.Mail.Plan  X..Vmail.Messages  \\\n","0      101                 no             yes                 25   \n","1      102                 no             yes                 26   \n","2      103                 no              no                  0   \n","3      104                yes              no                  0   \n","4      105                yes              no                  0   \n","\n","   X..customer.Service.Calls   Churn trainrows  Total.Day.Minutes  \\\n","0                          1  False.        No              265.1   \n","1                          1  False.       Yes              161.6   \n","2                          0  False.       Yes              243.4   \n","3                          2  False.       Yes              299.4   \n","4                          3  False.       Yes              166.7   \n","\n","   Total.Day.Calls  Total.Day.Charge  Total.Eve.Minutes  Total.Eve.Calls  \\\n","0              110             45.07              197.4               99   \n","1              123             27.47              195.5              103   \n","2              114             41.38              121.2              110   \n","3               71             50.90               61.9               88   \n","4              113             28.34              148.3              122   \n","\n","   Total.Eve.Charge  Total.Night.Minutes  Total.Night.Calls  \\\n","0             16.78                244.7                 91   \n","1             16.62                254.4                103   \n","2             10.30                162.6                104   \n","3              5.26                196.9                 89   \n","4             12.61                186.9                121   \n","\n","   Total.Night.Charge  Total.Intl.Minutes  Total.Intl.Calls  Total.Intl.Charge  \n","0               11.01                10.0                 3               2.70  \n","1               11.45                13.7                 3               3.70  \n","2                7.32                12.2                 5               3.29  \n","3                8.86                 6.6                 7               1.78  \n","4                8.41                10.1                 3               2.73  "],"text/html":["\n","  <div id=\"df-19549089-14de-485c-9248-f9ec832ae4cf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cust_ID</th>\n","      <th>International.Plan</th>\n","      <th>Voice.Mail.Plan</th>\n","      <th>X..Vmail.Messages</th>\n","      <th>X..customer.Service.Calls</th>\n","      <th>Churn</th>\n","      <th>trainrows</th>\n","      <th>Total.Day.Minutes</th>\n","      <th>Total.Day.Calls</th>\n","      <th>Total.Day.Charge</th>\n","      <th>Total.Eve.Minutes</th>\n","      <th>Total.Eve.Calls</th>\n","      <th>Total.Eve.Charge</th>\n","      <th>Total.Night.Minutes</th>\n","      <th>Total.Night.Calls</th>\n","      <th>Total.Night.Charge</th>\n","      <th>Total.Intl.Minutes</th>\n","      <th>Total.Intl.Calls</th>\n","      <th>Total.Intl.Charge</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>101</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>25</td>\n","      <td>1</td>\n","      <td>False.</td>\n","      <td>No</td>\n","      <td>265.1</td>\n","      <td>110</td>\n","      <td>45.07</td>\n","      <td>197.4</td>\n","      <td>99</td>\n","      <td>16.78</td>\n","      <td>244.7</td>\n","      <td>91</td>\n","      <td>11.01</td>\n","      <td>10.0</td>\n","      <td>3</td>\n","      <td>2.70</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>102</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>26</td>\n","      <td>1</td>\n","      <td>False.</td>\n","      <td>Yes</td>\n","      <td>161.6</td>\n","      <td>123</td>\n","      <td>27.47</td>\n","      <td>195.5</td>\n","      <td>103</td>\n","      <td>16.62</td>\n","      <td>254.4</td>\n","      <td>103</td>\n","      <td>11.45</td>\n","      <td>13.7</td>\n","      <td>3</td>\n","      <td>3.70</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>103</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False.</td>\n","      <td>Yes</td>\n","      <td>243.4</td>\n","      <td>114</td>\n","      <td>41.38</td>\n","      <td>121.2</td>\n","      <td>110</td>\n","      <td>10.30</td>\n","      <td>162.6</td>\n","      <td>104</td>\n","      <td>7.32</td>\n","      <td>12.2</td>\n","      <td>5</td>\n","      <td>3.29</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>104</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>False.</td>\n","      <td>Yes</td>\n","      <td>299.4</td>\n","      <td>71</td>\n","      <td>50.90</td>\n","      <td>61.9</td>\n","      <td>88</td>\n","      <td>5.26</td>\n","      <td>196.9</td>\n","      <td>89</td>\n","      <td>8.86</td>\n","      <td>6.6</td>\n","      <td>7</td>\n","      <td>1.78</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>105</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>False.</td>\n","      <td>Yes</td>\n","      <td>166.7</td>\n","      <td>113</td>\n","      <td>28.34</td>\n","      <td>148.3</td>\n","      <td>122</td>\n","      <td>12.61</td>\n","      <td>186.9</td>\n","      <td>121</td>\n","      <td>8.41</td>\n","      <td>10.1</td>\n","      <td>3</td>\n","      <td>2.73</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19549089-14de-485c-9248-f9ec832ae4cf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-19549089-14de-485c-9248-f9ec832ae4cf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-19549089-14de-485c-9248-f9ec832ae4cf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":226}]},{"cell_type":"code","source":["data.tail()"],"metadata":{"id":"WSmMfuaQPbts","colab":{"base_uri":"https://localhost:8080/","height":270},"executionInfo":{"status":"ok","timestamp":1672678703927,"user_tz":-330,"elapsed":120,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"300b5d33-3677-4c8f-f97a-b9a866ed4a9e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Cust_ID International.Plan Voice.Mail.Plan  X..Vmail.Messages  \\\n","4995     5096                 no             yes                 40   \n","4996     5097                 no              no                  0   \n","4997     5098                 no              no                  0   \n","4998     5099                 no              no                  0   \n","4999     5100                 no             yes                 34   \n","\n","      X..customer.Service.Calls   Churn trainrows  Total.Day.Minutes  \\\n","4995                          2  False.       Yes              235.7   \n","4996                          3   True.       Yes              184.2   \n","4997                          1  False.       Yes              140.6   \n","4998                          0  False.       Yes              188.8   \n","4999                          0  False.       Yes              129.4   \n","\n","      Total.Day.Calls  Total.Day.Charge  Total.Eve.Minutes  Total.Eve.Calls  \\\n","4995              127             40.07              223.0              126   \n","4996               90             31.31              256.8               73   \n","4997               89             23.90              172.8              128   \n","4998               67             32.10              171.7               92   \n","4999              102             22.00              267.1              104   \n","\n","      Total.Eve.Charge  Total.Night.Minutes  Total.Night.Calls  \\\n","4995             18.96                297.5                116   \n","4996             21.83                213.6                113   \n","4997             14.69                212.4                 97   \n","4998             14.59                224.4                 89   \n","4999             22.70                154.8                100   \n","\n","      Total.Night.Charge  Total.Intl.Minutes  Total.Intl.Calls  \\\n","4995               13.39                 9.9                 5   \n","4996                9.61                14.7                 2   \n","4997                9.56                13.6                 4   \n","4998               10.10                 8.5                 6   \n","4999                6.97                 9.3                16   \n","\n","      Total.Intl.Charge  \n","4995               2.67  \n","4996               3.97  \n","4997               3.67  \n","4998               2.30  \n","4999               2.51  "],"text/html":["\n","  <div id=\"df-a564dce0-5d7c-4cf6-9018-19efbbe293cc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cust_ID</th>\n","      <th>International.Plan</th>\n","      <th>Voice.Mail.Plan</th>\n","      <th>X..Vmail.Messages</th>\n","      <th>X..customer.Service.Calls</th>\n","      <th>Churn</th>\n","      <th>trainrows</th>\n","      <th>Total.Day.Minutes</th>\n","      <th>Total.Day.Calls</th>\n","      <th>Total.Day.Charge</th>\n","      <th>Total.Eve.Minutes</th>\n","      <th>Total.Eve.Calls</th>\n","      <th>Total.Eve.Charge</th>\n","      <th>Total.Night.Minutes</th>\n","      <th>Total.Night.Calls</th>\n","      <th>Total.Night.Charge</th>\n","      <th>Total.Intl.Minutes</th>\n","      <th>Total.Intl.Calls</th>\n","      <th>Total.Intl.Charge</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4995</th>\n","      <td>5096</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>40</td>\n","      <td>2</td>\n","      <td>False.</td>\n","      <td>Yes</td>\n","      <td>235.7</td>\n","      <td>127</td>\n","      <td>40.07</td>\n","      <td>223.0</td>\n","      <td>126</td>\n","      <td>18.96</td>\n","      <td>297.5</td>\n","      <td>116</td>\n","      <td>13.39</td>\n","      <td>9.9</td>\n","      <td>5</td>\n","      <td>2.67</td>\n","    </tr>\n","    <tr>\n","      <th>4996</th>\n","      <td>5097</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>True.</td>\n","      <td>Yes</td>\n","      <td>184.2</td>\n","      <td>90</td>\n","      <td>31.31</td>\n","      <td>256.8</td>\n","      <td>73</td>\n","      <td>21.83</td>\n","      <td>213.6</td>\n","      <td>113</td>\n","      <td>9.61</td>\n","      <td>14.7</td>\n","      <td>2</td>\n","      <td>3.97</td>\n","    </tr>\n","    <tr>\n","      <th>4997</th>\n","      <td>5098</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False.</td>\n","      <td>Yes</td>\n","      <td>140.6</td>\n","      <td>89</td>\n","      <td>23.90</td>\n","      <td>172.8</td>\n","      <td>128</td>\n","      <td>14.69</td>\n","      <td>212.4</td>\n","      <td>97</td>\n","      <td>9.56</td>\n","      <td>13.6</td>\n","      <td>4</td>\n","      <td>3.67</td>\n","    </tr>\n","    <tr>\n","      <th>4998</th>\n","      <td>5099</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False.</td>\n","      <td>Yes</td>\n","      <td>188.8</td>\n","      <td>67</td>\n","      <td>32.10</td>\n","      <td>171.7</td>\n","      <td>92</td>\n","      <td>14.59</td>\n","      <td>224.4</td>\n","      <td>89</td>\n","      <td>10.10</td>\n","      <td>8.5</td>\n","      <td>6</td>\n","      <td>2.30</td>\n","    </tr>\n","    <tr>\n","      <th>4999</th>\n","      <td>5100</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>34</td>\n","      <td>0</td>\n","      <td>False.</td>\n","      <td>Yes</td>\n","      <td>129.4</td>\n","      <td>102</td>\n","      <td>22.00</td>\n","      <td>267.1</td>\n","      <td>104</td>\n","      <td>22.70</td>\n","      <td>154.8</td>\n","      <td>100</td>\n","      <td>6.97</td>\n","      <td>9.3</td>\n","      <td>16</td>\n","      <td>2.51</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a564dce0-5d7c-4cf6-9018-19efbbe293cc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a564dce0-5d7c-4cf6-9018-19efbbe293cc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a564dce0-5d7c-4cf6-9018-19efbbe293cc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":227}]},{"cell_type":"markdown","source":["# Display data type of each variable"],"metadata":{"id":"GqE9RO8Mzfbs"}},{"cell_type":"code","source":["data.dtypes"],"metadata":{"id":"l93VhkptzckK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678703928,"user_tz":-330,"elapsed":119,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"4b3332e2-f69c-451f-88bf-ad22ae021d90"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Cust_ID                        int64\n","International.Plan            object\n","Voice.Mail.Plan               object\n","X..Vmail.Messages              int64\n","X..customer.Service.Calls      int64\n","Churn                         object\n","trainrows                     object\n","Total.Day.Minutes            float64\n","Total.Day.Calls                int64\n","Total.Day.Charge             float64\n","Total.Eve.Minutes            float64\n","Total.Eve.Calls                int64\n","Total.Eve.Charge             float64\n","Total.Night.Minutes          float64\n","Total.Night.Calls              int64\n","Total.Night.Charge           float64\n","Total.Intl.Minutes           float64\n","Total.Intl.Calls               int64\n","Total.Intl.Charge            float64\n","dtype: object"]},"metadata":{},"execution_count":228}]},{"cell_type":"code","source":["data.info()"],"metadata":{"id":"eT8j7wfTtvoE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678703930,"user_tz":-330,"elapsed":109,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"ecedaf26-4cde-4a51-9b61-04c101e1ed4d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 5000 entries, 0 to 4999\n","Data columns (total 19 columns):\n"," #   Column                     Non-Null Count  Dtype  \n","---  ------                     --------------  -----  \n"," 0   Cust_ID                    5000 non-null   int64  \n"," 1   International.Plan         5000 non-null   object \n"," 2   Voice.Mail.Plan            5000 non-null   object \n"," 3   X..Vmail.Messages          5000 non-null   int64  \n"," 4   X..customer.Service.Calls  5000 non-null   int64  \n"," 5   Churn                      5000 non-null   object \n"," 6   trainrows                  5000 non-null   object \n"," 7   Total.Day.Minutes          5000 non-null   float64\n"," 8   Total.Day.Calls            5000 non-null   int64  \n"," 9   Total.Day.Charge           5000 non-null   float64\n"," 10  Total.Eve.Minutes          5000 non-null   float64\n"," 11  Total.Eve.Calls            5000 non-null   int64  \n"," 12  Total.Eve.Charge           5000 non-null   float64\n"," 13  Total.Night.Minutes        5000 non-null   float64\n"," 14  Total.Night.Calls          5000 non-null   int64  \n"," 15  Total.Night.Charge         5000 non-null   float64\n"," 16  Total.Intl.Minutes         5000 non-null   float64\n"," 17  Total.Intl.Calls           5000 non-null   int64  \n"," 18  Total.Intl.Charge          5000 non-null   float64\n","dtypes: float64(8), int64(7), object(4)\n","memory usage: 781.2+ KB\n"]}]},{"cell_type":"markdown","source":["## Distribution of Churn variable or Target variable"],"metadata":{"id":"XO7TcxUF0NcH"}},{"cell_type":"code","source":["data[\"Churn\"].value_counts()"],"metadata":{"id":"1MMF1UPV0Wxi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678703933,"user_tz":-330,"elapsed":97,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"25b847dd-b48b-40d3-b717-e68ffb658ed0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False.    4293\n","True.      707\n","Name: Churn, dtype: int64"]},"metadata":{},"execution_count":230}]},{"cell_type":"code","source":["data.Churn.value_counts(normalize=True)*100"],"metadata":{"id":"09OgreU5HOF5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678703934,"user_tz":-330,"elapsed":80,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"d6fd5bd9-a887-4e71-b590-3cbf104cce7a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False.    85.86\n","True.     14.14\n","Name: Churn, dtype: float64"]},"metadata":{},"execution_count":231}]},{"cell_type":"code","source":["data['Churn']=np.where(data['Churn'] == 'False.',0,1)"],"metadata":{"id":"mqVelrC3Q4IN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.Churn.value_counts(normalize=True)*100"],"metadata":{"id":"vElRrMwacCs2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678708419,"user_tz":-330,"elapsed":110,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"28d8c1c0-68c2-4bb4-99d2-8dacd8cb5ef4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    85.86\n","1    14.14\n","Name: Churn, dtype: float64"]},"metadata":{},"execution_count":233}]},{"cell_type":"markdown","source":["# Converting to appropriate datatype"],"metadata":{"id":"ie27XLnhRfc2"}},{"cell_type":"code","source":["cat_attr=data.select_dtypes(include ='object').columns \n","\n","data[cat_attr]= data[cat_attr].astype('category')"],"metadata":{"id":"Kc-RZ6iaQFuk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['X..customer.Service.Calls']=data['X..customer.Service.Calls'].astype('category')"],"metadata":{"id":"CgJmQn46IRDG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Display data type of each variable after conversion"],"metadata":{"id":"yThTxJ-M7eiO"}},{"cell_type":"code","source":["data.dtypes"],"metadata":{"id":"i1ffyznMQmtB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678708425,"user_tz":-330,"elapsed":112,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"7a6e6236-c45b-4836-c547-566adbb135e8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Cust_ID                         int64\n","International.Plan           category\n","Voice.Mail.Plan              category\n","X..Vmail.Messages               int64\n","X..customer.Service.Calls    category\n","Churn                           int64\n","trainrows                    category\n","Total.Day.Minutes             float64\n","Total.Day.Calls                 int64\n","Total.Day.Charge              float64\n","Total.Eve.Minutes             float64\n","Total.Eve.Calls                 int64\n","Total.Eve.Charge              float64\n","Total.Night.Minutes           float64\n","Total.Night.Calls               int64\n","Total.Night.Charge            float64\n","Total.Intl.Minutes            float64\n","Total.Intl.Calls                int64\n","Total.Intl.Charge             float64\n","dtype: object"]},"metadata":{},"execution_count":236}]},{"cell_type":"markdown","source":["## Separating Numerical And Categorical Variables"],"metadata":{"id":"GuIz0AAF8imT"}},{"cell_type":"code","source":["num_col=['X..Vmail.Messages','Total.Day.Minutes',\n","       'Total.Day.Calls', 'Total.Day.Charge', 'Total.Eve.Minutes',\n","       'Total.Eve.Calls', 'Total.Eve.Charge', 'Total.Night.Minutes',\n","       'Total.Night.Calls', 'Total.Night.Charge', 'Total.Intl.Minutes',\n","       'Total.Intl.Calls', 'Total.Intl.Charge']"],"metadata":{"id":"5IAEmwas94lR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cat_col=['International.Plan', 'Voice.Mail.Plan','X..customer.Service.Calls',]"],"metadata":{"id":"jBjVvRif94vf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data1=data[num_col]"],"metadata":{"id":"auGt3dwVmg_1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(20,10))\n","heatmap=sns.heatmap(data1.corr(),annot=True,vmax=1,vmin=1)\n","heatmap.set_title('Corelation Heatmap')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":711},"id":"1Qs-ouB2mp3L","executionInfo":{"status":"ok","timestamp":1672681806166,"user_tz":-330,"elapsed":2349,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"fed1baa2-0d07-4d3d-f331-a3936a6de6cd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Corelation Heatmap')"]},"metadata":{},"execution_count":285},{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x720 with 2 Axes>"],"image/png":"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REREREQksLQGTTbKoBERERERERERCTJl0MjfRstdK4LdhJCytGqLYDch5ChGRERERERChNagyUYZNCIiIiIiIiIiQaYJGhERERERERGRINMlTiIiIiIiIiISWFokOBtl0IiIiIiIiIiIBJkyaEREREREREQksLRIcDbKoBERERERERERCTJl0IiIiIiIiIhIYGkNmmyUQSMiIiIiIiIiEmTKoBERERERERGRwFIGTTbKoBERERERERERCTJl0IiIiIiIiIhIYDkX7BaEHGXQiIiIiIiIiIgEmTJoRERERERERCSwtAZNNsqgEREREREREREJMmXQiIiIiIiIiEhgKYMmG2XQiIiIiIiIiIgEWVAnaMysspmt9h4pZpac4XmpLGUfNbNTClDnF2YWmcP2kWa2xczWmNkGMxttZhFF0IfqZjbezDaZ2Uozm2VmZ+dzzG/ev3XNbG1h23Ai2kdfybq1S0hMiKFf3wez7S9VqhSfjn2PxIQYvomZQZ06x4aqf7+HSEyIYd3aJUS3uyLfOtu0bsWK5XOIi53Hl4uncNZZdQGoXbsmC+ZNInbFXOJXzqdjhzb+6/Bx8sf4jBj+JtuT1rB61cJMdTVufB4xS6azKn4BU6eMpFy50/zXsQCr++ZDNF0zkkYL3w52U4qcYiRngwcNIDEhhviV82nW9PwcyzRvdgGr4heQmBDD4EED0reffnpF5swax/p1McyZNY6KFSvkWe+VV1xCXOy89Mdv+zfRpUt7/3bwOBR1jJQuXZqlX89kZdx81qxexHP/eSK9fG7vs6FIMZJZUcdJRITvd+u3axazZvUiHn7onvTyTZo04uuvZhAXO49lS2cRFdnU/x08Qf6Ik/LlyzF1ysj019Adt3cD4B//qJX++lmzehH3/bOn/zt4HBQjeTvR8alU6XQWzJvE3l838PZbL2Y65vMZn6THydB3XyEsrPh8p+2P8fjvgP5s2RTL3l83BKQPRU0xEsJcauAexURQI8k5t9s519Q51xQYBgxOe+6cO5Sl+KNAvhM0+ejrnGsCnAOsAhZlnQg6HmZmwBTgC+fcWc65C4GngGqFbKdfhYWFMeTtl+jU+TYuaNKam2++lnPPbZCpzN133cKePftoeF4r3hoygpcHPgPAuec2oFu3rjRu2oZrOvXgnSEDCQsLy7POd999mdvveIjIqGjGjZ/K00/1AeDpp/owafIMolq0p8dtD/DOkIGBHYhc+GN8AEaPnsg1nXpkO9/7w17n6WcG0qx5W6ZOnc2TT/T2fycD5JeJi9jQY0D+BYsZxUjOOnZoQ4P69Wh4Xit69+7P0HdfzrHc0HdfplevfjQ8rxUN6tejQ/vWAPTv9yCLFsdwbqNWLFocQ/9+D+ZZ7xdffkNkVDSRUdG0i+7GH3/8yfz5Xwams/nwR4z89ddftI3uxoWR7bgwMpr20VdyUYvmQO7vs6FGMZKZP+LkyJEj9O33Ao2btObSVp3p3fvO9DpfGfgM/31xEJFR0bzwwhu88vIzAe9zQfgrTh7ofSfr12/gwsh2XNX2Rl5/7T+ULFmSHTt20uqyLkRGRXPJpZ3o1/dBatQIjY9yipG8FWZ8Dh48yHPPv0a//v/NVm/3W3txYWQ7mjRtQ9Wqlbjxxk4B6U9h+Ws8Zs6cT8tLrwlIH4qaYkSKm5Cb6jOzq8xslZl9Z2YfmVlpM3sEqAksNrPFXrn3zCzOzNaZ2QvHcw7nMxhIATrmVp+ZtTGzqRna1s7MpmSoqjVw2Dk3LEPda5xzX5nZaWa20Mzivb50zaffjcxshZc99K2ZNcirfGG0iGrGpk1b2bLlJw4fPszEidPo0jnzN4pdOkczZswkAD777HPatG7lbW/PxInTOHToEFu3bmPTpq20iGqWZ53OOcqXKwdAhQrl2LHjZ287lC/vywSoUL58+vZg88f4AHwVs5xf9+zNdr6zG5zJkq+WAbBg4Vdcd93V/uxeQP22PIEjew8EuxlFTjGSs86d2zNm7GQAlq+Ip0LFClSvfkamMtWrn0G58uVYviIegDFjJ9OlS4f040d7YzZ6zKRM2/Or94brr2HO3MX8+edB/3XwOPgrRn7//Q8ASpYMJ7xkSZxzQO7vs6FGMZKZP+IkJWUnq1b7knN/++13EhN/oFbN6oAvTsqV98VJ+Qrl2H6SxYlzjtNO833uOO20U/n1170cOXKEw4cPc+iQ73vB0qVLh9Q34YqRvBVmfP7440++/iaWgwf/ylbvgQO/ARAeHk6pUqXw3mpDnr/GY/mKeFJSdvq/A36gGAlxqamBexQTofMbyKcMMBK42Tl3Ab5FjHs754YA24HWzrnWXtlnnHORQGPgCjNrfALniwca5lHfYqChmVX1ytwFfJTh+POBlbnUfRC4zjnXHN9Ezptexk1uegFve9lEkUDSCfSnQGrWqs62pO3pz5OSd1DT+8WcU5mjR4+yb99+Klc+nZo1czi2VvU867z//ieZMX0MWzfH0aPHDbz62rsADPjvm9x66/Vs3RzHjOmj6fPos/7q8nHxx/jkJSFhQ3rK/Y03dKJ2RM2i6or4iWIkZ7VqVidp27G+JSftSP/Qn7FMctKOHMtUO6NK+gfAlJSdVDujSoHrvblbVyZMmFa0HSoEf8VIWFgYcbHz2JH8LQsXLmFF7Cog9/fZUKMYyczf7yV16kTQtMn5LF/hi5PHn3yOV19+li2bYnntlX/zzLM5Z6YEm7/iZOj/Pubchg3Y9mM8q+MX8vgTz6VPckZE1CR+5Xy2bo7l9TeGhswkp2Ikb4UZn/zMmjmWHclrOHDgNz77bGbRNtxP/DkexZViRIqbUJugKQFscc6lXeA4Crg8l7LdzCwe36VKjYDzTuB8GSdMstXnfL+1xwC3mVlFoCUw+zjqHmhm3wILgFrkfenTUuBpM+sP1HHO/Xl8XQldffr8k85delL3zEhGjZrAG68/B0D3m69l9OhJ1D0zks5dbmfkyCHkPYf193TvfY/T+/47WL5sNuXKncqhQ4eD3SQJMSdrjLgCfh1VvfoZnH9+Q+bO+8K/DQoBqampREZFU6deJFGRzWjU6Bwg9/fZvzvFSO5OPfUUJk4YweNPPpf+Te/9993OE32fp95ZUTzR9wVGvP9mkFsZGGlxEh19JWvWrKN2neZcGBXN22+9mL6mV1LSdppf2I5zzr2U23vexBnepM7fmWIkb1d36kHEP5pTunQp2rS+NNjNkRCkGBF/CLUJmgIxs3rAk8BVzrnGwOf4sm+OVzNgfT71fQzcBtwCTHLOHclw/Drgwlzq7gFUBS70smJ+zquNzrlPgS7An8AsM8u2Yq6Z3eddhhWXmvr7cXQzs+3JKZm+gY+oVYPt21NyLVOiRAkqVCjP7t172L49h2OTU3Kts0qVSjS+4Lz0b3knTppOy5a+NZzvuqs7kybPAGDZ8pWUKV2aKlUqnXC/ioo/xicv33+/iY7X3MpFF3dk/IRpbN68teg6I36hGDmmd6870hdg3ZHyMxG1j/WtVkQNkrOMS/L2FGpF1MixzM87f0m/jKF69TPYuWt3+jF51XvTjZ2ZOm02R45kfHsOLn/HyL59+/niy69pH31lnu+zoUAxkjt/xUl4eDiTJoxg3LgpTJ167Hul23vexJQpswCYPHkGUVGhswBsIOLkzttvZspUX/83bdrK1q3baHhO/Uz17tjxM2vXfU+rVhcVfSdPgGIkb4UZn4L466+/mD5jHp07h9bi4rnx93gUR4qREOdc4B7FRKhN0BwF6ppZ2m/LnkDaan4HgHLez+WB34F9ZlYNbx2ZgjKfR4AawJy86nPObcd3edWz+CZrMloElDaz+zLU3djMLgMqADudc4fNrDVQJ582nQls9i7nmobvUqtMnHPDnXORzrnIsLBTj6fLmcTGraZ+/XrUrVubkiVL0q1bV2bMnJepzIyZ8+jZ8yYAbrjhGhZ/8XX69m7dulKqVCnq1q1N/fr1WBG7Ktc69+zZR4UK5WnQ4EwA2l51OYmJPwCw7afk9Gs8GzasT5kypdnlfYgKJn+MT16qVq0MgJnx9FN9eH/4GD/0SoqSYuSY94aNSl+Edfr0ufTscSMAF7Vozv59+7Nds56SspMD+w+kL27bs8eNzJgxF4CZM+Zxuzdmt/e86dj2mfPyrLf7zdeG3KUr/oiRKlUqUaFCeQDKlClD26su5/vvN+X5PhsKFCO589d7yYjhb7I+cSNvvT08U13bd/zMFZe3BHx3/vph4xZ/d7HAAhEnP21Lpk0b3+eOM86owtlnn8nmLT9Sq1YNypTxfYdWsWIFLr20BRs2bPJ/pwtAMZK3woxPbk499ZT0Cb4SJUpwdcer+P77jf7pQBHzx3gUd4oRKW7Cg92ALA7iW+dlkpmFA7H47u4EMByYY2bbnXOtzWwVkAhsA3J8FZnZB8Aw51yct+l1M/s3vrtBLcO3ps0hYE0+9Y0Fqjrn1ptZTeAD59zVzjlnZtcBb3mXJh0EtuK749RYYIaZfQfEeXXnpRvQ08wO41u82G+3NDp69Ch9Hn2WWZ9/SomwMEaOmkBCwgaef+5J4lauYebM+Xz08XhGjRxCYkIMe/bs5dbbHgB8a2FMnjyD79Ys5sjRozzS5xlSvUWXcqoT4P7efZk4YTipqY69e/Zy732+W8P27T+A9997nT59/olzjnvufcxfXT4u/hqfT8YM5YrLW1KlSiW2bo7jhQFv8PHI8XS/+Vp6974TgKlTZzFy1IRgdb3InTn0ccq1bER4pfI0iRtB8hvj+WX8wvwPDHGKkZzNmr2QDh3a8P36r/njzz+5997H0/fFxc4jMioagIcefpoPPxxM2TJlmDN3MbPnLALg1deHMv7TYdx15y389FMS3W/tlW+9depEEBFRgy+XLA1gT/PnjxipUaMaH334FiVK+O6cN3nyDD6ftQDI/X021ChGMvNHnFx6SRQ9b7uRb79LIC7W90fIv//9CrPnLKJXr74MGjSA8PBw/jp4kN69+wWz+7nyV5y8NPAtPvpgMKviF2BmPPXMQHbv3kPbqy7jtdf+g3NgBoMGDWPt2vw+tgWGYiRvhRkfgI0bllG+/GmUKlWKrl060PGaW9i9ew9T/u9jSpcuRVhYGF988U1IfTGSF3+Mx/r1P/DKy8/Q/ebrOOWUsmzdHMdHH3/KgP8OCmJPC04xEuKK0eK9gWIFvX77ZGZm7wKrnHMfBrstacJL1dJ/nORpadUWwW5CyGm5a0WwmyAiIiIiUiBHDiX/rRfo/PPjfgH7m7bsXa8Vi7EMtQyakGNmK/Fd/hSaX0eKiIiIiIiIFDfKoMlGEzT5cM7ltgiwiIiIiIiIiEiR0ASNiIiIiIiIiASWUwZNVqF2FycRERERERERkZOOMmhEREREREREJKBcqu57k5UyaEREREREREREgkwZNCIiIiIiIiISWLqLUzbKoBERERERERERCTJl0IiIiIiIiIhIYOkuTtkog0ZEREREREREJMiUQSMiIiIiIiIigaW7OGWjDBoRERERERERkSDTBI2IiIiIiIiISJDpEicRERERERERCSzdZjsbZdCIiIiIiIiIiASZMmhEREREREREJLCUQZONJmjkb2Np1RbBbkJIablrRbCbEHIUI9kpTkREREREQoMmaEREREREREQksJxus52V1qAREREREREREQkyZdCIiIiIiIiISGBpDZpslEEjIiIiIiIiIhJkyqARERERERERkcBK1Ro0WSmDRkREREREREQkyDRBIyIiIiIiIiKB5VID98iHmX1kZjvNbG0u+83MhpjZRjP71syaZ9h31MxWe4/pGbbXM7Pl3jETzKxUfu3QBI2IiIiIiIiInMxGAh3y2N8RaOA97gPey7DvT+dcU+/RJcP2V4HBzrn6wB7gnvwaoQkaEREREREREQmsVBe4Rz6cc0uAX/Mo0hUY7XyWARXNrEZuhc3MgDbAZG/TKODa/NqhCRoRERERERERkdzVArZleJ7kbQMoY2ZxZrbMzNIm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9AyOHjlKn2znJMnrZNaGCSIzgEFmNgHPgsAHnHO7zGw+8FK2hYFjgSedc7+Y2UEzaw2sBO4A/l3UQSwYVh8/W5jZOc65X72ZMiOBTc65YadTV1h4bf3HiUixLa/eMtBNCCptfl4V6CYEHcVIXooTERHxh/RjKaVqBuNUrYy82W+/07ZK/azQsTSz8cA1wPnAT3iezFQGwDk3yvs7/Ag8T2I6DNx5InHEzO4CnvJW9U/n3Ife7dF4HppUHpgLPOCKmIDxdQaN5HSP97no4XgWFH4nwO0REREREREROas5524t4nMHDCzgsw+APCtCeydwClsuJQ9N0PiRN1vmtDJmRERERERERM4UuiUkr6B4ipOIiIiIiIiIyNlMGTQiIiIiIiIi4lelbJFgv1AGjYiIiIiIiIhIgCmDRkRERERERET8yimDJg9l0IiIiIiIiIiIBJgyaERERERERETErzID3YAgpAwaEREREREREZEAUwaNiIiIiIiIiPiVQ2vQ5KYMGhER+f/s3Xl4FFXWx/HvYYns4AIiwREVHEHZE9wQBCWAEkDFICIOuOO+AaO4j4ijAoqiCC4Ig6y+sskSEByJCiSQBEiMCLIGIoqIKDIsue8f3WmSdEgCSXcn8Pv49GN39a1b9xanKt23T90SEREREZEQUwaNiIiIiIiIiARVpgt1C0oeZdCIiIiIiIiIiISYMmhEREREREREJKgyNQeNH2XQiIiIiBFdfoAAACAASURBVIiIiIiEmDJoRERERERERCSodBcnfxqgERE5iV3284pQN0FKOMWIv29rtgp1E0oUxYg/xYg/xYmISMF0iZOIiIiIiIiISIgpg0ZEREREREREgioz1A0ogZRBIyIiIiIiIiISYsqgEREREREREZGg0iTB/pRBIyIiIiIiIiISYsqgEREREREREZGg0hw0/pRBIyIiIiIiIiISYsqgEREREREREZGgUgaNP2XQiIiIiIiIiIiEmDJoRERERERERCSodBcnf8qgEREREREREREJMWXQiIiIiIiIiEhQZSqBxo8yaEREREREREREQkwZNCIiIiIiIiISVJmag8aPMmhEREREREREREJMGTQiIiIiIiIiElQu1A0ogfLNoDGz080syfvIMLP0bK/DcpV9xMwqFbRBM/vSzCLyWD7OW/8p3tdnmNkm7/M6Zja9EHX/cZTl3c2s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e3ejiFC3Q0RERERERESOT2apyGkJroDcxUlERERERERERAqv1GXQiIiIiIiIiEjplolSaHJTBo2IiIiIiIiISIgpg0ZEREREREREgkq3JfanDBoRERERERERkRBTBo2IiIiIiIiIBJXu4uRPGTQiIiIiIiIiIiGmARoRERERERERkRDTJU4iIiIiIiIiElSZoW5ACaQMGhERERERERGREFMGjYiIiIiIiIgElW6z7U8ZNCIiIiIiIiIiIaYMGhEREREREREJKt1m258yaEREREREREREQkwZNCIiIiLH4LKfV4S6CSXKtzVbhboJJY5iRESkYLqLkz9l0IiIiIiIiIiIhJgGaEREREREREQkqDKD+CgMM+tkZt+b2Xoz+2ce759jZl+Y2Woz+9LM6nqXtzOzpGyP/WbW3fveODPbmO29Zvm1QZc4iYiIiIiIiMhJy8zKAqOADsA2IN7MZjnnUrMVex0Y75z72MzaA0OBPs65JUAzbz2nAeuB2GzrDXDOTS9MO5RBIyIiIiIiIiJB5Sx4j0JoBax3zv3onDsATAa65SrTCFjsfb4kj/cBegDznHP7jmefaIBGRERERERERE5m4cDWbK+3eZdllwzc4H1+PVDVzE7PVeZmYFKuZUO8l0WNMLNT8muEBmhEREREREREJKiCOQeNmd1tZgnZHncfR5OfANqaWSLQFkgHDme9aWZnAY2BBdnWeRK4EIgETgMG5bcBzUEjIiIiIiIiIics59wYYEw+RdKBs7O9rutdlr2O7XgzaMysCnCjc+63bEVigM+ccwezrbPD+/R/ZvYRnkGeo1IGjYiIiIiIiIgEVQm7i1M80MDMzjWzMDyXKs3KXsDMzjCzrDGUJ4EPc9XRi1yXN3mzajAzA7oDa/NrhAZoREREREREROSk5Zw7BDyA5/Kk74CpzrkUM3vRzLp6i10FfG9m64AzgSFZ65tZPTwZOP/NVfVEM1sDrAHOAF7Krx26xElERERERERETmrOubnA3FzLns32fDqQ5+2ynXOb8J9UGOdc+2NpgwZoRERERERERCSoXKgbUALpEicRERERERERkRBTBo2IiIiIiIiIBFWmhboFJY8yaEREREREREREQkwZNCIiIiIiIiISVIW8/fVJRRk0IiIiIiIiIiIhFtABGjM73cySvI8MM0vP9josV9lHzKxSIer80swi8lg+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U9cxffps1iQv4dDhwzz08GAyMzO54vJI+tzag9VrUn230X7mmVd8E516UmhL7ohyIPZJft4Z9QqbN28jbqkno2jGjLm8NOSNgPfzWMyd9wWdOrXn++++Zt9ff3HnnY/53kuIjyUi0jNJ3gMPPsUHH4ygYoUKzF+wxPdv/u/XRjH5k9H069uLLVu2cfMtnjHMIS+/wYfvjyBx1SLMjCcHv8yuXbu55uorefXVZ3EOzGD48NGsXZsW/I4fhWIkf0XZPwDr1y2jWrUqhIWF0a1rJzpf14tdu3bz2f99xCmnhFGmTBm+/PIb3hszIYS9PHZFPY66devEmyNeombN05g1czzJySlc26V3SPpSVIoRf0XZJ/ff14/659fj6cGP8vTgRwHofG0v30SdPW6MJrpbftPzlX7njXqMqpddRLnTqtE0YSzpr0/ml8lfhLpZxepkjpFA/d3Nq04z46MP3qBqtSqYGatXp3L/A567NbVtezlD/vUkDsfSpct48KHBIdsngfpsll+9Xy7+P/7+9/pUqVKJTT8mcPc9jxO78L/8+9VRTPj4bR5++C7+/GMf99w7IIh7wqOkxAh4Lm+aOq3kfteRks1Kw6+xxcnMygLlnXP7vXdkWgT8PY/bfpdo5cLCT65/OBERESmRvq3ZKtRNKHEu+/nknStMRIrPoQPppWj2lGM39Jxbg/ad9snN/ykV+zLYGTQlQSU8t/MujydT5b7SNjgjIiIiIiIiIieWk26Axjm3F4gIdTtERERERERERLKcdAM0IiIiIiIiIhJamWjWjtxK5G22RUREREREREROJsqgEREREREREZGgKk23vw4WZdCIiIiIiIiIiISYMmhEREREREREJKg0A40/ZdCIiIiIiIiIiISYMmhEREREREREJKg0B40/ZdCIiIiIiIiIiISYMmhEREREREREJKgyLdQtKHmUQSMiIiIiIiIiEmLKoBERERERERGRoMrUfZz8KINGRERERERERCTElEEjIiIiIiIiIkGl/Bl/yqAREREREREREQkxZdCIiIiIHINva7YKdRNKlMt+XhHqJpQ4ihF/ihMRyS0z1A0ogZRBIyIiIiIiIiISYhqgEREREREREREJMV3iJCIiIiIiIiJBpdts+1MGjYiIiIiIiIhIiCmDRkRERERERESCSvkz/pRBIyIiIiIiIiISYsqgERERERER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HvwoTw9+FIDO1/byTebZ48ZoorvlN73hieFEjpOinj/+/dooJn8ymn59e7FlyzZuvsXzW2xa2noWxC4hcdUiMjMz+fDDSb4fEytVqsg1V7cp8Z9dQedXUIxI6WVHrgAqncysLFDeObffe0emRcDf87jtd4lgZlWcc394B3++Au52zq061nrKhYWX7n84ERGRUurbmq1C3YQS5bKfV4S6CSWOYsSf4kTk2B06kG4Flyq97ql3U9C+0763aVqp2JdFzaApCSrhuZ13eTxzwtxXUgdnvMZ4L8WqAHx8PIMzIiIiIiIiInJiKfUDNN67IUUUWLCEcM7dEuo2iIiIiIiIiIRSZqgbUAIF5S5OIiIiIiIiIiJydBqgEREREREREZGgckH8rzDMrJOZfW9m683sn3m8f46ZfWFmq83sSzOrm+29w2aW5H3Myrb8XDNb7q1zipmF5dcGDdCIiIiIiIiIyEnLe/OhUUBnoBHQyzt3bHavA+Odc02AF4Gh2d77yznXzPvomm35v4ERzrn6wG7gjvzaoQEaEREREREREQmqzCA+CqEVsN4596P3pkOTgW65yjQCFnufL8nj/RzMzID2wHTvoo+B7vmtowEaERERERERETmZhQNbs73e5l2WXTJwg/f59UBVMzvd+7qCmSWY2TIzyxqEOR34zTl3KJ86cyj1d3ESERERERERkdKlsHPDFAczuxu4O9uiMc65McdYzRPA22bWF/gKSAcOe987xzmXbmbnAYvNbA2w51jbqQEaERERERERETlheQdj8huQSQfOzva6rndZ9jq2482gMbMqwI3Oud+876V7//+jmX0JNAc+BWqYWTlvFo1fnbnpEicRERERERERCaoSNgdNPNDAe9elMOBmYFb2AmZ2hplljaE8CXzoXX6qmZ2SVQa4Akh1zjk8c9X08K7zD2Bmfo3QAI2IiIiIiIiInLS8GS4PAAuA74CpzrkUM3vRzLLuynQV8L2ZrQPOBIZ4lzcEEswsGc+AzCvOuVTve4OAx8xsPZ45aT7Irx26xElERERERERETmrOubnA3FzLns32fDpH7siUvcw3QOOj1PkjnjtEFYoGaEREREREREQkqDJd8CYJLi10iZOIiIiIiIiISIgpg0ZEREREREREgkr5M/6UQSMiIiIiIiIiEmLKoBERERERERGRoMpUDo0fDdCIiIiIHIPLfl4R6iZICacY8fdtzULfxOSkoBjxpxgR0QCNiIiIiIiIiASZUwaNH81BIyIiIiIiIiISYsqgEREREREREZGgygx1A0ogZdCIiIiIiIiIiISYMmhEREREREREJKh0Fyd/yqAREREREREREQkxZdCIiIiIiIiISFDpLk7+lEEjIiIiIiIiIhJiyqARERERERERkaDSXZz8KYNGRERERERERCTENEAjIiIiIiIiIhJiusRJRERERERERILKOU0SnJsyaEREREREREREQkwZNCIiIiIiIiISVJm6zbYfZdCIiIiIiIiIiIRYsQ3QmNnpZpbkfWSYWXq212G5yj5iZpUKUeeXZhaRx/JxZtajgHWvMrPLs71+3syeyKNcXzNzZnZNtmXdvct6eF+/b2aNCmrvUdpRz8xuOZ51g6Vj1FWkrP2KtNQ4Bg643+/9sLAwPpn4LmmpcXwTN5tzzqnre2/QwAdIS40jZe1XRHVoC0DdunVYFDuN1clLSE5azIMP3OEr/+wzj7F5YwIJ8bEkxMfSuVP7wHewGIwY/iJpqXGsWrmQ5s0uzrNMi+aNSVy1iLTUOEYMf9G3/MYbu5CctJgD+7fSskUT3/Ly5cvz/tjhJK5axMqEhbRtc1nA+1EcjjdeTjvtVBbFTuO3X9fx5hsv5Vjn89n/YWXCQpKTFjPq7VcoU6b0jR2frDFS3OeP/Oq8r39f0lLjOHQgndNPP9VvWxEtm7J/32ZuuOG6Yu7l8StKXJx6ag3mz53EdylxzJ87iRo1qgPw+GP3+s6hSYlf8L+/tnDqqTUAWL9uGYmrFpEQH8uyb+cGvoOFUBJiJDo6ilUrF/r2yxWXRwaot8cnEHEC0LbNZSTEx5KctJjFi6YDcMEF5/viJyE+ll9/SeOhB+8MbAcLEMwYGfPe66xMWMiqlQuZMnkMlSt7Po7+7W/hxM6fwqqVC/li4TTCw88KYI+P3ckeI8Wh3rAHaJY8jou+eDPUTQmo4v6cVqVK5RzxkLF9DcNefyFo/Qm2kyVOSorMID5Ki2L7FuSc2+Wca+acawaMBkZkvXbOHchV/BGgwAGaIroKuLygQl5rgJuzve4FJGe9cM7d6ZxLPc521ANK7ABNmTJlGPnmELpE30rjpu3o2bM7DRs2yFHm9n692L17Dxc2as0bI8cy9OXBADRs2ICYmG40adae67r05q2RL1OmTBkOHTrEgIEv0KRpO65oHU3//n1z1PnmyLFEREYRERnFvPmLg9rf49G5U3sa1D+XCxu1pn//QYx6e2ie5Ua9PZR77x3IhY1a06D+uXTq2A6AlJQ0boq5i6VLl+Uof+cdnrBo3uIaOnW+mVdffRYzC2xniqgo8bJ//36ee/5VBg76l1+9N99yLy0jOtC0WXtq1jyNHj26BKU/xeVkjZFAnD/yq/Obb+Pp2PlmNm3ammdbhr48mIUL/xv4jhdSUeNi0MD7WbwkjoYXtWbxkjgGDfR80B42fLTvHPr006/w1VfL2L37N19913S4iYjIKC697NrAd7IAJSVGFi+Oo0XLDkRERnHX3Y/z3nuvB2cHFEKg4qR69Wq89dbLXH9DX5o2a0/PXvcAsG7dBl/8tLqkE/v2/cWMmfOC09k8BDtGHn/ieVpGdKBFyw5s3ZLO/ff1A+DVfz/LhInTadGyAy8NeYMhLz0Z3B2Rj5M9RorLL1MXs673iwUXLMUC8Tntjz/+9MVDRGQUm7dsY8aMkvEDQCCcDHEiJVtAf6Y2s6vNLNHM1pjZh2Z2ipk9BNQBlpjZEm+5d80swcxSzOyYhmTNbJOZvWBmq7zbudDM6gH3Ao96M3iuLKCapUArMytvZlWA+kBStm34MnnM7A8zG2JmyWa2zMzO9C7PkdVjZn94n74CXOltx6NmVtbMXjOzeDNbbWb3eMufZWZfecutLUSbi0WryOZs2LCJjRu3cPDgQaZOnUnX6I45ynSNjmLChGkAfPrp57Rv19q7vCNTp87kwIEDbNq0lQ0bNtEqsjkZGTtJTFoLeE7qaWk/EF6ndjC6ExDR0R2ZMNHzq9LyFauoXqM6tWvXylGmdu1aVK1WleUrVgEwYeJ0unbtBEBa2nrWrdvgV2/Dhhew5MuvAfj5513s+e13Ilo2DWRXiqwo8bJv3198/U08+/f/z6/evXs9h0u5cuUICwujtE3ofrLGSCDOH/nVmZSUwubN2/JsywP3387/ffY5O3/eFcAeH5uixkV0dEfGe/fd+AnTfMuz69mzG5OnzAhkN4qkpMTIn3/u8z2vXKlSibprRKDipNfN1zNjxjy2bt0OeM4huV3dvjU//riZLVvSA9O5Qgh2jGT9vQGoULGCLxYaNmzAkiWe8+2SL7+ma3RUwPteWCd7jBSXP5ancui3vaFuRkAF6nNalgYNzqNWzTNYGrc8cJ0IsZMhTkoSF8T/SotADtBUAMYBPZ1zjfFMSNzfOTcS2A60c86185Yd7JyLAJoAbc2sSV4V5uMX51wL4F3gCefcJnJm8SwtYH0HLAI6At2AWfmUrQwsc841Bb4C7iqg7n8CS73tGAHcAexxzkUCkcBdZnYuniybBd4MpKZkGyAKpDrhtdm6bbvv9bb0HdTJNZiSvczhw4fZs+d3Tj/9VOrUyWPd8JzrnnNOXZo1vZjlKxJ9y+7r349VKxcydsywHGm2JVV4ndps23qkn+nbdvgNOIXXqU36th35lslt9epUortEUbZsWerVO5sWLRpT9+w6xdv4YlaUeCnI3DkT2ZGezN69f/Dpp3OKt+EBdrLGSCDOH4Wp068ddWrTvVsnRr83vji6VWyKGhdn1jqDjIydAGRk7OTMWmfkWLdixQp0jLqK//vsyC+ZzjnmzZ3E8mXzuPOO3sXep2NVUmIEoFu3Tqxd819mzfyYu+56vKhdKzaBipMGDc6jRo3qfLFwGsuXzePWW/2vDI+JCf0AXyhi5P2xw0nfmsSFf6/P26M+BDzn2+u7dwage/fOVKtWldNOK/hvVzCc7DEihRfIz2kAPWO6Mm1afl+TRKSoAjlAUxbY6Jxb5339MdDmKGVjzGwVkAhcBBzrfC//5/3/SjyXFB2PyXguc7oZmJRPuQNA1rfH49leFHCbmSUBy4HTgQZAPNDPzJ4HGjvnSv3QbeXKlZg6ZSyPPfGc7xer0e+N54ILL6dlRBQZGTt57dVnQ9zK0Plo3GTSt+1g+bJ5DB/2At9+m8Dhw4dD3ayQubZLb+r+rQWnnBJG+3ZXhLo5JYJipHCGD3uBJ596uURlRQRC7v516RLFN98m5Li8qW2762l1SSe6RN9K//59ubL1JcFuZok1c+Z8Lm7clht73MELzw8IdXMCJitOypUrS8sWTYjudhvXXncLg598hAYNzvOVK1++PNFdopheygbEi8Oddz3G2ee04Lu0H4gA6nhLAAAgAElEQVS5qSsAAwf9izZtLiV+xQLaXHkp27btOGHPt4oROV4asJPilokL2qO0CPlttr3ZI08Akc653WY2Dk/2zbHIysU7zHH2yTm3wswaA/ucc+vymefh/9m77zApqqyP498zAyNJwIAgYQUFAyogSVFXARVBCUYwoeIaMPsa13V3Dbuua84rgtlVUVBJkiSoYGTIMiKiojDAYgQUkDDn/aNqhp7pSTDTXY39+/jMQ/ft6upzy3urq2/dsMm3XiXHft5mwgYvM8sAsop5L4ABV7r7hLgXzI4CTgSeM7MH3P2FIq9fDFwMYJl1yMioWe78lWR57kqaNN56R75xoz1Zvnxlsdvk5q4gMzOTOnVq88MPP7F8eTHvzQ3eW6VKFYa9OoRXXnmTESO2jlteter7gsdPPf0SI0c8X+E8JMKlA8/jT+Hd5+zsOYV6LTRqvCe5RY5R7vKVNGq8Z6nbFLVlyxauu+G2gufT3h3JF198VQnRJ05Fykt5/Pbbb4waPZFevY5n0uSyOr5FS2UkceePsvZZVLu2rXjpv/8BYPfdd6VH965s3ryZUaPiTrMJV5nl4n+rvqdBgz1YuXIVDRrsETd8q1/f3nEXyvnH6rvvfmDkyHF06NAm0q7oqVJGYk2b/jHNmv2B3XbbpdznpsqWjHKSm7uCH3/8iXXr1rNu3XqmTf+IVq1aFpxDunfvwuzZ8wt9L0chqjKSl5fHa6+N5PrrLuP5F15jxYr/cXrfoFN0zZo1OOXkE1m9ek2l57e8VEZkeyTyOq1Vq5ZUqVKFWbPnV3rcIrJVInvQbAGamlnz8Hl/IH/2xrXAzuHj2sCvwOpwPpcelfT5sZ9RXn8G/rKdn7cEaBc+7g1ULSGOCcClZlYVwMz2NbOaZrYX8D93HwI8BbQt+gHuPtjd27t7+8ponAGYkT2H5s2b0bRpE6pWrUrfvn0YPWZioW1Gj5lI//6nA3DqqScWzIkxesxE+vbtQ1ZWFk2bNqF582Z8MiMYyjRk8P18tnAxDz08uNC+YsdMn9SnBwsWfF4p+ahsTwx6vmAytFGjJtD/7KDb76Ed27Jm9ZqCrsL5Vq5cxdo1azm0Y/C/rf/ZpzF6dOk/DqtXr0aNGtUBOPaYP7J582Y+++yLBOSm8lSkvJSkZs0aBeUiMzOTE3ocw+efL05MBiqRykhizh/l2WdRLfbrRPN9D6P5vofx+htvccVVf4mkcQYqt1yMGT2Rc8Njd27/0wuVl9q1d+aoPx5WKJ81alSnVq2aBY+PO/boyM+xqVJG9tmnacHjQ9ocxE47ZUXWOAPJKSejRk/giMM7kpmZSfXq1ejY8RAWLtx6/jij30kpcSc82WUktiz06tmt4Ptmt912KZiE/c83Xclzzw9NdNZLpTIi2yMR12n5zujXh1dVHqSSuXvS/nYUiexBswEYAAwzsyoEQ3gGha8NBsab2XJ372Jms4GFwFKg2LOEmT0FDHL37HJ+/mhguJn1Aa4ssq+BAO4+KDbd3SsyRf0QYKSZzQXGEzQ6AcwDtoTpzwEPEwyLmmXBlcB3wEkEq07dYGabgF+AcysQS7lt2bKFq6/5K2PfepnMjAyee/5VcnIWcdut15M9cy5jxrzNM88O5fnnHmFhznR++ulnzjrnMgBychYxfPho5s+dyuYtW7jq6lvIy8vjiMM70P+c05g3P4fsGcGXwt/+9m/GjZ/Cv+/6K61bt8Td+eabZVx62U3JyGaFjB03me7du/L5Z++zbv16Lrzw2oLXsmdMpH2HYCLBK678C08//SDVq1Vj/ISpBStU9enTnYcf/Cf16u3KqJEvMHfuAk7oeTZ77LE7Y996mby8PJbnruS8AVdFkr9tUZHyAsESwLVr1yIrK4s+vbvT48Qz+eGHn3jzjWfZaacsMjIyeOedD3hy8IsR5nLbpWsZScT5Ayh2nxBMBHz9dZfRoEE9Zs+cxLjxU7hkYOoOValoubj73scZ+vIgBpx/Jt9+u4wzzhpY8P6T+vTg7UnvsW7d+oK0+vXrMXzY00AwdGHo0BFMmPhOEnJaslQpI6ecfALnnHMamzZtZsP6DZx19qWRHZOiElVOFi5czISJU5k9axJ5eXk888wrBQ12NWpU59hjjkqJ7+BklhEz49mnH2Ln2rUwM+bNy+HyK4LVmo4++nDu/MfNOM60aR9x5VW3RHZMikr3MlJZ9n78WnbudCBVdq1N6+wh5N43lO+HTo46rEqViOu0/BtDp53ai159+keVtaRJh3Iiqc12pNYk2apKViP9jxMRERGRHcKH9TpGHUJK6fTdJ1GHkHJURuJ1yH2zxHk3fg+Ob9Ijab9pJywdt0Mcy4Qusy0iIiIiIiIiImWLfJJgEREREREREUkvvgOtrpQs6kEjIiIiIiIiIhIx9aARERERERERkaTKUw+aOOpBIyIiIiIiIiISMTXQiIiIiIiIiIhETEOcRERERERERCSp3DXEqSj1oBERERERERERiZh60IiIiIiIiIhIUmmS4HjqQSMiIiIiIiIiEjH1oBERERERERGRpHL1oImjHjQiIiIiIiIiIhFTDxoRERERERERSao8reIURz1oREREREREREQiph40IiIiIiIiIpJU6j8TTz1oREREREREREQiph40IiIiIiIiIpJUeepDE0cNNCIiIiIiklCdvvsk6hBSyof1OkYdQspRGYm3OeoAJOnUQCMiIiIiIiIiSaUeNPE0B42IiIiIiIiISMTUg0ZEREREREREkspdPWiKUg8aEREREREREZGIqYFGRERERERERCRiGuIkIiIiIiIiIkmlSYLjqQeNiIiIiIiIiEjE1INGRERERERERJLK1YMmjnrQiIiIiIiIiIhETD1oRERERERERCSptMx2PPWgERERERERERGJmBpoRERERERERCSp8vCk/ZWHmXU3s8/NbLGZ/bmY1/cys8lmNs/M3jGzxmF6GzP70MwWhK/1i3nPc2b2tZnNCf/alBaDGmhEREREREREJG2ZWSbwONADaAmcaWYti2x2H/CCu7cC7gDuCtPXAee6+4FAd+AhM6sb874b3L1N+DentDg0B42IiIiIiIiIJFWKzUHTEVjs7l8BmNlQoA+QE7NNS+Da8PFUYASAuy/K38Ddl5vZKqAe8PO2BqEeNCIiIiIiIiKSzhoBS2OeLwvTYs0FTgkfnwzsbGa7xW5gZh2BLODLmOQ7w6FPD5rZTqUFkTINNGa2W8y4rJVmlhvzPKvItteYWY1y7PMdM2tfTPpzZnZaGe/tbGaHxzy/zcyuL2HbHmaWbWY5ZjbbzO4vY9/nm9ljZe03kY7v1pkFn77Hwpzp3HjD5XGvZ2Vl8fJLT7AwZzofTB/NXns1LnjtphuvYGHOdBZ8+h7djju6zH1edun5LMyZzuaNuey22y4F6WeeeTKzZr7N7FmTmPbuSFq1KtqDLFoPPnAHC3OmM2vm2xzS5qBit2l7yMHMnjWJhTnTefCBOwrSd9mlLuPHvsJnC6Yzfuwr1K1bB4D99tuH6e+N4te1X3Ht/11SsP1OO+3Eh++PYWb228ydM4Vb/35dYjNXAdtbdnbddRcmTRzGzz8u4uGH/lnoPf+44ya+/nIGP/+4KG5/qUxlpLBEnFeuvuoi5s6ZwpzZk/nvi4+z006Fv9MefOCOlC03iTgeixd9xOxZk8ieMZGPPhxbaH+XXzaAT+e/y9w5U/j3XbckLmMVoDJStoqcV049tSdz50xh44altGvbqiD9zDNPJnvGxIK/jRuW0rr1gQnPy7ZIxPm0tP2+Nfq/fL8qh5FvPh/3Of+44yZyFkxj/rx3uOLyCyoxl5UjXctISSr7uqRWrZqFjsXK5fO5/77bk5afZGp6/xW0mfscB05+OOpQEkplJHUlcw4aM7s4/M2e/3fxdoR8PXC0mc0GjgZygS35L5rZnsCLwAB3zwuTbwb2BzoAuwI3lfYBKdNA4+4/5I/LAgYBD8aM09pYZPNrgDIbaCqoM3B4WRuZ2UHAY8A57t4SaA8sTmxoFZORkcEjD99Jz17ncHDrLvTrdxIHHNCi0DYXDDiTn35azf4tj+ShR4Zw17+Ci/0DDmhB3759aNWmKyf2PJtHH/kXGRkZpe7zgw9ncHyPM1iyZGmhz1jy9VK6HnMah7Q9ljv/9RCD/nN3cg5AOfTo3pUWzZuxf8sjufTSm3j8sbuK3e7xx+5i4MAb2b/lkbRo3ozux3cB4KYbL2fK1OkccOCRTJk6nZtuDL4MfvzxZ675v7/xwINPFtrPb7/9xrHd+tKu/XG0a9+N47t15tCObRObye1QkbKzYcMGbr3tHm686R9x+x0z5m06HXFiUvJQWVRGCkvEeaVhwwZccfkFHHrYCbQ55BgyMzPp17dPwf7atW3FLrvUJRUl4njkO/a402nfoRuHdTqhIK3z0YfTu9fxtG13HK3bdOX+BwYlJ6PbQGWkbBU9ryxYsJDT+17EtGkfFdr+lVfepH2HbrTv0I3zB1zF119/y9y5CxKen/JK1Pm0tP3e/8Agzh9wddxnnHduXxo3bsiBBx3Fwa068+prIxOQ4+2XrmWkJIm4Lvnll18LjkX7Dt345ttljBhRuEH89+L716aw6Ow7yt5wB6YyIvncfbC7t4/5G1xkk1ygSczzxmFa7D6Wu/sp7n4IcEuY9jOAmdUG3gJucfePYt6zwgO/Ac8SDKUqUco00BTHzI4Je6TMN7NnzGwnM7sKaAhMNbOp4XZPhK1gC8xsm5ovzWyJmd1uZrPCz9nfzJoCA4H/C3vw/LGUXdwI3OnuCwHcfYu7PxHuu5eZfRzmYZKZ1S8jlqvCXjjzwjFvCdGxwyF8+eUSvv76WzZt2sRrr42kd6/jC23Tu1c3XnxxGACvv/4WXbscGaYfz2uvjWTjxo0sWbKUL79cQscOh5S6zzlzFvDNN8vi4vjwo2x+/nk1AB99PItGjfZMVJa3Wa9ex/PiS8MB+PiTWdSpW4cGDfYotE2DBnuwc+2d+fiTWQC8+NJwevfuXvD+F8Lj98KLwwrSv/vuB7JnzmXTpk1xn/nrr+sAqFq1ClWqVk21MZlAxcrOunXref+DGWzY8Fvcfj/+ZBYrV65KfAYqkcpIYYk4rwBUqVKF6tWrkZmZSY3q1VmxYiUQXHDd/e+/8eebC/fGShWJOh4lueSSc7nn3sfZuDG4n/Hddz8kIFcVozJStoqeVxYuXMyiRV9SmjP6ncRrw0YlIPrtl6jzaWn7nTJ1OmvX/hIXy8BLzuWfdz5YcH5NtbqUrmWkJIm6LsnXosXe7FFvd6ZN/zhxmYjQLx/nsPnntVGHkVAqI6nNk/hfOcwAWphZs3AEzxlAoZOhme1uZvltKDcDz4TpWcCbBBMIDy/ynj3Dfw04Cfi0tCBSuYGmGvAc0M/dDyaY0PhSd38EWA50cfcu4ba3uHt7oBVBl6NWxe2wFN+7e1vgCeB6d19C4V4800p570HAzBJemw4cFrawDSVozCnNn4FDwlmhB25LBrZFw0YNWLpsecHzZbkraNiwQYnbbNmyhdWr17DbbrvQsGEx723UoFz7LM0FA85g/ISp25ulSteoYQOWLd2an9xlK2hUJD+NGjYgd9mKYrepv8fuBQ0OK1euov4eu5f5mRkZGWTPmMiK3HlMnvwen8yYXRlZqVQVKTu/NyojhSXivLJ8+UoeeHAQX3/5Ccu+nc3qNWt4e9J7QDCcZ/SYiSnbsJeI4wHBZHrjxr7Cxx+N48I/nV2wTYsWe3PkkR35YPpopkwaTvt2rROZve2iMlK2ip5XyuP003ox9NURFQ+2EiXqfFqe/Ra1995N6Xt6bz76cCxjRr1I8+bNKpa5SpauZaQkib4u6de3N8N2kMYqKZ7KiJSXu28GrgAmAJ8Br7n7AjO7w8x6h5t1Bj43s0VAfeDOML0vcBRwfjHLab9kZvOB+cDuQKl3jlJ5FadM4OuYGZGfBy4HHipm277hGLIqwJ4EsyvP24bPeiP8dyZbJ/2pDI2BV8NWsyzg6zK2n0fwP3AE4YzQ6aDz0YczYMCZHN355KhDSZjy9HTIy8ujfYdu1KlTm9eHPc2BB+7HggWfJyE6SQUqI/Hq1q1D717H03zfw/j55zW8OvRJzjrrFKZOfZ/TTu1J12NLnUrsd+noLiezfPlK6tXbjfHjhvL554uZNv1jqlTJZJdd6nL4kb3o0L4Nr7w8iBb7dYo63IRTGdk2HTscwrr163/X5w2o2KogO+2UxYYNv3FYpxM46aQePDX4fjp3rcxLw9SWLmWkvPr27cP5518VdRiSwlRGKiYvhXqDA7j7WGBskbS/xzweDgwv5n3/Bf5bwj67bksMqdyDplzMrBnBZD3HhD1P3iLofbMt8vutbWHbG60WAO1KeO1R4LGwB9Al5YjrRIK119sCM8ysUCyxExvl5f26jWFutTx3JU0aNyx43rjRnixfvrLEbTIzM6lTpzY//PATy5cX897cleXaZ3EOPvgAnhx0L6ecegE//vjTduepMlw68LyCyb5WrPwfjZtszU+jxnuSWyQ/uctX0qjxnsVu879V3xd0OW7QYA9WbUMX6dWr1/DOu+9zfLfOFchNYlSk7PweqIyULBHnlWOO+SNfL/mW77//kc2bN/PmiHF0Oqw9h7Q5iH32acrnn73P4kUfUaNGdRbmTE9ORsspEccDKNjHd9/9wMiR4+jQIbg5k7tsBSNGjANgRvYc8vLy2H33XROXwe2gMlK8yjyvlKVf3z68+mpqzKmSjPNp7vKVZe63qGW5K3gznEtixIhxHHzwARXIZeVI1zJSHom8LmnVqiVVqlRh1uz5lRu0JJXKiOxoUrmBZgvQ1Myah8/7A++Gj9cCO4ePawO/AqvDOV56VNLnx35Gae4F/mJm+wKYWYaZ5Q9PqsPWiYXOK20n4Vi2Ju4+lWBm5zpArdhtYic2ysioWf6cFDEjew7NmzejadMmVK1alb59+zB6zMRC24weM5H+/U8H4NRTT2TqO+8XpPft24esrCyaNm1C8+bN+GTG7HLts6gmTRoy7NUhnD/gar744qvtzk9leWLQ8wWTfY0aNYH+Zwd3Xg/t2JY1q9fEdZNfuXIVa9esLZiotf/ZpzF69AQAxoyeyLnh8Tu3/+kF6SXZffddqVOnNgDVqlXj2GOO4vPPSx8jHoWKlJ3fA5WRkiXivLL021wOPbQt1asHbdtduxzJwoVfMHbcZBr/4RCa73sYzfc9jHXr1rN/yyOTm+EyJOJ41KhRnVq1gnN/jRrVOe7Yowvuco8cNYHOnYN57Vu02JusrCy+//7HZGW3XFRGileZ55XSmBmnndYzZSa9Tcb5dMyYiWXut6hRo8bT+eigLh19VCcW/c6uT0qTamWkPBJ5XXJGvz68uoMM9ZKSqYzIjiaVhzhtAAYAw8KeJDMI5oUBGAyMN7Pl7t4lXOZqIcG65cXWKDN7Chjk7tnl/PzRwHAz6wNcWWRfAwHcfZC7zzOza4BXwqW/HRgTbnpbGP9PwBSgtIHMmcB/zawOYMAj+TNCV7YtW7Zw9TV/ZexbL5OZkcFzz79KTs4ibrv1erJnzmXMmLd55tmhPP/cIyzMmc5PP/3MWedcBkBOziKGDx/N/LlT2bxlC1ddfQt5ecEKYsXtE+CKyy/g+usuo0GDesyeOYlx46dwycAb+Ost/8duu+3Co4/+C4DNmzcXWpUkSmPHTaZ79658/tn7rFu/ngsvvLbgtewZE2nfoRsAV1z5F55++kGqV6vG+AlTGTd+CgB33/s4Q18exIDzz+Tbb5dxxllBm139+vX4+MNx1K5di7y8PK668iIObt2ZPfeszzNPP0RmZrAi1vDho3lr7KTkZ7wMFSk7ECwRXLt2LbKysujTuzs9TjyTzz77gn/fdQtn9DuZGjWqs+SrbJ559mXu+McDEea0bCojhSXivPLJjNm88cZbzPhkAps3b2bOnAUMeeqliHNaPok4HvXr12P4sKcBqFIlk6FDRzBh4jsAPPvcUJ4acj9zZk9m48ZNXPCna6LKeolURspW0fNKnz7defjBf1Kv3q6MGvkCc+cu4ISewVxFR/3xMJYtW8HXX3+b/IyVIVHn09L2+86UN9hvv+bUqlWDJV9lc/El1zHx7Xe5+57HefH5x7j66ov49Zd1XDLwhiQeibKlaxkpSaKuSwBOO7UXvfr0jyprSbH349eyc6cDqbJrbVpnDyH3vqF8P3Ry1GFVKpWR1FbOyXvTiqXSKiBSflWyGul/nIiIiIjIDujDeqWutJuWOn33SdQhpJzNG3Mt6hgS6cD6hybtN+2C/328QxzLVO5BIyIiIiIiIiK/Q6k2SXAqSOU5aERERERERERE0oJ60IiIiIiIiIhIUmkOmnjqQSMiIiIiIiIiEjH1oBERERERERGRpNIcNPHUg0ZEREREREREJGLqQSMiIiIiIiIiSaU5aOKpB42IiIiIiIiISMTUg0ZEREREREREkkpz0MRTDxoRERERERERkYipB42IiIiIiIiIJJXmoImnHjQiIiIiIiIiIhFTDxoRERERERERSSr3vKhDSDnqQSMiIiIiIiIiEjE10IiIiIiIiIiIRExDnEREREREREQkqfI0SXAcNdCIiIiIiEhCfVivY9QhpJRO330SdQgpR2VERA00IiIiIiIiIpJk7upBU5TmoBERERERERERiZh60IiIiIiIiIhIUmkOmnjqQSMiIiIiIiIiEjH1oBERERERERGRpNIcNPHUg0ZEREREREREJGLqQSMiIiIiIiIiSZWnHjRx1INGRERERERERCRi6kEjIiIiIiIiIknlWsUpjnrQiIiIiIiIiIhETD1oRERERERERCSptIpTPPWgERERERERERGJmHrQiIiIiIiIiEhS5WkOmjjqQSMiIiIiIiIiEjE10IiIiIiIiIiIRExDnEREREREREQkqTRJcLyE9aAxs93MbE74t9LMcmOeZxXZ9hozq1GOfb5jZu2LSX/OzE4r472dzezwmOe3mdn1JWzbw8yyzSzHzGab2f3l/Zwd0fHdOrPg0/dYmDOdG2+4PO71rKwsXn7pCRbmTOeD6aPZa6/GBa/ddOMVLMyZzoJP36PbcUcD0LhxQyZNHMa8uVOZO2cKV17xp4Lt//63a/nm62yyZ0wke8ZEenTvmvgMVoIHH7iDhTnTmTXzbQ5pc1Cx27Q95GBmz5rEwpzpPPjAHQXpp57ak7lzprBxw1LatW1VkF61alWeGvIAs2dNYmb22xx9VKeE56MybG952XXXXZg0cRg//7iIhx/6Z6H3vDX6v8zMfpu5c6bw+GP/JiNjx+vcl45lpLLPHaXt87JLz2dhznQ2b8xlt912KfQ5Rx/ViewZE5k7ZwpTJg1PQE63X0XKxS671GX82Ff4bMF0xo99hbp16wBw3bUDC86hc2ZP5rf137LLLnUBWLzoI2bPmkT2jIl89OHYxGewHFKhnBx9VCd++O6zguP211uuSVBut08iygkUXzf23XefguOQPWMiP36/kKuuvDCxGSxDMsvI4CfvY2b228ya+TavDh1MzZrB5ef9995WcExyFkzj+1U5Cczxtkv3MlIZmt5/BW3mPseBkx+OOpSEquzrtFq1ahYqDyuXz+f++25PWn6SLV3KiaSuhP0Kcvcf3L2Nu7cBBgEP5j93941FNr8GKLOBpoI6A4eXtZGZHQQ8Bpzj7i2B9sDiin64BVLuV2dGRgaPPHwnPXudw8Gtu9Cv30kccECLQttcMOBMfvppNfu3PJKHHhnCXf+6BYADDmhB3759aNWmKyf2PJtHH/kXGRkZbN68mRtuvJ1WrbtwxJG9uPTS8wvt8+FHhtC+Qzfad+jGuPFTkprf7dGje1daNG/G/i2P5NJLb+Lxx+4qdrvHH7uLgQNvZP+WR9KieTO6H98FgAULFnJ634uYNu2jQttf+KezADik7bF073EG99zzd8wssZmpoIqUlw0bNnDrbfdw403/iNvvGWcNpF3742jdpiv16u3Kaaf1TEp+Kks6lpFEnDtK2+cHH87g+B5nsGTJ0kKfUadObR599F+cfMr5tG7TlX5nXpKcA1AOFS0XN914OVOmTueAA49kytTp3HRjcKF9/wODCs6hf/3rv3nvvY/46aefC/Z37HGn075DNw7rdELiM1mGVCknANOnf1Jw3P5550OJz3w5JaqclFQ3Fi36suA4dDy0O+vWrWfEyHHJyWwxkl1Grrv+Ntq1P4627Y5j6be5XH7ZgCD9htsKjsvjjz/DmyOiOyZFpXsZqSzfvzaFRWffUfaGO7BEXKf98suvBeWhfYdufPPtMkaMSI0bAImQDuUkleS5J+1vR5HUBgMzOybskTLfzJ4xs53M7CqgITDVzKaG2z0R9mBZYGbb1ERrZkvM7HYzmxV+zv5m1hQYCPxf2IPnj6Xs4kbgTndfCODuW9z9iZjXjzKzD8zsq/zeNGZWy8wmx3xmnzC9qZl9bmYvAJ8CTczsb2HadDN7Jb8Xj5ntY2bjzWymmU0zs/23Jd/bq2OHQ/jyyyV8/fW3bNq0iddeG0nvXscX2qZ3r268+OIwAF5//S26djkyTD+e114bycaNG1myZClffrmEjh0OYeXKVcye8ykQnNQXLvyCRg0bJCM7CdGr1/G8+FJwV+njT2ZRp24dGjTYo9A2DRrswc61d+bjT2YB8OJLw+nduzsACxcuZtGiL+P2e8AB+zL1nfcB+O67H1j98xrat2udyKxUWEXKy7p163n/gxls2PBb3H7Xrv0FgCpVqpCVlcUOdA4F0rOMJOLcUdo+58xZwDffLIuL48wzTmbEiHEsXbocCI5TqqhouejV63heCI/fCy8OK0iP1a9fH4a+OiKR2aiQVCknqSxR5aQ8deOYrkfy1Vff8O23uYnJXDkku4zkf98AVKterdju9Wf0O4lXU6hepXsZqSy/fJzD5h2RrCQAACAASURBVJ/XRh1GQiXqOi1fixZ7s0e93Zk2/ePEZSJi6VBOJLUls4GmGvAc0M/dDyaY/+ZSd38EWA50cfcu4ba3uHt7oBVwtJm1Km6Hpfje3dsCTwDXu/sSCvfimVbKew8CZpby+p7AkUBP4N9h2gbg5PAzuwD329bb3C2A/7j7gcAewKlAa6AHQe+cfIOBK929HXA98J/yZrYiGjZqwNJlywueL8tdQcMijSmx22zZsoXVq9ew22670LBhMe9tVPi9e+3VmDatD+LjT2YXpF126QBmzXybIYPvL9TNNlU1atiAZUu35jN32Yq4BqdGDRuQu2xFqdsUNW9eDr16diMzM5OmTZvQtu3BNG7SsHKDr2QVKS9lGTvmJVbkzmXt2l94/fUxlRt4gqVjGUnEuaM8+yyqRYu9qVu3DpPfHsbHH43jnHNSZxRqRctF/T12Z+XKVQCsXLmK+nvsXui91atX4/hunXnjza13Mt2dcWNf4eOPxnHhn86u9Dxtq1QpJwCHHdaOmdlvM2bUi7RsuW9Fs1ZpElVOylM3+vaNvoEvijLy1JAHyF06h/33a85jjz9T6LP+8IdGNG3ahClT36/UfFZEupcRKb9EXqcB9Ovbm2HDRlVewJL23D1pfzuKZDbQZAJfu/ui8PnzwFElbNvXzGYBs4EDgZbb+FlvhP/OBJpu43vLMsLd89w9B6gfphnwLzObB0wCGsW89o27549bOAIY6e4b3H0tMBqCHjgEw6+Gmdkc4EmChqAdWs2aNXjt1SFce/2tBXesBj35Avvufzjt2ndj5cpV3HvP3yOOMjrPPjeU3GUr+PijcTxw/+18+GE2W7ZsiTqsyJzQ82wa/6EtO+2URdcuR0QdTkpQGSlblSqZtGvbil59zuWEE8/ilpuvoUWLvaMOKyGKXlz07NmNDz7MLjS86eguJ9Px0O707HUOl156Pn888tBkh5mSZs2ez97NO9Ku/XE8/p9neX3YM2W/aQeVX07KqhtVq1alV89uDN/BGsQrw4UXXUuTvdry2cIv6Ht670Kv9evbh9ffeIu8vLyIoks8lRHZXmqwE0m8lJsTxcyaEfQgOcbdWwFvEfS+2Rb5ffO2sO0rVS0A2pVj3xA0zACcDdQD2oVz7vyPrTH/Wo7PzAB+jpmjp427H1B0IzO7OBz6lZ2XV57dlm157kqaNN56R75xoz1ZvnxlidtkZmZSp05tfvjhJ5YvL+a9ucF7q1SpwrBXh/DKK28yImYc96pV35OXl4e789TTL9GhQ5tKyUdlu3TgeQWToa1Y+b9CvRYaNd6T3CLHKHf5Sho13rPUbYrasmVLwZj3U069gLp16/DFF19VbkYqWUXKS3n89ttvjBo9kV5FuuOmonQvI4k4d5Rnn0Xl5q5g4tvvsG7den744SemTf+IVq22tU2/8lRmufjfqu8LhjE0aLAHq4oMP+jXt3fchXL+8fruux8YOXJc5OfYVCkna9f+wq+/rgNg3PgpVK1apdx3jBMhGeWkrLrRvXsXZs+ez6pV3ycsn+URVRnJy8vjtddGcsrJJxZK79u3D6++OrLS8re9VEZkeyTyOq1Vq5ZUqVKFWbPnV27Qktby8KT97SiS2UCzBWhqZs3D5/2Bd8PHa4Gdw8e1CRo1VptZfYKhQJUh9jNKcy/wFzPbF8DMMsxsYBnvqQOscvdNZtYF2KuE7d4HeplZtbDXTE8Ad18DfG1mp4efaWYWN9GEuw929/bu3j4jo2Y5slK2GdlzaN68GU2bNqFq1ar07duH0WMmFtpm9JiJ9O9/OgCnnnpiwZwYo8dMpG/fPmRlZdG0aROaN2/GJzOCoUxDBt/PZwsX89DDgwvtK3bM9El9erBgweeVko/K9sSg5wsmQxs1agL9zw66/R7asS1rVq8p6Cqcb+XKVaxds5ZDO7YFoP/ZpzF69IRSP6N69WrUqFEdgGOP+SObN2/ms8++SEBuKk9FyktJatasUVAuMjMzOaHHMXz+eYXn5U64dC8jiTh3lGefRY0aPYEjDu9IZmYm1atXo2PHQ1i4MLpjVJnlYszoiZwbHr9z+59eqLzUrr0zR/3xMEaN2ppWo0Z1atWqWfD4uGOPjvwcmyrlpH79egWPO7RvQ0ZGRrkbjhMhGeWkrLpxRr+TUuJOeLLLyD77NC3Yb6+e3Qp93+y33z7sUrcOH36UneBcl01lRLZHIq7T8p3Rr09Kzc0k8nu1rb1LKmIDMIBgGE8VYAbBvDAQzL8y3syWu3sXM5sNLASWEjRqxDGzp4BB7l7eb9HRwPBwAt8ri+xrIIC7D3L3eWZ2DfBKuPS3A2X17XwJGG1m84HsMPY47j7DzEYB8wh62cwHVocvnw08YWZ/BaoCQ4G55czbdtuyZQtXX/NXxr71MpkZGTz3/Kvk5CzitluvJ3vmXMaMeZtnnh3K8889wsKc6fz008+cdc5lAOTkLGL48NHMnzuVzVu2cNXVt5CXl8cRh3eg/zmnMW9+Dtkzgi+Fv/3t34wbP4V/3/VXWrduibvzzTfLuPSymxKdxQobO24y3bt35fPP3mfd+vVceOG1Ba9lz5hI+w7dALjiyr/w9NMPUr1aNcZPmFqwQlWfPt15+MF/Uq/erowa+QJz5y7ghJ5ns8ceuzP2rZfJy8tjee5KzhtwVST52xYVKS8QLAFcu3YtsrKy6NO7Oz1OPJMffviJN994lp12yiIjI4N33vmAJwe/GGEut106lpFEnDuAYvcJcMXlF3D9dZfRoEE9Zs+cxLjxU7hk4A0sXLiYCROnMnvWJPLy8njmmVcib5TIV9Fycfe9jzP05UEMOP9Mvv12GWectfVewUl9evD2pPdYt259QVr9+vUYPuxpIBi6MHToCCZMfCcJOS1ZqpSTU085kUsuOZfNm7ewYf0Gzo45L0UtUeWktLpRo0Z1jj3mqJT4Dk5mGTEznn36IXauXQszY968HC6/4uaCWPr17cNrw6LvPVNUupeRyrL349eyc6cDqbJrbVpnDyH3vqF8P3Ry1GFVqkRcp+XfGDrt1F706tM/qqwlTTqUk1SyI80Nkyymg5JcZlbL3X8JG3/eAy5291nbup8qWY30P05EREREdggf1usYdQgppdN3n0QdQspRGYnXIfdNK3urHVftmnsn7Tftml+/2iGOZTJ70EhgsJm1JJij5vntaZwRERERERER2ZHlqbNIHDXQJJm7nxV1DCIiIiIiIiKSWtRAIyIiIiIiIiJJ5TvQ6krJknLLbIuIiIiIiIiIpBv1oBERERERERGRpNIcNPHUg0ZEREREREREJGJqoBERERERERERiZiGOImIiIiIiIhIUrmGOMVRDxoRERERERERkYipB42IiIiIiIiIJJWW2Y6nHjQiIiIiIiIiIhFTDxoRERERERERSSrNQRNPPWhERERERERERCKmBhoRERERERERSSp3T9pfeZhZdzP73MwWm9mfi3l9LzObbGbzzOwdM2sc89p5ZvZF+HdeTHo7M5sf7vMRM7PSYlADjYiIiIiIiIikLTPLBB4HegAtgTPNrGWRze4DXnD3VsAdwF3he3cFbgUOBToCt5rZLuF7ngAuAlqEf91Li0MNNCIiIiIiIiKSVJ7Ev3LoCCx296/cfSMwFOhTZJuWwJTw8dSY148H3nb3H939J+BtoLuZ7QnUdvePPOjG8wJwUmlBqIFGRERERERERNJZI2BpzPNlYVqsucAp4eOTgZ3NbLdS3tsofFzaPgvRKk47qM0bc0sdu5ZMZnaxuw+OOo5UoeMRT8ckno5JYToe8XRM4umYFKbjEU/HJJ6OSWGpcjw2Rx1AjFQ5JqlExyQ5kvmb1swuBi6OSRq8Hf+PrwceM7PzgfeAXGBL5UQYUA8aqQwXl71JWtHxiKdjEk/HpDAdj3g6JvF0TArT8YinYxJPx6QwHY94OibxdEx+Z9x9sLu3j/kr2jiTCzSJed44TIvdx3J3P8XdDwFuCdN+LuW9ueHjEvdZlBpoRERERERERCSdzQBamFkzM8sCzgBGxW5gZrubWX4bys3AM+HjCUA3M9slnBy4GzDB3VcAa8zssHD1pnOBkaUFoQYaEREREREREUlb7r4ZuIKgseUz4DV3X2Bmd5hZ73CzzsDnZrYIqA/cGb73R+AfBI08M4A7wjSAy4CngMXAl8C40uLQHDRSGTQ+szAdj3g6JvF0TArT8YinYxJPx6QwHY94OibxdEwK0/GIp2MST8ckDbn7WGBskbS/xzweDgwv4b3PsLVHTWx6NnBQeWOwYLUnERERERERERGJioY4iYiIiIiIiIhETA00IiIiIrLDM7MMM6sddRwiOxLVG5HUogYakQoys3vMrLaZVTWzyWb2nZmdE3VcUTKzfcxsp/BxZzO7yszqRh1X1MxsLzM7Nnxc3cx2jjqmqJjZ1WG9MTN72sxmmVm3qOOKkpnVzF8ZwMz2NbPeZlY16riiFtaV/aKOIxWY2RFmVjN8fI6ZPWBme0UdV5TM7OXwXFIT+BTIMbMboo4rSuH5Y7KZfRo+b2Vmf406rqio3sRTvYmneiOpQg00ss30RRenm7uvAXoCS4DmQFp/yQGvA1vMrDnBJGtNgJejDSlaZnYRwaRiT4ZJjYER0UUUuQvCetMN2AXoD/w72pAi9x5QzcwaARMJjslzkUYUMTPrBcwBxofP25jZqNLf9bv2BLDOzFoD1xGsBvFCtCFFrmV4LjmJYGWMZgR1J50NIVj+dROAu88jWC42XanexFO9iad6IylBDTSyPfRFV1j+amgnAsPcfXWUwaSIvHCpupOBR939BmDPiGOK2uXAEcAaAHf/Atgj0oiiZeG/JwAvuvuCmLR0Ze6+DjgF+I+7nw4cGHFMUbsN6Aj8DODucwh+SKSrzR6s7tAHeMzdHwfStideqGrY0+wkYJS7bwLSfQWMGu7+SZG0zZFEkhpUb+Kp3sRTvZGUoAYa2R76oitsjJktBNoBk82sHrAh4piitsnMzgTOA8aEaek+VOM3d9+Y/8TMqpDeF0MzzWwiQQPNhHC4V17EMUXNzKwTcDbwVpiWGWE8qWBTMY3e6Vxv1prZzQR3ut8Kh8Sl+7n1SYLeqzWB98IevWsijSh635vZPoR1xcxOA1ZEG1KkVG/iqd7EU72RlKBltmWbmdm7BN3NLwD+CKwC5rr7wZEGFiEz2xVY7e5bwuFfO7v7yqjjioqZtQQGAh+6+ytm1gzo6+53RxxaZMzsHoJeAOcCVwKXATnufkukgUUkvEBuA3zl7j+b2W5Ao7BLcVoys6MJeiW+7+53m9newDXuflXEoUXGzJ4GJgN/Bk4FrgKquvvASAOLiJk1AM4CZrj7NDP7A9DZ3dO5F2scM6sS9uJMS+G5YzBwOPAT8DVwjrsviTKuqKjelI/qjeqNpAY10Mg20xddYWZWA7gW+IO7X2xmLYD93H1MGW+VNBI2SPyJYM4VAyYAT3manoTNzAh6iuzt7neE55EGxXQvljQWnl9voXC9+Ye7p20vxfBOdwt3nxQen0x3Xxt1XMlmZteW9rq7P5CsWFJVeMMoIx3LR1GqNwHVm7Kp3kjU1EAj20VfdFuZ2avATOBcdz8oPB4fuHubiENLOjObTynDD9y9VRLDkRRmZk8QDGnq6u4HmNkuwER37xBxaElnZqMpvd70TmI4ksLCycYvBnZ1933CGwKD3P2YiENLOjO7tbTX3f32ZMWSakr4Eb4amBnO45RWVG+2Ur0pmeqNpAo10Mg20xddYWaW7e7tzWy2ux8Sps1199ZRx5ZsZa3m5e7fJCuWVFNC49VqIBv4p7v/kPyoomNms9y9repNwdCmErn7u8mKJdWU0HiVX2+eTLeeNGY2h2DS5I9j6s38dB5iLPHM7GWgPTA6TOoJzAOaEixmcE9EoUVC9UbKQ/VGUkWVsjcRiXM54RcdBKvRmFk6r0az0cyqs3VSsX2A36INKRrp3ABTDuOALWxdbvwMoAawkmAp5V7RhBWZTWaWydZ6U480nSQ4nRtgyuEroB7wSvi8H7AW2JdgSdR0Wxb2N3ffGIwQTO/Jxs3skdJeT+e5m4DGQFt3/wUKek28BRxF0OM33X5oqt6EVG9KpXojKUENNLI99EVX2G0EkyY3MbOXCJZSHhBpRBExs7UUXxYMcHevneSQUsmx7t425vn8mF4k50QWVXQeAd4E9jCzO4HTgL9FG1I0NDSwVIcXGfY22sxmuHsHM1sQWVTRedfM/gJUN7PjCCYbH13Ge36vZkYdQArbg8I3ijYB9d19vZml4w0k1ZutVG9KpnojKUENNLI99EUXw90nmtlM4DCChoir3f37iMOKhLun83LrZck0s475k+CaWQe2LqGcdqsmuPtLYb05hqDenOTun0UcVlR6Rh1ACqtlZn9w928Bwsmka4WvbSz5bb9bfyaYbHw+cAkw1t2HRBtSNNz9+ahjSGEvAR+b2cjweS/g5XDy05zowoqM6k1I9aZUqjeSEjQHjWwzrUZTmJlNLjr/TnFp6Sgc+lYt/3n+j6x0ZGbtgWfZ+uNyLUE9ygFOdPfXoootCmb2orv3LytN0puZ9QCeBL4k+L5pRnBT4B3gInd/KLroks/Mrnb3h8tKSyfh8MibgJYU/r7pGllQEQpXyGsM1Cfo0QvwvrtnRxdVtFRv4qneFKZ6I6lEDTQi28nMqhHMITIV6Ezw4wGgNjDe3fePKLTImVlv4H6gIbAK2Av4zN0PjDSwiIRzrVzl7g+aWR0Ad18dcViRyh/eFfM8E5jv7i0jDCtSZnYY8ChwAJBF0MPq13QdGhjeDDgNGAnkn08/T7eJgWMVrTdhWsFE2+nIzCYCrwLXAwOB84Dv3P2mSAOLkCbALUz1Jp7qTTzVG0kVGuIk20yr0RS4BLiGoBFiVkz6GuCxSCJKHf8gGPI1yd0PMbMuQDrOswKAu28xszOBB9UwYzcD+UMk17C1YXMjMDiywFLDYwSTRw8jWEniXILJcNOSu+eZ2Y1h77K5UccTpfD8cRbQzMxGxby0M/BjNFGljN3c/emwR8S7BMOwZ0QdVMRmmVkHd0/r46B6UyrVm3iqN5IS1EAj20Or0QBh19iHzexKd3806nhSzCZ3/8HMMswsw92nmllaDUUoxvtm9hjBHatf8xPdfVbJb/n9cfe7gLvM7C53vznqeFKNuy82s0x33wI8a2azgXQ+TpPM7Hri6026/bj6AFgB7E7QOzHfWoJlYNPZpvDfFWZ2IrAc2DXCeFLBocDZZvYNQb3Jn6g/3SYcV70pmepNPNUbSQka4iTbrISuovmr0aRd90AzO7e4dHd/IdmxpAozmwScBNxFcGG0Cujg7odHGliEzGxqMcmexuO9jyou3d3fS3YsqcLM3gOOBZ4iaPBeAZzv7q0jDSxCZvZ1Mcnu7nsnPRhJSWbWE5gGNCEYIlgbuN3dR5X6xt8xM9uruHR3/ybZsUhqUr2Jp3ojqUINNLLNzGwuweSMsavRPOXurdNxTK+ZxfaeqUawKs0sdz8topAiF854vx7IAM4G6gAvpdHwNymDmcWu/FYN6AjMTNcGKyi4OPwfwfwz/0dQb/7j7osjDUxShpmtZesQ4yygKmk8T5GUThP1B1RvZFuo3kjUNMRJtseFwDNmVoug+98a4MLwR/ldkUYWAXe/Mva5mdUFhkYUTqTMrDlQ393fD5PygOfN7EigLpDWDTRhN+IDKfzFf0d0EUXH3QsNhTSzJkBaDoMLV9Oo5+75y3huAG43swMJ5vdKa2Z2EPErjaRlD0V33zn/cbjqSB+C+b7SjpndCyx29yeLpF8CNHP3P0cTWfRKmqif4Psn7ajebKV6UzLVG0kVGVEHIDsed58RDmNqA7R291bu/om7/5puSwWX4FeCpWDT0UMEDXZFrSZNf3znM7NBQD/gSoKGzdMJvvwlsIxg9aJ09CjBUMCidgXSdhlYADO7leD4PAp0Ae4BekcaVIrwwAjg+KhjiUhXip9YfAjQM8mxpJr8ifoXuXszgp69H0UbUmpQvVG9KYXqjaQE9aCR7RLbEyC4GZG+PQHCoRr5XWczCO70pmtDVX13n1800d3nm1nT5IeTUg5391ZmNs/dbzez+wkm3E5L4dDA2HrThsKroaWT5sXNvePu08zsiSgCSiGnAa2B2e4+wMzqA/+NOKbImNkpMU8zCFb7Stdlx3fyYsbph6t/WXFvSCOaqD+G6k0hqjclU72RlKAGGtlmYU+AGgR3M58iuID+JNKgonVfzOPNwDfuviyqYCJWt5TXqictitS0Pvx3nZk1JBjutWeE8UQtO+bxZuCVmKFx6WbnUl6rmrQoUtP68IfDZjOrTdDtvEnUQUUodmjgZmAJwXCNdLTezFq4+xexiWbWgq3n23T1czgM/T3gJTNbRcwqaGlI9WYr1ZuSqd5ISlADjWwP9QSI4e7vRh1DCsk2s4vcfUhsopldCMyMKKZUMSacn+hegp4iTtDAmZbc/fmoY0ghi83sBHcfG5toZj2AryKKKVVkh/VmCME55Bfgw2hDio67D4g6hhTyd2Ccmf2Trd8v7QmWpb8msqhSQx+CHiL/x9aJ+tOylzOo3hShelMy1RtJCVrFSbaZmX3s7oea2UfAKQQ9ARa4e/OIQ4tE2HX2bmAPgrlFjGCYc9qtDhAOP3gT2EjhL/4s4GR3XxlVbKnEzHYCqrl72k4Aa2ZHALcRzMNTha31Ju2WTw7vXL4FfEDhetMJ6Onui6KKLZWEwyRru/u8iEOJTDih9EVAU2Jusrn7BVHFFKVwAukbgIPCpE+B+4obaivpS/WmMNUbkdSmBhrZZmb2N4IJG48BHifsCeDuf4s0sIiY2WKgl7t/FnUsqcLMurD1i3+Bu0+JMp5UYWaHE3+BmJar0ZjZQoK7VDOBLfnp6boUe9hodxYx9QZ42d3TdZ6EAmbWiK0NeQAUN2dPOjCzD4BpxNeb1yMLSlKObhwVpnoj5aF6I6lCDTRSIeoJAGb2vrsfEXUcktrM7EVgH2AOWy8Q3d2vii6q6OT3xIs6DkltZnY3wepnORSuN2m5kpOZzXH3NlHHkerM7GJ3L26lmrSgG0eFqd6Uj+qN6o2kBs1BI9vMzE4Hxrv7WoIukm3N7B/uPjvi0KKSbWavAiOA3/IT3f2N6EJKPWY2xt3TeQnH9kDL4lZPSFNTzexe4A0K15t0XcmpWGY22N0vjjqOCJ0E7Ofuv5W5ZXoYU9x8RRIn3Vej+Z9+ZBaielM+qjeqN5IC1INGtlk4OXArMzsS+CfBpKd/T9e74Wb2bDHJnq5jmwHM7A3gaWCcu+eFaXu6+4poI4uOmQ0DrkrnYxDLzKYWk+zu3jXpwaQwM2vn7mk7wbaZjQNOd/dfoo4lFZjZWqAmQaPmJtQFHzNr5u5fl5WWDmKWkz4aaIBuHAGqN1I61RtJNWqgkW1mZrPd/RAzuwuY7+4v56dFHZukBjM7FhgAHAYMA55198+jjSoaZjaaYJ6mnYE2BEvSx37xp+VQDSmZmdVw93VRxxElM3uUoN40AloDkylcb9JyaKDEM7NZ7t62SNpMd28XVUxRKeGGUb60vnEkATO7trTX3f2BZMWSKlRvJNVoiJNsj1wzexI4Drg7nIcmI+KYks7MbnT3e2J+SBSSzj8g3H0SMMnM6gBnho+XEiyV+1933xRpgMl1X9QBpBIzO8fd/1vSRWI6XhzmCyeRfgqoBfzBzFoDl7j7ZdFGFons8N+ZwKgoA0kFZra/uy80s7bFvZ6OQwPNbH/gQKBOzB1wgNpAtWiiipaWky5M9aZYO5fyWlretVe9kVSjBhrZHn2B7gRL8v1sZnsSzEWTbvLHqWaXulWaMrPdgHOA/sBs4CXgSOA8oHN0kSVdLlDf3d+PTQyHCKbjcKea4b+lXSSmqweB4wkbJNx9rpkdFW1IkRkL1HP3nNhEMzsQWBVNSJG6jmCZ4PuLec2BdBwauB/QE6gL9IpJX0twrNJOOK/XYnd/skj6JUAzd/9zNJFFRvWmCHe/HcDMjijmuiQtF7xQvZFUoyFOss3MbB9gmbv/ZmadgVbAC+7+c7SRSaowszcJLp5fBJ6LnXfFzLLdvX1kwSWZmY0Bbnb3+UXSDwb+5e69in+npJv8la1ih4ya2Vx3bx11bMlmZkOB/xRdTtvM/ghc6u5nRROZpBoz6+TuH0YdRyows5lA+6KT0ZtZBjDP3Q+KJjJJNSUMDYxLSweqN5Jq1INGtsfrQHszaw4MBkYCLwMnRBpVkplZqd3u03xukUfcvbhJYEmnxplQ/aKNMwDuPt/MmiY/nGiZ2SOlvZ7OQwOBpeEwJzezqsDVbO2pl26aF22cAXD3aWb2RBQBRanIEJ44aT6J5WIz+wvQlJjr2jSdN2Kn4lYKdPc8M0u7FXpUb+KZWSfgcKBekaHGtYHMaKKKnOqNpBQ10Mj2yHP3zeEX36Pu/qiZpeMS252ApcArwMdoecIC7j7VzA4CWhIzF4C7vxBdVJGpW8pr1ZMWReoYCHwKvAYsR/Um1kDgYYKJcXOBicDlkUYUndKGwFVNWhSpYzgwJ/yDwvXGCZarT1cjgWnAJGBLxLFEbb2ZtXD3L2ITzawFsD6imKKkehMvi2CesyoUPs+uAU6LJKLoqd5ISlEDjWyPTWZ2JnAuW8d9p+MFcwOCiZLPBM4C3gJecfcFkUaVAszsVoJ5ZloSzCXRA5gOpGMDTbaZXeTuQ2ITzexCgglQ082ewOlAP2Az8CowXEMkgWDY8dlRB5EiFpvZCe4+NjbRzHoAX0UUU5ROAc4gGFI8kuC7ZnG0IaWMGu5+U9RBpIi/A+PM7J9s/X5pD9wMXBNZVNFRvSnC3d8F3jWz59z9m6jjSRGqN5JSNAeNbDMza0lwp/dDd3/FzJoBfd397ohDi0y4ktWZwL3A7e7+WMQhRcrM5hMsjTvb3VubWX2C1ZuOizi0pAvz/iawJ2e1jQAAFo1JREFUkcJf/FnAye6+MqrYomZmjQkunq8FbnL3FyMOKVJmtghYQtBo9Xo6N1qFdy7fAj6gcL3pBPR090VRxRYlM6sJ9CFo4NwNuCX8wZW2wh9VHxRtzEtXYe/VG4D8eTM+JVjUIW6obbpQvYlnZvsC1xM/NDDtJk4G1RtJLWqgke1iZtWBP7j751HHEqWwYeZEgsaZpgSrrzzj7rlRxhU1M/vE3TuGE691IVhV4zN33z/i0CJjZl3Y+sW/wN2nRBlP1MJlT88k6IU2E7i/6Io96cjMOhI0Wp0E5ABD3f2/0UYVjfD8ehYx9QZ42d03RBdVtMwsk2AVxTOAgwkaNidEG1U0zGwtwTAVI1gd7jdgU/jc3b12hOFJClG9iWdmc4FBBN+/BUMD3T0de/aKpBQ10Mg2M7NewH1Alrs3M7M2wB3pNimumb1A8MNhLMGPqE8jDillmNl/gL8QXAxdB/wCzHH3AZEGJpEzszsIGjU/A4YC4919c7RRpR4z2x14ADjb3dN14kYJmVlXgvNpR4K5Voa6e3a0UcmOxMwudvfBUceRTKo3JTOzme7eLuo4Ul061huJnhpoZJuFvSK6Au/ELAX7abotQ2dmecCv4dPYiqS7dzHClYpqu/u8iENJOWb/3969x1paV2cc/z7D4AV1GCtoC7XcUkoQGWcERSS0oKapiooi9YaKSrkYQRGNgRiF1ks1UEADjoMR74oC3kqpHUEseJnADOMF0lZuipDQFiugSJjh6R/vu+fss8/eZ/Y+4v69M7/nk0w4533HZDk56+y917vW+umbtl9YOo5pavPmFuC37aVe7vTyZt8igXWApCXA4TQfKPagGY27KE80Z5P0cdt/VzqOaWrz5kc0u7zM7Necqk8/a7vxBv0auC3F3xmSjrW9snQc05S8GU3Se4G7aF5nHuhdt313qZi6qMa8ifKyJDgW4kHbvx44ee6hUsGUYntR6Ri6SNJimqXAvXGmG4HLy0XUDZIuAT4B/IvtXr4cUzCkUnYrHUCHrQe+StOR+P3SwXRYjW+W03042nnACqC3K+KpNPsjtpd0vO1vFYusEEm72b5l4HJ1/w4kb+bzuva/7+i7ZmD3ArF0VoozUUI6aGJikj4BfBt4F/Ay4ERgW9vHFQ0sipO0M3AFcCewjqYrYjnNiVeH2L6jYHhFSXouzZvFA4AvA5+sfYdTzCZJHnhRlrQ4XQAgaTvbv93834zatMXvd/dOUGwPMjgDeCdwie2nlYyvBElrba8YuJaRloghJJ08333bZ00rlghIB00szFuA02haIr8A/Cvw90Uj6pgaR1da7wPOt312/0VJJwIfYOaJTXVsrwZWS9qeZjnuakm/AFbRnHD1YNEAO6DG0RUASVfbPsi2JX3G9lF9t9fQdAdUSdKBwAXAY4E/k7QMONb2CWUj647sSGDPXnEGwPYNkvayffNAp+9WT9JewFNouode2ndrCfCoMlF1U615M/BzMYftS6YVS4c8bp576WSIqUuBJibWPsU8rf1TvYyuzHKA7dcPXrR9rqTqu0UkPQF4DXAUTYfR54CDaApXf1Uuss6otZX4MX1fD+7yqusT5lz/BPw1zQl52F4v6eCyIXVO7T8jP5V0Ps3ScWiOUr6hPQWstsL3XwAvBJYCh/Vdv5d635eMUmveHDbPPQPVFWhsnw4g6dm2r+m/J+nZZaKKmmXEKcYm6evz3a/tFKeejK7MkLSutzh6kns1kHQpzZvnzwAX2r6z7961tvcrFlxBGV2ZPY4wOJowbFShJpJ+aPuZ/b8/JK23vax0bCUM2y0yYt9INSQ9GjiBptgNcA3NXprfAdvZvq9UbKVIelb2WEVMZsRoYNWvwVFGOmhiEs8CfkEz1vRD6n36MEtGV2YZbKvuEU2Ldc3OtX3lsBs1FmcyujLLUkmHA4var3s5JGD7cmF1wi/anxVL2hY4iWbxeK0uZu7I21eAaneL2L4fOLP9M6i64kzrZ5JOBXal772+7TcUi6iA7BaZjKQVtteWjmPaJD0LOBDYceBnZgmwTZmoomYp0MQk/hh4Hk0R4lXAPwNf6J/9rlVGVza5itHts9+dZiBdY/tKSfsAe9O3C8D2p8tFVVRGV2ZcBbyo7+v+HKo6b4DjgHOAnYFf0pxE8+aiERWQ3SJzSbrI9pGSfsyQPRG29y0QVld8Dfh3YDWwsXAsJWW3yGSOp85RuEfQPCxazOyfmXuAI4pEFFXLiFMsSDvb/Urgw8Dptj9aOKRiMroS45D0Hppi3d7AZTRHkV9tu8oX/4yuxDgk7Wj7v0vHUZqkFwMvoSnk9Y8b3wt80fb3igRWkKQ/sX2npF2G3bd927Rj6gpJ19d4etUoo3aLDF6LuknapebfG9Ed6aCJibSFmRfQFGd2Bc4FLi0ZUwdkdGUMtbbO9jkCWAass320pCcBny0cU0kZXRlD8oZrJN0KfAm42Pb/FY6nCNtfA76W3SIzeg9D8oFqqG9Ker7ty0oH0hEfYe5o4LBrWz1J8/5/rvz15pGSPs7c0cBDi0UUVUqBJsYm6dM0J4xcRtM185PCIXVCRlfGVmvrbM/9th+StEHSEuAu4MmlgyoooyvjqTpvbO8p6RnAK4DTJN1A0zFSa3Ezu0Vakm5h9piK+r637T2mH1VZku6l+TcQcKqkB2hOshLNv0lVu+CyW2SoYbuaegzUXIz4MvAxmv14NY8GRmEZcYqxSXoI+E377Zw3RbW98PdkdCXGIek84FSaD5pvp1leeb3to4sGVkhGV2JSknYAzgJebbvKD1eSvkezW+Q6+j5A2L64WFCFtLvf+i0CjgROAdbaftn0o4oukfSXNO/PjqP54N1zL/AN2/9VIq7oJknX2a524Xp0Rwo0Eb+ndkFhb3RlWW90xfbzCoc2dWmdHY+kXYEltn9UOJRiJP0ncCuVj65A8mY+bbfZ4TSFzT1oRmovsn1d0cAKyW6RuSQtolnQ/w7geuD9tm8oG1VZI36n/Bq4zfaGacdTWnaLDJfu79kkvZemu/lS4IHeddt3l4op6pQCTcTvSdIa28+QdB1wCM2TmRtt71U4tKmTNHQXT8u1zvFKWkzTWdX7mbgRuLzGN8r9+kZXXgJUO7qSvBmtHWP5Kk1RpvrdK5L+AfhedotAu7vqDcDbgKuBD9r+WdmoukHSD2j2q/y4vfRU4CfA9sDxtr9VKrYSJO1J01m1K9ktAqT7e5j29WaQbe8+9WCiainQxMNC0jdtv7B0HCVkdCXmI2ln4ArgTpoj2AUspzm2/hDbdxQMrxMyuhKjSJIH3qhIWlxbcXNgt8hjaJ7uVrtbBEDS7cAG4Gzg54P3bV8y9aA6QtIlwLtt/7T9fm/gDOCdwCW1dWFJWk8z4jQ4GlhlJx6k+zuiy1KgiYdF77jL0nGUltGVGWmdbUi6kKZgd/bA9ROBp9t+XZHACsvoynDJm4akq20f1H79GdtH9d1ba7u601ditvZ366g3sa5xcXKPpJ/Y3mfYtRrH5LJbZK50f8+Q9NL57tdc7I0ycopTPCxqLc6MGl0pF1E3jGqdBar7oAkcYPv1gxdtnyvpPwrE0xXraUZXzsjoSiN5M8tj+r7eZ+CephlIl2S3yIxhv1djk59KOh/4Yvv93wI3SHokTedVbb4h6QSyW6TftZKWAqtoOovuA2p9LT5snnsGUqCJqUoHTYytbYcc9gPTa7Hed8ohFZXRldHSOjtD0jrbyye9t7XL6MpcyZsZ/V0ygx0zNXfQZLfIeCStqHy59qOBE4CD2kvXAOcBvwO2s31fqdhKyG6R+aX7O6Jb0kETk6hyx8w83gecP2J05QNAlaMrrfttPyRpQzvKchfw5NJBFbL9iPZZATXujbja9kG2PTi6Aqyh+fBZq+TNjKWSDqc5OnlpXw6JphhRqzuAN47aLQKkQNM4HjimdBCl2L4fOLP9M6iq4gyA7d1Kx9A1kr5t+zkAtm8dvBaN2ou9UUYKNDG2HFE4R0ZXRkvr7IyrGN0++91pBtIRGV0ZLXkz4yrgRX1f9+dQjXnTs2evOANg+wZJe9m+Wao9fWbYrrI4I+ki20eO6niusNM5u0UGSHoUsB2wg6THM/O6uwTYuVhg3VV1sTfKyIhTjK335LvvNIlNt6jwFImMrownrbPRL6Mr40nexDCSvgTczezdIjsAR9Eckbt/qdimbcQ+nk1qfOrdO7BB0i7D7tf2oE3SJ+e5XeUiaUknAW8FdqLpyOu5B1hl+6NFAouITVKgiVggSTcDpwy7BXzI9h5TDqkzhrXJpnV2rhpbZ9u8eTvN6MqHmcmh5E3yZiw15k1PdovMkHTlPLdt+9CpBROxhZH0FtsfKR1HF6TYG12TAk0smKQnMvso2J8XDGfqNvNkBttHTyuWruhrnb2S5jSa/tbZy2s8vnE+klbV1oqfvJkreTOZGvMmYhztMtw5Hc7t1665AD6o5kIvgKRHAMcBB7eXvgOstF3dKV8p9kbXpEATE5P0IprFczvRLLHcBbjR9lOKBhbFpXU2YnLJm9ic7BaZn6R9aI6n739oVN3x9JKeMHBpEXAkTafiWtsvm35U3VR7oVfSBcC2wKfaS0cBG22/qVxUEQEp0MQCSFoPHAqstr1c0iHAa2y/sXBonZEnM2md7Unr7PiSN8mbnuTNbNktMpqk99B0nu0NXAb8Dc0+niNKxlWSpEU0H7jfAVwPvN/2DWWjii6QtNj2BknrbS8buDfnWm1S7I0uSIEmJibpWtv7tYWa5e2xsNX/Uu+XJzNpne1J6+z4kjfJm57kTYyr7SpaBqyzvUzSk4DP2n5e4dCmTtK2wBuAtwFXAx+0/bOyUZWTQu9cvWX8ktYCL7d9U3t9d+ArNS/qT7E3uiIFmpiYpNXAS4AP0JwecRewv+0DiwYWnZHW2YjJJW9ilOwWGU3SGtvPkHQdcAhwL83YdXW7myTdDmwAzgbm7AWs7VjpFHrn6p0yKulQ4ELg5vbWrsDRtuf7N9uqpdgbXbG4dACxRXoxzYkRbwNeDWwPnFE0ogLyZGauXussTcGuv6PqirbjqmppnU3eDJO8mV/yBoD9Br7v3y2ybvrhdMq1kpYCq4DrgPuA75cNqZjVNIW7Ze2ffgaqKtDYPqR0DB20o6ST269XAtu0X28EltMsq6/V/e1UwAZJS2geQD+5dFBRnxRoYmK2fwPQ/vL6RuFwSjpznnum2dNTmzXACmCjpD0GWmc3Fo2ssFGts0BtHzSTN3Mlb0ZI3jRs/y8M3S3ygtp3i9g+of3yY5IuB5bY/lHJmEqx/frSMXRVCr2bbAM8lpnTAnsWA4+bfjidkmJvdEJGnGJiko4FTqfponmIttXa9u5FA4vi0jo7WlpnY5TkzWjJm0Z2i4wm6du2n7O5a7WreQl7dovM6O2gKR1H10nalYqLvVFWOmhiIU4B9rH9P6UD6Yo8mdkkrbOjpXV2QPJmk+TNaMmbxi3M3i2yr6RNR2vXtlsEQNKjgO2AHSQ9npmOgCXAzsUC667jgVqXsB/BTKH36F6ht3BMpQx2zkSrv7Br+9bBaxHTkgJNLMRNwG9LB9EVacGfJa2zo6V1tk/yZpbkzWjJm0Z2i8x1LPBWYCegvzPkHuCjRSLqsJpPyCOF3n4pNgxIsTe6JiNOMTFJy4FPAj8EHuhdt31isaAKSgv+jLTOjiets8mbfsmb8SRvYhhJb7H9kdJxdEGWsA8n6TzgVOAVwNtpCr3X2z66aGDRCZJOYqbYe0ffrXuAVbZT8I2pSgdNLMRK4ArgxzQ7aGqXJzMz0jo7Qlpn50jezEjejJC82byad4u0Vko6ETi4/f47wErbD5YLqZgsYR8ii6RjPrbPAc5JsTe6IgWaWIhtbZ+8+b9WjbTgz8iHpgFpnR0peTMjeTMgeTORmneLAJwHbNv+F5pTrs4H3lQsokJyrPRwKfTGmFLsjU7IiFNMTNL7gVtpjtjuH3G6u1RMXZEW/BiU1tnNS97EoORNbI6kxbY3SFpve9nAvTnXapMl7LMKvVfS7DzrL/RebnuvQqFFB0m6gKbY+6n20lHARtvVFXujrBRoYmKSbhlyudpjtnPEZ4wjrbOzJW9iHMmbRnaLzNXb3SRpLfBy2ze113cHvlLzXqccK91IoTfGkWJvdE1GnGJskra1/aDt3UrH0gVpwY8JpXWW5E1MLHnTyG6RuXq/O04BrpR0c/v9rkDty19zrDTZLRJjWwOsADZK2mOg2LuxaGRRpRRoYhK/lPR14PPAlU77VY74jElkT0IjeROTSN6Q3SIj7Ciptw9vJc1x9dB8oFpOM9ZSqyxhny2F3phPir3RKRlxirFJegLNU5lXAH8OXAx8wfYPigZWWJ7MxHzSOjtc8ibmk7wZLbtFGpLupCnWDT0Fzfbp042oO3Ks9GzZLRLzkXQ7cFb77aOZXey93/ZZQ/+HEX8gKdDEgkjaCXg5zYv/E4Ev2j6tbFRlSHoEcBx5MhNDZE/CcMmbmE/yZrjsFpnR+xkpHUfX1byEPYXeGEeKvdE1GXGKBbF9h6RPAL8CTqZpN6+yQENa8GN+aZ0dLnkT80neDJfdIjOGfpiKHCvdJ7tFYhx32j6jdBARPSnQxETaBZ+HAa8EDgQuB94F/FvJuEroPZkB9h94CnOFpPWl4orOyZ6EPsmbGFPyZrjsFplRW7Fhs7KEfY4UemMcKfZGp6RAE2OT9HngucBVwOeAV9n+XdmoisqTmRjHNsBjmfsGYDHwuOmHU1zyJsaRvBnuWklLgVXAdTS7Rb5fNqQybN9dOoYOyhL22VLojXGk2Budkh00MTZJrwUutX1v6Vi6QNI628slHQpcCMx6MmM7L/yRPQkDkjcxjuTN5tW8WyTmlyXsjewWiYgtUQo08bCQtML22s3/za1Htr7HOHoFidJxdEXyJsaRvBlu2B6RSneLxDyyhL2RQm9EbIky4hQPl+OBY0oHMWVpwY9x5IPTbMmbGEfypk92i8SEsoS9kd0iEbHFSQdNxALlyUzE5JI3EZOTdBIzu0Xu6Lt1D7DKdo37RWJAjpWeTdIfZVdRRGxpFpUOIGILliczEZNL3kRMyPY5tncDTrG9W9+fZSnORJ817X83Stqjd7HWJewpzkTEligjTvGwqPSpeFrwIyaXvIlYuJWSTqTy3SIxUo6VjojYwmXEKcYm6c9s/3zEvYNtf3faMUVERNRC0gU0u0U+1V46Cthou7bdIjFElrBHRGz50kETk/iOpI8BZ9reCCDpScCZwF7AfiWDi4iI2Br1dosA+w/sEblC0vpScUXnZAl7RMQWLgWamMTTgQ8C17cLC58KnAx8CHhtycAiIiK2YmuAFbS7RWzfBPXuFomR7rR9RukgIiJi4VKgibHZ/hVwbFucWU1zksQBtm8vG1lERMRWLbtFYhxZwh4RsYXLDpoYm6SlwD8CzwTeCTyfZuHnSbavKBlbRETE1iq7RWIcOVY6ImLLlw6amMRa4Dzgze0s/LckPQ04T9Jttl9ZNryIiIitUnaLxGalOBMRseVLB02MTdKfjhpnknSM7VXTjikiImJrJ2mt7RWl44iIiIg/rBRoIiIiIjpM0jrby0vHEREREX9YKdBEREREdFh2i0RERNQhBZqIiIiIiIiIiMIWlQ4gIiIiIiIiIqJ2KdBERERERERERBSWAk1ERERERERERGEp0EREREREREREFJYCTUREREREREREYf8PYrlKQ3i11XEAAAAASUVORK5CYII=\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## Display summary statistics "],"metadata":{"id":"KTDLOzw691to"}},{"cell_type":"code","source":["data.describe()"],"metadata":{"id":"LfC3BOOP99IW","colab":{"base_uri":"https://localhost:8080/","height":364},"executionInfo":{"status":"ok","timestamp":1672678708468,"user_tz":-330,"elapsed":137,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"0b5bb756-f8a2-40a3-c8bb-958ebb4b7ef7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Cust_ID  X..Vmail.Messages        Churn  Total.Day.Minutes  \\\n","count  5000.000000        5000.000000  5000.000000        5000.000000   \n","mean   2600.500000           7.755200     0.141400         180.288900   \n","std    1443.520003          13.546393     0.348469          53.894699   \n","min     101.000000           0.000000     0.000000           0.000000   \n","25%    1350.750000           0.000000     0.000000         143.700000   \n","50%    2600.500000           0.000000     0.000000         180.100000   \n","75%    3850.250000          17.000000     0.000000         216.200000   \n","max    5100.000000          52.000000     1.000000         351.500000   \n","\n","       Total.Day.Calls  Total.Day.Charge  Total.Eve.Minutes  Total.Eve.Calls  \\\n","count      5000.000000       5000.000000        5000.000000      5000.000000   \n","mean        100.029400         30.649668         200.636560       100.191000   \n","std          19.831197          9.162069          50.551309        19.826496   \n","min           0.000000          0.000000           0.000000         0.000000   \n","25%          87.000000         24.430000         166.375000        87.000000   \n","50%         100.000000         30.620000         201.000000       100.000000   \n","75%         113.000000         36.750000         234.100000       114.000000   \n","max         165.000000         59.760000         363.700000       170.000000   \n","\n","       Total.Eve.Charge  Total.Night.Minutes  Total.Night.Calls  \\\n","count       5000.000000          5000.000000        5000.000000   \n","mean          17.054322           200.391620          99.919200   \n","std            4.296843            50.527789          19.958686   \n","min            0.000000             0.000000           0.000000   \n","25%           14.140000           166.900000          87.000000   \n","50%           17.090000           200.400000         100.000000   \n","75%           19.900000           234.700000         113.000000   \n","max           30.910000           395.000000         175.000000   \n","\n","       Total.Night.Charge  Total.Intl.Minutes  Total.Intl.Calls  \\\n","count         5000.000000         5000.000000       5000.000000   \n","mean             9.017732           10.261780          4.435200   \n","std              2.273763            2.761396          2.456788   \n","min              0.000000            0.000000          0.000000   \n","25%              7.510000            8.500000          3.000000   \n","50%              9.020000           10.300000          4.000000   \n","75%             10.560000           12.000000          6.000000   \n","max             17.770000           20.000000         20.000000   \n","\n","       Total.Intl.Charge  \n","count        5000.000000  \n","mean            2.771196  \n","std             0.745514  \n","min             0.000000  \n","25%             2.300000  \n","50%             2.780000  \n","75%             3.240000  \n","max             5.400000  "],"text/html":["\n","  <div id=\"df-327749f0-8a22-4d3d-9a03-6d5c120f9d54\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cust_ID</th>\n","      <th>X..Vmail.Messages</th>\n","      <th>Churn</th>\n","      <th>Total.Day.Minutes</th>\n","      <th>Total.Day.Calls</th>\n","      <th>Total.Day.Charge</th>\n","      <th>Total.Eve.Minutes</th>\n","      <th>Total.Eve.Calls</th>\n","      <th>Total.Eve.Charge</th>\n","      <th>Total.Night.Minutes</th>\n","      <th>Total.Night.Calls</th>\n","      <th>Total.Night.Charge</th>\n","      <th>Total.Intl.Minutes</th>\n","      <th>Total.Intl.Calls</th>\n","      <th>Total.Intl.Charge</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2600.500000</td>\n","      <td>7.755200</td>\n","      <td>0.141400</td>\n","      <td>180.288900</td>\n","      <td>100.029400</td>\n","      <td>30.649668</td>\n","      <td>200.636560</td>\n","      <td>100.191000</td>\n","      <td>17.054322</td>\n","      <td>200.391620</td>\n","      <td>99.919200</td>\n","      <td>9.017732</td>\n","      <td>10.261780</td>\n","      <td>4.435200</td>\n","      <td>2.771196</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1443.520003</td>\n","      <td>13.546393</td>\n","      <td>0.348469</td>\n","      <td>53.894699</td>\n","      <td>19.831197</td>\n","      <td>9.162069</td>\n","      <td>50.551309</td>\n","      <td>19.826496</td>\n","      <td>4.296843</td>\n","      <td>50.527789</td>\n","      <td>19.958686</td>\n","      <td>2.273763</td>\n","      <td>2.761396</td>\n","      <td>2.456788</td>\n","      <td>0.745514</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>101.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1350.750000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>143.700000</td>\n","      <td>87.000000</td>\n","      <td>24.430000</td>\n","      <td>166.375000</td>\n","      <td>87.000000</td>\n","      <td>14.140000</td>\n","      <td>166.900000</td>\n","      <td>87.000000</td>\n","      <td>7.510000</td>\n","      <td>8.500000</td>\n","      <td>3.000000</td>\n","      <td>2.300000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2600.500000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>180.100000</td>\n","      <td>100.000000</td>\n","      <td>30.620000</td>\n","      <td>201.000000</td>\n","      <td>100.000000</td>\n","      <td>17.090000</td>\n","      <td>200.400000</td>\n","      <td>100.000000</td>\n","      <td>9.020000</td>\n","      <td>10.300000</td>\n","      <td>4.000000</td>\n","      <td>2.780000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3850.250000</td>\n","      <td>17.000000</td>\n","      <td>0.000000</td>\n","      <td>216.200000</td>\n","      <td>113.000000</td>\n","      <td>36.750000</td>\n","      <td>234.100000</td>\n","      <td>114.000000</td>\n","      <td>19.900000</td>\n","      <td>234.700000</td>\n","      <td>113.000000</td>\n","      <td>10.560000</td>\n","      <td>12.000000</td>\n","      <td>6.000000</td>\n","      <td>3.240000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>5100.000000</td>\n","      <td>52.000000</td>\n","      <td>1.000000</td>\n","      <td>351.500000</td>\n","      <td>165.000000</td>\n","      <td>59.760000</td>\n","      <td>363.700000</td>\n","      <td>170.000000</td>\n","      <td>30.910000</td>\n","      <td>395.000000</td>\n","      <td>175.000000</td>\n","      <td>17.770000</td>\n","      <td>20.000000</td>\n","      <td>20.000000</td>\n","      <td>5.400000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-327749f0-8a22-4d3d-9a03-6d5c120f9d54')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-327749f0-8a22-4d3d-9a03-6d5c120f9d54 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-327749f0-8a22-4d3d-9a03-6d5c120f9d54');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":239}]},{"cell_type":"code","source":["data.describe(include=['category'])"],"metadata":{"id":"SamA5hTD-IA-","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1672678708473,"user_tz":-330,"elapsed":138,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"f18c6254-2154-4609-bfaa-46b02706eab7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       International.Plan Voice.Mail.Plan  X..customer.Service.Calls trainrows\n","count                5000            5000                       5000      5000\n","unique                  2               2                         10         2\n","top                    no              no                          1       Yes\n","freq                 4527            3677                       1786      3500"],"text/html":["\n","  <div id=\"df-c42186b5-c146-46e8-9196-28a84bb92910\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>International.Plan</th>\n","      <th>Voice.Mail.Plan</th>\n","      <th>X..customer.Service.Calls</th>\n","      <th>trainrows</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5000</td>\n","      <td>5000</td>\n","      <td>5000</td>\n","      <td>5000</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>10</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>4527</td>\n","      <td>3677</td>\n","      <td>1786</td>\n","      <td>3500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c42186b5-c146-46e8-9196-28a84bb92910')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c42186b5-c146-46e8-9196-28a84bb92910 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c42186b5-c146-46e8-9196-28a84bb92910');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":240}]},{"cell_type":"markdown","source":["## Checking for null values"],"metadata":{"id":"qkTGL8ZJ-QUB"}},{"cell_type":"code","source":["data.isna().sum()"],"metadata":{"id":"bOOwIC05-Q5R","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678708475,"user_tz":-330,"elapsed":138,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"f836289c-e13b-4b9e-c7dd-53a5437ec9a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Cust_ID                      0\n","International.Plan           0\n","Voice.Mail.Plan              0\n","X..Vmail.Messages            0\n","X..customer.Service.Calls    0\n","Churn                        0\n","trainrows                    0\n","Total.Day.Minutes            0\n","Total.Day.Calls              0\n","Total.Day.Charge             0\n","Total.Eve.Minutes            0\n","Total.Eve.Calls              0\n","Total.Eve.Charge             0\n","Total.Night.Minutes          0\n","Total.Night.Calls            0\n","Total.Night.Charge           0\n","Total.Intl.Minutes           0\n","Total.Intl.Calls             0\n","Total.Intl.Charge            0\n","dtype: int64"]},"metadata":{},"execution_count":241}]},{"cell_type":"markdown","source":["Checking Distribution in Trainrows"],"metadata":{"id":"nEA2N7zA--06"}},{"cell_type":"code","source":["data.trainrows.value_counts(normalize=True)*100"],"metadata":{"id":"H2SKqdUgXeO_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678708476,"user_tz":-330,"elapsed":126,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"ed94b5f1-8aa9-43ac-f5cc-90124b7d8ffb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Yes    70.0\n","No     30.0\n","Name: trainrows, dtype: float64"]},"metadata":{},"execution_count":242}]},{"cell_type":"markdown","source":["Splitting the data into train and test sets based on the column ‘trainrows’. Rows with **‘yes’** belong to\n","train data, those with **‘no’** belong to Test data."],"metadata":{"id":"l8QKQ4KjAj_h"}},{"cell_type":"code","source":["Train_data = data[data[\"trainrows\"]=='Yes']"],"metadata":{"id":"KjGul4dqcctq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Test_data=data[data['trainrows']=='No']"],"metadata":{"id":"cCe2Lkwv17_6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Checking the number of rows and columns in Train_data\n","Train_data.shape"],"metadata":{"id":"36gSbRg3soXb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678710435,"user_tz":-330,"elapsed":8,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"6860b639-435d-4111-ad90-7a44339781a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3500, 19)"]},"metadata":{},"execution_count":245}]},{"cell_type":"code","source":["#Checking the number of rows and columns in Test_data\n","Test_data.shape"],"metadata":{"id":"qHdaKR4Wsop1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678714142,"user_tz":-330,"elapsed":706,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"d591c469-6cf9-4afb-cc78-aae443757f39"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1500, 19)"]},"metadata":{},"execution_count":246}]},{"cell_type":"code","source":["#Checking the distribution of target variable in Train_data\n","Train_data['Churn'].value_counts()"],"metadata":{"id":"lgY71vOEbEc3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678714843,"user_tz":-330,"elapsed":36,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"92ba6f98-4257-4cf6-c23a-b82109dbe316"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    2998\n","1     502\n","Name: Churn, dtype: int64"]},"metadata":{},"execution_count":247}]},{"cell_type":"code","source":["Train_data['Churn'].value_counts(normalize=True)*100"],"metadata":{"id":"X0zEw2L5Q7ha","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678714844,"user_tz":-330,"elapsed":35,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"2a649c97-1701-46e1-aa47-347dcf704a08"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    85.657143\n","1    14.342857\n","Name: Churn, dtype: float64"]},"metadata":{},"execution_count":248}]},{"cell_type":"code","source":["Train_data.columns"],"metadata":{"id":"wtpYeAafQzun","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672678714845,"user_tz":-330,"elapsed":21,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"23b5dc27-4159-4699-90c2-152a63710104"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Cust_ID', 'International.Plan', 'Voice.Mail.Plan', 'X..Vmail.Messages',\n","       'X..customer.Service.Calls', 'Churn', 'trainrows', 'Total.Day.Minutes',\n","       'Total.Day.Calls', 'Total.Day.Charge', 'Total.Eve.Minutes',\n","       'Total.Eve.Calls', 'Total.Eve.Charge', 'Total.Night.Minutes',\n","       'Total.Night.Calls', 'Total.Night.Charge', 'Total.Intl.Minutes',\n","       'Total.Intl.Calls', 'Total.Intl.Charge'],\n","      dtype='object')"]},"metadata":{},"execution_count":249}]},{"cell_type":"code","source":["#Droping trainrows and ID columns form Train_data\n","Train_data.drop(['trainrows','Cust_ID'],axis=1,inplace=True)"],"metadata":{"id":"g7oAV50PXoEQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Train_data.columns"],"metadata":{"id":"AJa27oTWXoHV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672670913080,"user_tz":-330,"elapsed":420,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"08d2f25a-a7b7-4798-dab2-ad4bebf5f10e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['International.Plan', 'Voice.Mail.Plan', 'X..Vmail.Messages',\n","       'X..customer.Service.Calls', 'Churn', 'Total.Day.Minutes',\n","       'Total.Day.Calls', 'Total.Day.Charge', 'Total.Eve.Minutes',\n","       'Total.Eve.Calls', 'Total.Eve.Charge', 'Total.Night.Minutes',\n","       'Total.Night.Calls', 'Total.Night.Charge', 'Total.Intl.Minutes',\n","       'Total.Intl.Calls', 'Total.Intl.Charge'],\n","      dtype='object')"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["## Copy of Data"],"metadata":{"id":"iRDzHI_59Olu"}},{"cell_type":"code","source":["df=Train_data.copy()\n","df1=Train_data.copy()"],"metadata":{"id":"6MhKlYgHPxXr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(df.shape)\n","print(df1.shape)"],"metadata":{"id":"u_wTzPjBI-ON","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672670964787,"user_tz":-330,"elapsed":397,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"99de095d-2576-4062-8ab4-92025a196ccd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(3500, 17)\n","(3500, 17)\n"]}]},{"cell_type":"markdown","source":["## Dealing with Outliers"],"metadata":{"id":"zb3Os2439gqM"}},{"cell_type":"code","source":["def plotvariable(df1,variable):\n","   plt.figure(figsize=(16,4))\n","   #histogram\n","   plt.subplot(1,2,1)\n","   plt.hist(df1[variable],alpha=0.5)\n","\n","   #boxplot\n","   plt.subplot(1,2,2)\n","   sns.boxplot(df1[variable],palette='Purples')\n","   plt.show()"],"metadata":{"id":"1Gi8auTuXUIK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plotvariable(df1,'X..Vmail.Messages')"],"metadata":{"id":"RUaA-YZwYbkL","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671087955,"user_tz":-330,"elapsed":514,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"0d3609f1-83e8-4d6c-d651-0bb0fb744a01"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["def remove_outlier(col):\n","  sorted(col)\n","  Q1,Q3=col.quantile([0.25,0.75])\n","  IQR=Q3-Q1\n","  lower_range=Q1-(1.5*IQR)\n","  upper_range=Q3+(1.5*IQR)\n","  return lower_range,upper_range"],"metadata":{"id":"lFYu5qmCeUJP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['X..Vmail.Messages'])\n","df1['X..Vmail.Messages']=np.where(df1['X..Vmail.Messages']>upper,upper,df1['X..Vmail.Messages'])\n","df1['X..Vmail.Messages']=np.where(df1['X..Vmail.Messages']<lower,lower,df1['X..Vmail.Messages'])"],"metadata":{"id":"xWzw2zJ3jOsk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"I_E_-A4OsXKy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671140732,"user_tz":-330,"elapsed":15,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"bc7119f7-b03a-4c1d-fd92-aeae5b39f08f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: -24.0\n","The maximum point is: 40.0\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'X..Vmail.Messages')\n"],"metadata":{"id":"hlEbxlgBqaGk","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671144099,"user_tz":-330,"elapsed":478,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"05ca86c3-266f-4000-d0a4-1233d35ad906"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Day.Minutes')"],"metadata":{"id":"SoRl51gOYbrB","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671152191,"user_tz":-330,"elapsed":1141,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"5e051be8-2715-4b1a-f685-fd84b3184039"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Day.Minutes'])\n","df1['Total.Day.Minutes']=np.where(df1['Total.Day.Minutes']>upper,upper,df1['Total.Day.Minutes'])\n","df1['Total.Day.Minutes']=np.where(df1['Total.Day.Minutes']<lower,lower,df1['Total.Day.Minutes'])"],"metadata":{"id":"smuor6Q9xZ_y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"QdFED1hSxaam","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671159586,"user_tz":-330,"elapsed":17,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"4d3f8ebf-55d8-49cd-91cc-2af12879df46"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 35.09999999999998\n","The maximum point is: 325.7\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Day.Minutes')"],"metadata":{"id":"kuOfII35yBMO","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671166366,"user_tz":-330,"elapsed":458,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"e8b6628e-3112-4256-f681-cc7b78b38667"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Day.Calls')"],"metadata":{"id":"Ls2vHzf5YbuW","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671173203,"user_tz":-330,"elapsed":456,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"04779c0b-2939-4d63-e17a-55639b69c01b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Day.Calls'])\n","df1['Total.Day.Calls']=np.where(df1['Total.Day.Calls']>upper,upper,df1['Total.Day.Calls'])\n","df1['Total.Day.Calls']=np.where(df1['Total.Day.Calls']<lower,lower,df1['Total.Day.Calls'])"],"metadata":{"id":"Ba_Ss1S-yu44"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"oGotUSi_yvW9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671183841,"user_tz":-330,"elapsed":405,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"859258d6-466f-46e3-de01-d2125bccd8d3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 46.5\n","The maximum point is: 154.5\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Day.Calls')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"Yr3-yf_D-Pmt","executionInfo":{"status":"ok","timestamp":1672671213603,"user_tz":-330,"elapsed":1276,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"1814d067-6ad1-49d9-84e0-40a17492262b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Day.Charge')"],"metadata":{"id":"K_QnVUYkYbxz","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671226305,"user_tz":-330,"elapsed":1347,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"5f6552bc-6b99-43a8-8df4-2376024897bc"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA6UAAAEGCAYAAACdNjMvAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAa8ElEQVR4nO3df7Be9V0n8PeH3AICSgpNMSWpFynIoNtfGypM3a4FcZrake4MdnHUhg6zOE7RAnWVup113ZlOdbJraEe3LkJLulO1Nf4o6zR1GUp37QpI0lJbCiJgam4IJXVLbGEoJnz3j+ck3vwg94bcm2/uc1+vmcw95/t8zzmfb3Jyzn0/55znqdZaAAAAoIfjehcAAADA4iWUAgAA0I1QCgAAQDdCKQAAAN0IpQAAAHQz0buAJHnJS17SJicne5cBwJjYvHnz11try3rXsZA5NwMwlw51bj4mQunk5GQ2bdrUuwwAxkRVfbV3DQudczMAc+lQ52a37wIAANCNUAoAAEA3QikAAADdCKUAAAB0I5QCAADQjVAKAABAN0IpAAAA3QilAAAAdCOUAgAA0M1E7wLgWLXu9od6l3CA6y49t3cJAAAwp1wpBQAAoBuhFAAAgG6EUgAAALoRSgEAAOhGKAUAAKAboRQAAIBufCUMLCC+pgYAgHHjSikAAADdCKUAAAB04/ZdAAAWnA0bNmRqaqp3GfvYsWNHkmTZsmWdKzm4FStW5PLLL+9dBhxAKAUAYMGZmprKo49uyUknLe1dyl5PP/1UkmT37hd1ruRATz/9ZO8S4HkJpQAALEgnnbQ033/eJb3L2Ov+B+9IkmOqpj321AbHolk9U1pV11XV/VX15ar6/ao6sarOqqp7qurhqvp4VR0/9D1hmH94eH1yPgcAAADAwjVjKK2qM5P8QpJVrbUfSLIkyRVJfiPJutbaK5J8I8lVwyJXJfnG0L5u6AcAAAAHmO2n704k+Y6qmkhyUpLtSS5OsmF4fX2Stw7Tlw3zGV6/pKpqbsoFAABgnMwYSltr25L8lyR/n1EY3Zlkc5InW2u7hm5TSc4cps9MsnVYdtfQ//T911tVV1fVpqratOeTygAAAFhcZnP77oszuvp5VpKXJTk5yZuOdMOttZtaa6taa6uO1Y/NBgAAYH7N5vbdH0nyd621Ha21f0ryx0len2TpcDtvkqxIsm2Y3pZkZZIMr5+a5B/mtGoAAADGwmxC6d8nubCqThqeDb0kyVeS3Jlkz7fvrknyyWH6tmE+w+ufaa21uSsZAACAcTGbZ0rvyegDiz6f5EvDMjcl+eUk11fVwxk9M3rLsMgtSU4f2q9PcsM81A0AAMAYmJi5S9Ja+9Ukv7pf86NJXneQvs8k+YkjLw0AAIBxN9uvhAEAAIA5J5QCAADQjVAKAABAN0IpAAAA3QilAAAAdCOUAgAA0I1QCgAAQDdCKQAAAN0IpQAAAHQjlAIAANCNUAoAAEA3QikAAADdCKUAAAB0I5QCAADQjVAKAABAN0IpAAAA3QilAAAAdCOUAgAA0I1QCgAAQDdCKQAAAN0IpQAAAHQjlAIAANCNUAoAAEA3QikAAADdCKUAAAB0I5QCAADQjVAKAABAN0IpAAAA3QilAAAAdCOUAgAA0I1QCgAAQDdCKQAAAN0IpQDAorRhw4Zs2LChdxkAszaux62J3gUAAPQwNTXVuwSAwzKuxy1XSgEAAOhGKAUAAKAboRQAAIBuPFMKHJF1tz/Uu4QDXHfpub1LAABgllwpBQAAoJtZhdKqWlpVG6rqwap6oKouqqrTqur2qvrb4eeLh75VVR+sqoer6q+r6rXzOwQAAAAWqtleKf1Akk+31s5L8qokDyS5IckdrbVzktwxzCfJ6iTnDH+uTvKhOa0YAACAsTFjKK2qU5O8IcktSdJae7a19mSSy5KsH7qtT/LWYfqyJB9tI3cnWVpVy+e8cgAAABa82VwpPSvJjiQfqaovVNXNVXVykjNaa9uHPo8nOWOYPjPJ1mnLTw1t+6iqq6tqU1Vt2rFjxwsfAQAAAAvWbELpRJLXJvlQa+01SZ7KP9+qmyRprbUk7XA23Fq7qbW2qrW2atmyZYezKAAAAGNiNqF0KslUa+2eYX5DRiH1a3tuyx1+PjG8vi3JymnLrxjaAAAAYB8zhtLW2uNJtlbV9w1NlyT5SpLbkqwZ2tYk+eQwfVuStw+fwnthkp3TbvMFAACAvSZm2e/nk3ysqo5P8miSd2QUaD9RVVcl+WqStw19P5XkzUkeTvL00BcAAAAOMKtQ2lq7L8mqg7x0yUH6tiTvPMK6AAAAWARm+z2lAAAAMOeEUgAAALoRSgEAAOhGKAUAAKAboRQAAIBuhFIAAAC6EUoBAADoRigFAACgG6EUAACAboRSAAAAuhFKAQAA6EYoBQAAoBuhFAAAgG6EUgAAALoRSgEAAOhGKAUAAKCbid4FQJKsu/2h3iUAAAAduFIKAABAN0IpAAAA3QilAAAAdCOUAgAA0I1QCgAAQDdCKQAAAN0IpQAAAHQjlAIA82br1q1597vfnQcffDDr1q3Lzp07kyQ7d+7M2rVr8773vS/XX399pqamZrW+nTt37rOemfquXbs2a9eu3We7s10e4Fj01FNP5ZprrsmmTZuybt26TE1NZd26ddm6dWvWrl2b97///Vm7du3e9hd6vNtz/J7t8flICKUAwLxZv359nnnmmdxyyy155JFHsnHjxiTJxo0bs2XLljz22GP59re/nVtvvXVW69u4ceM+65mp75YtW7Jly5Z9tjvb5QGORdu3b09rLR/96EfzyCOP5NZbb80jjzyS9evXZ8uWLZmamsqWLVv2tr/Q492e4/dsj89HQigFAObF1q1bs3379iTJ008/ndZa7r777mzdujV33XXXPn23b98+47vxO3fuzN133713PYd693/nzp37bOOuu+7K1q1b91l+165dRzA6gKPvqaeeSmstSbJ79+601vaG1D3H2z32tM90vDyY6cfv2Ryfj9TEvK4dAFi01q9ff0Dbc889l/Xr1x80EN56661573vf+7zr27hxY5577rm969m4cWOuuOKK5+27e/fuvfO7du3K+vXr91l+27ZtWbJkSW688cbDGhfHhqmpqXhfYfaeeeZbmZr6lv19gXvssccOe5mZjpcHs//xe6bj85FypRQASJJU1dVVtamqNu3YseOI17f/u/bJ6J39g7U/X//p7r333r1Bc/fu3bn33nsP2XfP1YTp65++/LPPPnvI7QGMg5mOlwdzsKuu88mVUgAgSdJauynJTUmyatWqNkP3GS1fvvyAX2SWLFmSl770pQf9BWf58uWHXN8FF1yQv/zLv8zu3buzZMmSXHDBBYfs+7nPfW6fYLp8+fI88cQTe5c/5ZRT8tKXvjTXXnvtYY6MY8GNN96Yxx9/sncZC8aJJ56S7/7upfb3Be6aa6454A23mcx0vDyY/Y/fMx2fj5QrpQDAvFizZs0Bbccdd1zWrFmTiYkD3xe/8sorD7m+1atX57jjjtu7ntWrVx+y75IlS/bOT0xMZM2aNfssf9ppp81mGADHjBcSDmc6Xh7M/sfvmY7PR0ooBQDmxcqVK/f+AnXSSSelqnLhhRdm5cqVueiii/bpu3z58qxYseKQ6zv11FNz4YUX7l3Pqaeeesi+07dx0UUXZeXKlfssf7BgDHAsO/nkk1NVSUZXQKsqy5cv3/tzuj3tMx0vD2b68Xs2x+cjJZQCAPNmzZo1OfHEE3PVVVfl7LPP3vtu/erVqzM5OZmXvexlOeGEE2b9Lvzq1av3Wc9MfScnJzM5ObnPdme7PMCxaE/YfPvb356zzz47V155Zc4+++ysWbMmk5OTWbFiRSYnJ/e2v9Dj3Z7j93xfJU2SOtx7kufDqlWr2qZNm3qXQUfrbn+odwmMkesuPbd3CXRWVZtba6t617GQLYZz855PIfWM3cK055nS7z/vkt6l7HX/g3ckyTFV0x73P3iHZ0rHwEI+bh3q3OxKKQAAAN0IpQAAAHQjlAIAANCNUAoAAEA3sw6lVbWkqr5QVX82zJ9VVfdU1cNV9fGqOn5oP2GYf3h4fXJ+SgcAAGChO5wrpe9K8sC0+d9Isq619ook30hy1dB+VZJvDO3rhn4AAABwgFmF0qpakeTHktw8zFeSi5NsGLqsT/LWYfqyYT7D65fUnm94BQAAgGlme6X0xiS/lOS5Yf70JE+21nYN81NJzhymz0yyNUmG13cO/fdRVVdX1aaq2rRjx44XWD4AAAAL2YyhtKrekuSJ1trmudxwa+2m1tqq1tqqZcuWzeWqAQAAWCAmZtHn9Ul+vKrenOTEJN+V5ANJllbVxHA1dEWSbUP/bUlWJpmqqokkpyb5hzmvHAAAgAVvxiulrbX3tNZWtNYmk1yR5DOttZ9KcmeSy4dua5J8cpi+bZjP8PpnWmttTqsGAABgLBzJ95T+cpLrq+rhjJ4ZvWVovyXJ6UP79UluOLISAQAAGFezuX13r9baZ5N8dph+NMnrDtLnmSQ/MQe1AQAAMOaO5EopAAAAHBGhFAAAgG6EUgAAALoRSgEAAOhGKAUAAKAboRQAAIBuhFIAAAC6EUoBAADoRigFAACgG6EUAACAboRSAAAAuhFKAQAA6EYoBQAAoBuhFAAAgG6EUgAAALoRSgEAAOhGKAUAAKAboRQAAIBuhFIAAAC6EUoBAADoRigFAACgG6EUAACAboRSAAAAuhFKAQAA6GaidwEAc23d7Q/1LuEA1116bu8SAACOSUIpALAorVixoncJAIdlXI9bQikAsChdfvnlvUsAOCzjetzyTCkAAADdCKUAAAB0I5QCAADQjVAKAABAN0IpAAAA3QilAAAAdCOUAgAA0I1QCgAAQDdCKQAAAN0IpQAAAHQjlAIAANCNUAoAAEA3M4bSqlpZVXdW1Veq6v6qetfQflpV3V5Vfzv8fPHQXlX1wap6uKr+uqpeO9+DAAAAYGGazZXSXUne3Vo7P8mFSd5ZVecnuSHJHa21c5LcMcwnyeok5wx/rk7yoTmvGgAAgLEwYyhtrW1vrX1+mP5mkgeSnJnksiTrh27rk7x1mL4syUfbyN1JllbV8jmvHAAAgAVv4nA6V9VkktckuSfJGa217cNLjyc5Y5g+M8nWaYtNDW3bp7Wlqq7O6EpqXv7ylx9m2RyJdbc/1LsEAACAJIfxQUdVdUqSP0pybWvtH6e/1lprSdrhbLi1dlNrbVVrbdWyZcsOZ1EAAADGxKxCaVW9KKNA+rHW2h8PzV/bc1vu8POJoX1bkpXTFl8xtAEAAMA+ZvPpu5XkliQPtNZ+c9pLtyVZM0yvSfLJae1vHz6F98IkO6fd5gsAAAB7zeaZ0tcn+ZkkX6qq+4a2X0ny60k+UVVXJflqkrcNr30qyZuTPJzk6STvmNOKAQAAGBszhtLW2ueS1PO8fMlB+rck7zzCugAAAFgEZv1BRwAAADDXhFIAAAC6EUoBAADoRigFAACgG6EUAACAboRSAAAAuhFKAQAA6EYoBQAAoBuhFAAAgG6EUgAAALoRSgEAAOhGKAUAAKAboRQAAIBuhFIAAAC6EUoBAADoRigFAACgG6EUAACAboRSAAAAuhFKAQAA6GaidwEAAPBCPP30k7n/wTt6l7HX008/mSTHVE17jGpb2rsMOCihFACABWfFihW9SzjAjh3/lCRZtuxYDH9Lj8m/M0iEUoCjYt3tD/Uu4QDXXXpu7xIAXrDLL7+8dwnAHPFMKQAAAN0IpQAAAHQjlAIAANCNZ0rn2bH4HBkAAMCxwpVSAAAAuhFKAQAA6EYoBQAAoBuhFAAAgG6EUgAAALoRSgEAAOhGKAUAAKAboRQAAIBuhFIAAAC6EUoBAADoRigFAACgm4neBQDQx7rbH+pdwj6uu/Tc3iUAAB24UgoAAEA383KltKrelOQDSZYkubm19uvzsZ2DOdbe+QcAAOD5zfmV0qpakuS3k6xOcn6Sn6yq8+d6OwAAACx883H77uuSPNxae7S19mySP0hy2TxsBwAAgAVuPm7fPTPJ1mnzU0l+cP9OVXV1kquH2W9V1d/M0fZfkuTrc7SuhWIxjjkx7sVkMY45WWTjvv6fJ+di3N9zhMsveps3b/56VX11jla3qPblwWIcc2Lci8liHHNi3Efiec/N3T59t7V2U5Kb5nq9VbWptbZqrtd7LFuMY06Mu3cdR9NiHHNi3L3rWOxaa8vmal2L8d90MY45Me7edRxNi3HMiXHP1/rn4/bdbUlWTptfMbQBAADAPuYjlN6b5JyqOquqjk9yRZLb5mE7AAAALHBzfvtua21XVV2T5M8z+kqYD7fW7p/r7RzCnN8SvAAsxjEnxr2YLMYxJ8bN+FiM/6aLccyJcS8mi3HMiXHPi2qtzef6AQAA4HnNx+27AAAAMCtCKQAAAN2MTSitqjdV1d9U1cNVdUPveuZLVX24qp6oqi9Pazutqm6vqr8dfr64Z41zrapWVtWdVfWVqrq/qt41tI/7uE+sqr+qqi8O4/61of2sqrpn2Nc/Pnyg2NipqiVV9YWq+rNhfuzHXVVbqupLVXVfVW0a2sZ9P19aVRuq6sGqeqCqLhr3MS8mzs3jux87Nzs3D/NjP27n5qNzbh6LUFpVS5L8dpLVSc5P8pNVdX7fqubNrUnetF/bDUnuaK2dk+SOYX6c7Ery7tba+UkuTPLO4d933Mf97SQXt9ZeleTVSd5UVRcm+Y0k61prr0jyjSRXdaxxPr0ryQPT5hfLuN/YWnv1tO8CG/f9/ANJPt1aOy/JqzL6Nx/3MS8Kzs1jvx87Nzs3J4tn3M7N8zzmsQilSV6X5OHW2qOttWeT/EGSyzrXNC9aa/8nyf/br/myJOuH6fVJ3npUi5pnrbXtrbXPD9PfzOg/xpkZ/3G31tq3htkXDX9akouTbBjax27cSVJVK5L8WJKbh/nKIhj38xjb/byqTk3yhiS3JElr7dnW2pMZ4zEvMs7NY7wfOzcncW52bh4Zq3H3OjePSyg9M8nWafNTQ9ticUZrbfsw/XiSM3oWM5+qajLJa5Lck0Uw7uE2mfuSPJHk9iSPJHmytbZr6DKu+/qNSX4pyXPD/OlZHONuSf5XVW2uqquHtnHez89KsiPJR4bbwW6uqpMz3mNeTJybF8l+7Nzs3DzMj+u4nZuPwrl5XEIpgzb6jp+x/J6fqjolyR8luba19o/TXxvXcbfWdrfWXp1kRUZXHc7rXNK8q6q3JHmitba5dy0d/FBr7bUZ3e74zqp6w/QXx3A/n0jy2iQfaq29JslT2e92oDEcM4vQOO/Hzs3OzYuAc/NRODePSyjdlmTltPkVQ9ti8bWqWp4kw88nOtcz56rqRRmd9D7WWvvjoXnsx73HcNvEnUkuSrK0qiaGl8ZxX399kh+vqi0Z3e53cUbPNoz7uNNa2zb8fCLJn2T0y8447+dTSaZaa/cM8xsyOhGO85gXE+fmMd+PnZudmzP+43ZuPkrn5nEJpfcmOWf4BLDjk1yR5LbONR1NtyVZM0yvSfLJjrXMueGZhVuSPNBa+81pL437uJdV1dJh+juSXJrRMzt3Jrl86DZ2426tvae1tqK1NpnR/+XPtNZ+KmM+7qo6uaq+c890kh9N8uWM8X7eWns8ydaq+r6h6ZIkX8kYj3mRcW4e4/3Yudm52bl5PPfzXufmGl19Xfiq6s0Z3eu+JMmHW2vv61zSvKiq30/yw0lekuRrSX41yZ8m+USSlyf5apK3tdb2/8CFBauqfijJXyT5Uv75OYZfyejZlXEe9yszepB8SUZvIH2itfafq+p7M3qX8rQkX0jy0621b/erdP5U1Q8n+cXW2lvGfdzD+P5kmJ1I8nuttfdV1ekZ7/381Rl9aMbxSR5N8o4M+3vGdMyLiXPz+O7Hzs3Ozc7NY72fH/Vz89iEUgAAABaecbl9FwAAgAVIKAUAAKAboRQAAIBuhFIAAAC6EUoBAADoRigFAOCYU1WnV9V9w5/Hq2rbtPnj9+t7bVWdNIt1fraqVh2k/daq+ruq+mJVPVRVH62qFXMwhu+uqj+oqkeqanNVfaqqzq2qH66qPzvS9cO4EEoBADjmtNb+obX26tbaq5P8TpJ1e+Zba8/u1/3aJDOG0hn8+9baq5J8X0bfufmZ/cPv4aiqyug7Lj/bWju7tfYvk7wnyRlHWGeqauJI1wHHEqEUAIAFoaouqaovVNWXqurDVXVCVf1CkpclubOq7hz6faiqNlXV/VX1a4ezjTayLsnjSVY/3/qq6uKq+tNptV1aVX8ybVVvTPJPrbXfmbbuL7bW/mKYPaWqNlTVg1X1sSHEpqr+Y1XdW1VfrqqbprV/tqpurKpNSd5VVRdU1V8PV47XVtWXh35Lhvl7h9d/9nDGDz0IpQAALAQnJrk1yb9trf2LJBNJfq619sEkjyV5Y2vtjUPf/9BaW5XklUn+dVW98gVs7/NJzjvE+u5Mcl5VLRv6vCPJh6ct/wNJNh9i/a/J6Arv+Um+N8nrh/bfaq1d0Fr7gSTfkeQt05Y5vrW2qrX2X5N8JMnPDleSd0/rc1WSna21C5JckOTfVdVZhzNwONqEUgAAFoIlSf6utfbQML8+yRuep+/bqurzGd2G+/0ZBb/DVYdaX2utJfkfSX66qpYmuSjJxsNY/1+11qZaa88luS/J5ND+xqq6p6q+lOTiYXt7fDxJhu19Z2vtrqH996b1+dEkb6+q+5Lck+T0JOccRl1w1LkfHQCAsTFcFfzFJBe01r5RVbdmdJX1cL0myR0zrO8jSf5nkmeS/GFrbde05e9Pcvkh1v/tadO7k0xU1YlJ/luSVa21rVX1n/ar/alZ1F1Jfr619uez6AvHBFdKAQBYCHYnmayqVwzzP5Pkfw/T30zyncP0d2UU3nZW1RkZngudrRr5hSTLk3z6UOtrrT2W0a3D780ooE73mSQnVNXV09b9yqr6V4fY/J4A+vWqOiXPE2pba08m+WZV/eDQdMW0l/88yc9V1YuGbZ5bVScfaszQm1AKAMBC8ExGz23+4XBr63MZfSpvktyU5NNVdWdr7YsZ3Wb7YEa3tf7fg62sqm7e7+th1lbVF5M8lNGzmG9srT07i/V9LMnW1toDVfWyqvpUMvrApCT/JsmPDF8Jc3+S92f0AUoHNYTN303y5YzC5b2H+Pu4KsnvDrfpnpxk59B+c5KvJPn88OFH/z3ujuQYV6P/LwAAwOGqqt9K8oXW2i1HebuntNa+NUzfkGR5a+1dR7MGmCveNQEAgBegqjZndGvvuzts/seq6j0Z/T7/1SRXdqgB5oQrpQAAAHTjmVIAAAC6EUoBAADoRigFAACgG6EUAACAboRSAAAAuvn/9CQQqOciG9EAAAAASUVORK5CYII=\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Day.Charge'])\n","df1['Total.Day.Charge']=np.where(df1['Total.Day.Charge']>upper,upper,df1['Total.Day.Charge'])\n","df1['Total.Day.Charge']=np.where(df1['Total.Day.Charge']<lower,lower,df1['Total.Day.Charge'])"],"metadata":{"id":"cRdwdJml0StD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"j5MPp_J-0Sy5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671236733,"user_tz":-330,"elapsed":13,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"17e291c5-0d02-485c-a910-d8b2331a8bb8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 5.970000000000002\n","The maximum point is: 55.37\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Day.Charge')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"nXckY-j3-bG3","executionInfo":{"status":"ok","timestamp":1672671262481,"user_tz":-330,"elapsed":922,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"06a054cf-6747-46f3-cf89-d374467dfed6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Eve.Minutes')"],"metadata":{"id":"C9ukXFFVYb1P","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671282503,"user_tz":-330,"elapsed":453,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"19d4baad-6dce-49d8-b2b8-bb920a356f73"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Eve.Minutes'])\n","df1['Total.Eve.Minutes']=np.where(df1['Total.Eve.Minutes']>upper,upper,df1['Total.Eve.Minutes'])\n","df1['Total.Eve.Minutes']=np.where(df1['Total.Eve.Minutes']<lower,lower,df1['Total.Eve.Minutes'])"],"metadata":{"id":"-RQwr0gt0at7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"QKTFf2jI0ax-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671288005,"user_tz":-330,"elapsed":16,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"9bee93f1-320c-49ba-d247-1567238fcb94"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 64.43750000000001\n","The maximum point is: 337.3375\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Eve.Minutes')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"SiC8s8lZ-m1i","executionInfo":{"status":"ok","timestamp":1672671308391,"user_tz":-330,"elapsed":734,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"0e14d054-7ca3-42b7-9821-090c3ce04c0f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Eve.Calls')"],"metadata":{"id":"ZnG0VvK3Yb5q","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671322795,"user_tz":-330,"elapsed":462,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"4f8acf83-4f22-4a97-bf5e-0ece90aa9102"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Eve.Calls'])\n","df1['Total.Eve.Calls']=np.where(df1['Total.Eve.Calls']>upper,upper,df1['Total.Eve.Calls'])\n","df1['Total.Eve.Calls']=np.where(df1['Total.Eve.Calls']<lower,lower,df1['Total.Eve.Calls'])"],"metadata":{"id":"EXMm7uzn1ZWR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"Lq2az5c41Zf8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671329077,"user_tz":-330,"elapsed":509,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"9abe4299-f095-4dcc-daa3-cce71dc4afa4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 46.5\n","The maximum point is: 154.5\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Eve.Calls')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"HRjI1lVz-xAy","executionInfo":{"status":"ok","timestamp":1672671348095,"user_tz":-330,"elapsed":722,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"f5e23964-be9e-4962-9dd5-e2132e67a465"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Eve.Charge')"],"metadata":{"id":"f0ZDKWe4fLww","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671359642,"user_tz":-330,"elapsed":920,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"a0b6fff7-cab2-48ae-dd19-218576d2f991"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Eve.Charge'])\n","df1['Total.Eve.Charge']=np.where(df1['Total.Eve.Charge']>upper,upper,df1['Total.Eve.Charge'])\n","df1['Total.Eve.Charge']=np.where(df1['Total.Eve.Charge']<lower,lower,df1['Total.Eve.Charge'])"],"metadata":{"id":"7V5fWUOX11Do"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"5tDFkmKm11Sc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671365050,"user_tz":-330,"elapsed":405,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"1b27a06b-8bac-43a5-9785-ac4732e339df"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 5.473750000000001\n","The maximum point is: 28.68375\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Eve.Charge')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"Pmrr4DsP-5hr","executionInfo":{"status":"ok","timestamp":1672671384944,"user_tz":-330,"elapsed":557,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"0acce923-3726-4e48-b809-754bf6335788"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Night.Minutes')"],"metadata":{"id":"mE7H6nSdfL2A","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671396427,"user_tz":-330,"elapsed":750,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"a34ce6a2-8fc3-47bd-849a-da1ac46f3e3a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"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wGFGCqWttbuSbFhg1cULtG1JXn2cdQEAAPA4MOrfKQUAAIBlJ5QCAADQjVAKAABAN0IpAAAA3QilAAAAdCOUAgAA0I1QCgAAQDdCKQAAAN0IpQAAAHQjlAIAANCNUAoAAEA3QikAAADdCKUAAAB0I5QCAADQjVAKAKyY/fv359prr821116be++9N6973esyNTWVPXv2zE7Pb7dnz57Z6f379x+2vy1bthy2HKCXuePX1NTU7Bi12Lg2NTW14Bg3f3ybu/3M/kYZ/460n6Pp14kab4VSAGDF7NixI/fff3/uv//+3HjjjXnkkUeydevWbNu2bXZ6frtt27bNTu/YseOw/X32s589bDlAL3PHr61bt86OUYuNa1u3bl1wjJs/vs3dfmZ/o4x/R9rP0fTrRI23QikAsCL279+fnTt3zs4fOHAgSbJ3797s3bt3dvree+89pN3MuiTZuXPnIb/tv+2229Jay2233ZZHH330RHQDYFHzx7m9e/emtZadO3fmwx/+8CHLF5qeGePmj29TU1OH7Hfnzp3ZuXPn7PrF7l7O38+ePXsO288odz7n72el75auXdG9AwCPWzt27MjBgweP2O7GG29ctN2jjz6aHTt25LLLLsuOHTvy2GOPJUkee+yxPPDAA1mzZk2uu+66Za2b5TU1NRW/P1jcI498NVNTX/U6XuWmpqZyyimnHLZ8x44dC/6C7ODBg2mtHXG/Bw8enL0TOXd827p16yH7nTv92GOPzY6LC9Uzdz/btm07ZHydO6YuZf5+RtnmeLhTCgAkSarqqqraVVW79u3bd9z7u+OOO0b6oezAgQNLtrvjjjtmv8/8cHXw4MF8/etfP+4aAY7HzPg03yhj30y7O+6447Dxbe7d1PkOHjy46HEX2s/8Whbbdqn9jLLN8XCnFABIkrTWrk9yfZJs2LBhtJ+olnDhhRfmQx/60BF/ODv11FPzta99bdF2F1544ez3D3/4wzl48GDWrFmT0047LU996lPzmte85nhLZQVdd911efDBh3uXsWo98Ymn5du//Qyv41VusTvZF154YT74wQ8etryqRgqmVTU7xs0d35761KcuGkzXrFkzu81C9czfz4MPPnhILYttu9R+RtnmeLhTCgCsiE2bNmXNmjVHbPeqV71q0XZr167Npk2bZvd30knTP7qcdNJJOfPMM5evWIBjsGnT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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Night.Minutes'])\n","df1['Total.Night.Minutes']=np.where(df1['Total.Night.Minutes']>upper,upper,df1['Total.Night.Minutes'])\n","df1['Total.Night.Minutes']=np.where(df1['Total.Night.Minutes']<lower,lower,df1['Total.Night.Minutes'])"],"metadata":{"id":"QQUgTURE2h51"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"z6kOWVdK2iIW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671404243,"user_tz":-330,"elapsed":18,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"10662382-f92d-431c-9300-6eee2a84cb90"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 64.09999999999998\n","The maximum point is: 337.7\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Night.Calls')"],"metadata":{"id":"1Qk13Q8CfL6M","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671424906,"user_tz":-330,"elapsed":436,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"42619443-8864-477c-a1ea-b06569f904b7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Night.Calls'])\n","df1['Total.Night.Calls']=np.where(df1['Total.Night.Calls']>upper,upper,df1['Total.Night.Calls'])\n","df1['Total.Night.Calls']=np.where(df1['Total.Night.Calls']<lower,lower,df1['Total.Night.Calls'])"],"metadata":{"id":"rMWsS6ZP3Nv8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"zwIAm7bA3N_t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671432297,"user_tz":-330,"elapsed":14,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"abe24c53-507f-49db-f2d7-a5ceb4984e9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 48.0\n","The maximum point is: 152.0\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Night.Calls')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"9MBLesKv_KTv","executionInfo":{"status":"ok","timestamp":1672671455934,"user_tz":-330,"elapsed":713,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"dff6d1a9-a9c2-4989-9dd0-63605aa869fd"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Night.Charge')"],"metadata":{"id":"NAjoSnYJfL-q","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671471509,"user_tz":-330,"elapsed":726,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"d9a88374-7350-49d3-aadb-3253a88acc66"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Night.Charge'])\n","df1['Total.Night.Charge']=np.where(df1['Total.Night.Charge']>upper,upper,df1['Total.Night.Charge'])\n","df1['Total.Night.Charge']=np.where(df1['Total.Night.Charge']<lower,lower,df1['Total.Night.Charge'])"],"metadata":{"id":"IEetZwf73vkN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"aQQEP8Lk3v1j","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671476049,"user_tz":-330,"elapsed":12,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"7086672e-6392-4d78-cfc0-27bae0e658ae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 2.88\n","The maximum point is: 15.2\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Night.Charge')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"9gUBHR34_cZj","executionInfo":{"status":"ok","timestamp":1672671528253,"user_tz":-330,"elapsed":939,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"004f1e84-6ae1-4d4f-cdf4-5692dd54af3a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Intl.Minutes')"],"metadata":{"id":"1PPFOZ9-fMKr","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671538719,"user_tz":-330,"elapsed":30,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"7dbac913-250b-4fd0-9589-1b2c22959703"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Intl.Minutes'])\n","df1['Total.Intl.Minutes']=np.where(df1['Total.Intl.Minutes']>upper,upper,df1['Total.Intl.Minutes'])\n","df1['Total.Intl.Minutes']=np.where(df1['Total.Intl.Minutes']<lower,lower,df1['Total.Intl.Minutes'])"],"metadata":{"id":"O5-r0sw54uuv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"wiB235ZD4u8S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671542523,"user_tz":-330,"elapsed":11,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"6a29fa7d-c09c-41f7-e96a-c64ae83636c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 3.1000000000000005\n","The maximum point is: 17.5\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Intl.Minutes')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"01RrF_XE_k3j","executionInfo":{"status":"ok","timestamp":1672671562242,"user_tz":-330,"elapsed":933,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"1d8c2d20-740c-41e9-ef95-276af6947fd0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Intl.Calls')"],"metadata":{"id":"aynDRhIbf99H","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671573786,"user_tz":-330,"elapsed":987,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"db5edff6-e99f-47f5-89c0-31e4baa6e15b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Intl.Calls'])\n","df1['Total.Intl.Calls']=np.where(df1['Total.Intl.Calls']>upper,upper,df1['Total.Intl.Calls'])\n","df1['Total.Intl.Calls']=np.where(df1['Total.Intl.Calls']<lower,lower,df1['Total.Intl.Calls'])"],"metadata":{"id":"CLkrv2J-5H5u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"4BGZrVap5ILM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671578799,"user_tz":-330,"elapsed":19,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"d48993fb-515a-4cba-e3c3-68e84dbc69ed"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: -1.5\n","The maximum point is: 10.5\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Intl.Calls')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"XYwJf3oS_uiT","executionInfo":{"status":"ok","timestamp":1672671602246,"user_tz":-330,"elapsed":935,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"3917e263-9cc7-48ee-fb8b-2802cba39f3b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Intl.Charge')"],"metadata":{"id":"e8W7EjnFf-DU","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1672671611677,"user_tz":-330,"elapsed":783,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"a5cb80f6-8a45-461a-f89d-264cf8fb54d8"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["lower,upper=remove_outlier(df1['Total.Intl.Charge'])\n","df1['Total.Intl.Charge']=np.where(df1['Total.Intl.Charge']>upper,upper,df1['Total.Intl.Charge'])\n","df1['Total.Intl.Charge']=np.where(df1['Total.Intl.Charge']<lower,lower,df1['Total.Intl.Charge'])"],"metadata":{"id":"vR2XoRR258Oe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('The minimum point is:',lower)\n","print('The maximum point is:',upper)"],"metadata":{"id":"W9vZ8HBn58ln","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671621786,"user_tz":-330,"elapsed":13,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"2a00be58-f7b1-4951-d937-3e315ae55632"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum point is: 0.8449999999999995\n","The maximum point is: 4.7250000000000005\n"]}]},{"cell_type":"code","source":["plotvariable(df1,'Total.Intl.Charge')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"4QF0nfX7_4q_","executionInfo":{"status":"ok","timestamp":1672671643023,"user_tz":-330,"elapsed":1629,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"1fa54e3e-f37f-4f28-d0ba-35fee4d1534d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## Dummification : Independent Categorical Attributes"],"metadata":{"id":"tgFu7DJH96fx"}},{"cell_type":"code","source":["df = pd.get_dummies(columns=cat_col, data=df)"],"metadata":{"id":"iDpCRWr_KEeO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Divide the data into train and test"],"metadata":{"id":"hdy3iTy1ZR_C"}},{"cell_type":"code","source":["X = df.drop(['Churn'],axis=1)\n","y = df['Churn']"],"metadata":{"id":"5WQhC0aSXivb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.30,random_state=123,stratify=y)  "],"metadata":{"id":"2Fxt_R8nLEKM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape)\n","print(X_val.shape)\n","print(y_train.shape)\n","print(y_val.shape)"],"metadata":{"id":"rQRuMvBNLENm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671708418,"user_tz":-330,"elapsed":20,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"dc5a60c7-34b8-45e9-88db-6c6c548b0c0a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(2450, 27)\n","(1050, 27)\n","(2450,)\n","(1050,)\n"]}]},{"cell_type":"code","source":["X_val.columns"],"metadata":{"id":"2ZDZSzoVussk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671712287,"user_tz":-330,"elapsed":11,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"89991936-f479-4732-c9b4-1e211c1bf781"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['X..Vmail.Messages', 'Total.Day.Minutes', 'Total.Day.Calls',\n","       'Total.Day.Charge', 'Total.Eve.Minutes', 'Total.Eve.Calls',\n","       'Total.Eve.Charge', 'Total.Night.Minutes', 'Total.Night.Calls',\n","       'Total.Night.Charge', 'Total.Intl.Minutes', 'Total.Intl.Calls',\n","       'Total.Intl.Charge', 'International.Plan_no', 'International.Plan_yes',\n","       'Voice.Mail.Plan_no', 'Voice.Mail.Plan_yes',\n","       'X..customer.Service.Calls_0', 'X..customer.Service.Calls_1',\n","       'X..customer.Service.Calls_2', 'X..customer.Service.Calls_3',\n","       'X..customer.Service.Calls_4', 'X..customer.Service.Calls_5',\n","       'X..customer.Service.Calls_6', 'X..customer.Service.Calls_7',\n","       'X..customer.Service.Calls_8', 'X..customer.Service.Calls_9'],\n","      dtype='object')"]},"metadata":{},"execution_count":91}]},{"cell_type":"markdown","source":["# Target attribute distribution after the split"],"metadata":{"id":"d2lDmCb9M9_x"}},{"cell_type":"code","source":["print(pd.value_counts(y_train)/y_train.count()*100)\n","\n","print(pd.value_counts(y_val) /y_val.count()*100)"],"metadata":{"id":"wPmAAE87NCip","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671721113,"user_tz":-330,"elapsed":414,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"66288453-9685-4c53-8d75-6c8aab0ea348"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0    85.673469\n","1    14.326531\n","Name: Churn, dtype: float64\n","0    85.619048\n","1    14.380952\n","Name: Churn, dtype: float64\n"]}]},{"cell_type":"markdown","source":["# Standard Scaler : Independent Numberic Attributes"],"metadata":{"id":"RTluhS2_Inyy"}},{"cell_type":"code","source":["scaler=StandardScaler()\n","scaler.fit(X_train[num_col])\n","\n","X_train[num_col]=scaler.transform(X_train[num_col])\n","X_val[num_col]=scaler.transform(X_val[num_col])\n"],"metadata":{"id":"LEDGVZ1YrjpO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train.shape"],"metadata":{"id":"6FZQm9fDEirh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671751197,"user_tz":-330,"elapsed":23,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"cfc611e0-27ba-4531-a11e-acf17a1bbade"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2450, 27)"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["X_val.shape"],"metadata":{"id":"4ItB77EUEpHB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672671753966,"user_tz":-330,"elapsed":396,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"c53dcf9f-f7e8-4535-fd07-62d71ef1d82a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1050, 27)"]},"metadata":{},"execution_count":95}]},{"cell_type":"markdown","source":["# Error Metrics"],"metadata":{"id":"OqsvtJ4TJMmb"}},{"cell_type":"markdown","source":["## Function to calculate accuracy, recall, precision and F1 score"],"metadata":{"id":"pmZ_ViqkJQ2F"}},{"cell_type":"code","source":["scores = pd.DataFrame(columns=['Model', 'Train_Accuracy', 'Train_Recall', 'Train_Precision', 'Train_F1_Score', \n","                               'Val_Accuracy', 'Val_Recall', 'Val_Precision', 'Val_F1_Score'])\n","\n","def get_metrics(train_actual, train_predicted, val_actual, val_predicted, model_description, dataframe):\n","\n","    train_accuracy  = accuracy_score(train_actual, train_predicted)\n","    train_recall    = recall_score(train_actual, train_predicted, average=\"weighted\")\n","    train_precision = precision_score(train_actual, train_predicted, average=\"weighted\")\n","    train_f1score   = f1_score(train_actual, train_predicted, average=\"weighted\")\n","    \n","    val_accuracy   = accuracy_score(val_actual, val_predicted)\n","    val_recall     = recall_score(val_actual, val_predicted, average=\"weighted\")\n","    val_precision  = precision_score(val_actual, val_predicted, average=\"weighted\")\n","    val_f1score    = f1_score(val_actual, val_predicted, average=\"weighted\")\n","\n","    dataframe       = dataframe.append(pd.Series([model_description, \n","                                                  train_accuracy, train_recall, train_precision, train_f1score,\n","                                                  val_accuracy, val_recall, val_precision, val_f1score],\n","                                                 index=scores.columns ), \n","                                       ignore_index=True)\n","\n","    return(dataframe)"],"metadata":{"id":"0LhrKaASJq99"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Function for Classification Report"],"metadata":{"id":"MjM3A98jJ3S7"}},{"cell_type":"code","source":["def classifcation_report_train_test(y_train, y_train_pred, y_val, y_val_pred):\n","\n","    print('''\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            ''')\n","    print(classification_report(y_train, y_train_pred, digits=4))\n","\n","    print('''\n","            ==============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ==============================================\n","            ''')\n","    print(classification_report(y_val, y_val_pred, digits=4))"],"metadata":{"id":"B-KlL--BJsvV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Model Building"],"metadata":{"id":"xMeR_jHlJ_Ug"}},{"cell_type":"code","source":["smote = SMOTE(random_state=123)"],"metadata":{"id":"j0135P_H03yF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train_sm, y_train_sm = smote.fit_resample(X_train, y_train)"],"metadata":{"id":"7iIhF2kg1FX_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train_sm.shape"],"metadata":{"id":"gS3JEVTA1Fyh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672086129,"user_tz":-330,"elapsed":20,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"13f687dc-6478-4b65-9d49-7d7332f0496f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4198, 27)"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["y_train_sm.value_counts()"],"metadata":{"id":"1Uxkqoue1TKT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672167675,"user_tz":-330,"elapsed":433,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"ba3c7c1a-7efd-4b0c-add1-402c2f39edef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    2099\n","1    2099\n","Name: Churn, dtype: int64"]},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["print(pd.value_counts(y_train_sm, normalize=True) *100)"],"metadata":{"id":"l-_ElXCH1TPD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672256370,"user_tz":-330,"elapsed":440,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"6f33e129-ca9b-4e13-b1a9-07f054ddb978"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0    50.0\n","1    50.0\n","Name: Churn, dtype: float64\n"]}]},{"cell_type":"markdown","source":["## Logistic Regression"],"metadata":{"id":"xTCfyhaGCbYf"}},{"cell_type":"code","source":["clf1=LogisticRegression(penalty='l2',solver='saga')"],"metadata":{"id":"U3fhAPdQLERK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf1.fit(X_train_sm,y_train_sm)"],"metadata":{"id":"RE5NC06dLEUg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672381048,"user_tz":-330,"elapsed":680,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"24a3ba5d-afc8-44b4-e20a-b56d0f3e3ea4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(solver='saga')"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["y_train_pred = clf1.predict(X_train_sm)\n","y_val_pred = clf1.predict(X_val)"],"metadata":{"id":"5HxMjAg9LEXr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test(y_train_sm, y_train_pred, y_val, y_val_pred)"],"metadata":{"id":"r02--5paMQ72","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672398391,"user_tz":-330,"elapsed":14,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"6ae9c542-0f55-43fd-c454-7db88e12b64a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.8878    0.9309    0.9088      2099\n","           1     0.9274    0.8823    0.9043      2099\n","\n","    accuracy                         0.9066      4198\n","   macro avg     0.9076    0.9066    0.9066      4198\n","weighted avg     0.9076    0.9066    0.9066      4198\n","\n","\n","            ==============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ==============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9363    0.8999    0.9178       899\n","           1     0.5161    0.6358    0.5697       151\n","\n","    accuracy                         0.8619      1050\n","   macro avg     0.7262    0.7678    0.7437      1050\n","weighted avg     0.8759    0.8619    0.8677      1050\n","\n"]}]},{"cell_type":"code","source":["scores = get_metrics(y_train_sm, y_train_pred, y_val, y_val_pred, \"Logistic Regression\", scores)\n","scores"],"metadata":{"id":"CjIfJO-nMRMs","colab":{"base_uri":"https://localhost:8080/","height":81},"executionInfo":{"status":"ok","timestamp":1672672451296,"user_tz":-330,"elapsed":467,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"c21ec429-a397-40bf-87b5-af9a46045c4b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.906622      0.906622         0.907585   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.906567      0.861905    0.861905       0.875912      0.867705  "],"text/html":["\n","  <div id=\"df-871bd430-b2b1-4549-8a8a-4fbf0553ad39\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.906622</td>\n","      <td>0.906622</td>\n","      <td>0.907585</td>\n","      <td>0.906567</td>\n","      <td>0.861905</td>\n","      <td>0.861905</td>\n","      <td>0.875912</td>\n","      <td>0.867705</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-871bd430-b2b1-4549-8a8a-4fbf0553ad39')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-871bd430-b2b1-4549-8a8a-4fbf0553ad39 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-871bd430-b2b1-4549-8a8a-4fbf0553ad39');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":111}]},{"cell_type":"markdown","source":["## RandomForestClassifier Model"],"metadata":{"id":"30tz3l_gpIKZ"}},{"cell_type":"markdown","source":["#### Instantiate Model"],"metadata":{"id":"9uO9nGWvpKas"}},{"cell_type":"code","source":["clf2=RandomForestClassifier()\n","clf2.fit(X_train_sm,y_train_sm)"],"metadata":{"id":"75Hl2QZSUDLb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672528273,"user_tz":-330,"elapsed":1166,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"dc959012-ac2a-4b7a-8400-9633361adccf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"]},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["y_train_pred = clf2.predict(X_train_sm)\n","y_val_pred = clf2.predict(X_val)"],"metadata":{"id":"yEXUxn8tUDPu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test(y_train_sm, y_train_pred, y_val, y_val_pred)"],"metadata":{"id":"K434eVglUDUG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672545046,"user_tz":-330,"elapsed":399,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"8e2c9f7e-8a3c-4000-f298-b915a005b929"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     1.0000    1.0000    1.0000      2099\n","           1     1.0000    1.0000    1.0000      2099\n","\n","    accuracy                         1.0000      4198\n","   macro avg     1.0000    1.0000    1.0000      4198\n","weighted avg     1.0000    1.0000    1.0000      4198\n","\n","\n","            ==============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ==============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9625    0.9700    0.9662       899\n","           1     0.8125    0.7748    0.7932       151\n","\n","    accuracy                         0.9419      1050\n","   macro avg     0.8875    0.8724    0.8797      1050\n","weighted avg     0.9409    0.9419    0.9413      1050\n","\n"]}]},{"cell_type":"markdown","source":["## Hyper-parameter tuning using Grid Search and Cross Validation"],"metadata":{"id":"-oAzQU5ituyR"}},{"cell_type":"markdown","source":["### Parameters to test"],"metadata":{"id":"afn8tmF7t0_N"}},{"cell_type":"code","source":["param_grid = {\"n_estimators\" : [50, 100],\n","              \"max_depth\" : [1,5],\n","              \"max_features\" : [3, 5],\n","              \"min_samples_leaf\" : [1, 2, 4]}"],"metadata":{"id":"z8i9tiI8UDc5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Instantiate Decision Tree"],"metadata":{"id":"ZWEP62nvu08Y"}},{"cell_type":"code","source":["clf3 = RandomForestClassifier()"],"metadata":{"id":"RyYRgHFOUDg3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Instantiate GridSearchCV "],"metadata":{"id":"W0Br2q7pu-dq"}},{"cell_type":"code","source":["clf_grid = GridSearchCV(clf3,param_grid,cv=2)"],"metadata":{"id":"6JMkhpVoUDko"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Train DT using GridSearchCV"],"metadata":{"id":"WAt1SXfzvKf6"}},{"cell_type":"code","source":["clf_grid.fit(X_train_sm, y_train_sm)"],"metadata":{"id":"hQotgGn2UDob","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672615687,"user_tz":-330,"elapsed":10774,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"5c10eaa0-59e8-41fd-a3a3-d1818f6fbf4e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=2, estimator=RandomForestClassifier(),\n","             param_grid={'max_depth': [1, 5], 'max_features': [3, 5],\n","                         'min_samples_leaf': [1, 2, 4],\n","                         'n_estimators': [50, 100]})"]},"metadata":{},"execution_count":118}]},{"cell_type":"markdown","source":["### Best Params"],"metadata":{"id":"YJRQyZDdvTfO"}},{"cell_type":"code","source":["clf_grid.best_params_"],"metadata":{"id":"-ujgzi18vMcc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672623902,"user_tz":-330,"elapsed":419,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"26c67fd8-0351-43e9-e046-2590dab2cd6d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'max_depth': 5, 'max_features': 5, 'min_samples_leaf': 1, 'n_estimators': 50}"]},"metadata":{},"execution_count":119}]},{"cell_type":"markdown","source":["### Predict "],"metadata":{"id":"H2ggpPk-vcPw"}},{"cell_type":"code","source":["y_train_pred = clf_grid.predict(X_train_sm)\n","y_val_pred = clf_grid.predict(X_val)"],"metadata":{"id":"BTTbr6iGvMi7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Evaluate"],"metadata":{"id":"p8UMDuNCvnND"}},{"cell_type":"code","source":["classifcation_report_train_test(y_train_sm, y_train_pred, y_val, y_val_pred)"],"metadata":{"id":"rvwa1c7wviCi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672638876,"user_tz":-330,"elapsed":18,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"2447091d-1012-46b7-e097-627a7dc5de2a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.8973    0.9404    0.9184      2099\n","           1     0.9374    0.8923    0.9143      2099\n","\n","    accuracy                         0.9164      4198\n","   macro avg     0.9174    0.9164    0.9163      4198\n","weighted avg     0.9174    0.9164    0.9163      4198\n","\n","\n","            ==============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ==============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9542    0.9043    0.9286       899\n","           1     0.5657    0.7417    0.6418       151\n","\n","    accuracy                         0.8810      1050\n","   macro avg     0.7599    0.8230    0.7852      1050\n","weighted avg     0.8983    0.8810    0.8874      1050\n","\n"]}]},{"cell_type":"code","source":["scores = get_metrics(y_train_sm, y_train_pred, y_val, y_val_pred, \"Random Forest\", scores)\n","scores"],"metadata":{"id":"ajM-IijvviHT","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1672672657494,"user_tz":-330,"elapsed":424,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"28966458-eb2b-4a94-869d-7c2fd76fffd1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.906622      0.906622         0.907585   \n","1        Random Forest        0.916389      0.916389         0.917355   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.906567      0.861905    0.861905       0.875912      0.867705  \n","1        0.916340      0.880952    0.880952       0.898345      0.887371  "],"text/html":["\n","  <div id=\"df-d38f835d-9d3e-4840-a267-70445e44c341\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.906622</td>\n","      <td>0.906622</td>\n","      <td>0.907585</td>\n","      <td>0.906567</td>\n","      <td>0.861905</td>\n","      <td>0.861905</td>\n","      <td>0.875912</td>\n","      <td>0.867705</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>0.916389</td>\n","      <td>0.916389</td>\n","      <td>0.917355</td>\n","      <td>0.916340</td>\n","      <td>0.880952</td>\n","      <td>0.880952</td>\n","      <td>0.898345</td>\n","      <td>0.887371</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d38f835d-9d3e-4840-a267-70445e44c341')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d38f835d-9d3e-4840-a267-70445e44c341 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d38f835d-9d3e-4840-a267-70445e44c341');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":122}]},{"cell_type":"markdown","source":["## Build Gradient Boosting Classifier"],"metadata":{"id":"30AGF1_G0t37"}},{"cell_type":"code","source":["from sklearn.ensemble import GradientBoostingClassifier"],"metadata":{"id":"FfSk3cv2_eg2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lr_list = [0.05, 0.075, 0.1, 0.25, 0.5, 0.75, 1]\n","\n","for lr_rate in lr_list:\n","    gb_clf = GradientBoostingClassifier(n_estimators=20, learning_rate=lr_rate, max_features=2, max_depth=2, random_state=0)\n","    gb_clf.fit(X_train_sm, y_train_sm)\n","\n","    print(\"Learning rate: \", lr_rate)\n","    print(\"Accuracy score (training): {0:.3f}\".format(gb_clf.score(X_train_sm, y_train_sm)))\n","    print(\"Accuracy score (validation): {0:.3f}\".format(gb_clf.score(X_val, y_val)))"],"metadata":{"id":"7Mb-S8S3ztu5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672675586,"user_tz":-330,"elapsed":583,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"3272e851-08cf-43d7-b14e-c4e425fe0ffe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Learning rate:  0.05\n","Accuracy score (training): 0.826\n","Accuracy score (validation): 0.757\n","Learning rate:  0.075\n","Accuracy score (training): 0.834\n","Accuracy score (validation): 0.776\n","Learning rate:  0.1\n","Accuracy score (training): 0.844\n","Accuracy score (validation): 0.780\n","Learning rate:  0.25\n","Accuracy score (training): 0.856\n","Accuracy score (validation): 0.801\n","Learning rate:  0.5\n","Accuracy score (training): 0.845\n","Accuracy score (validation): 0.786\n","Learning rate:  0.75\n","Accuracy score (training): 0.850\n","Accuracy score (validation): 0.784\n","Learning rate:  1\n","Accuracy score (training): 0.850\n","Accuracy score (validation): 0.790\n"]}]},{"cell_type":"code","source":["gb_clf4 = GradientBoostingClassifier(n_estimators=20, learning_rate=1, max_features=2, max_depth=2, random_state=0)\n","gb_clf4.fit(X_train_sm, y_train_sm)"],"metadata":{"id":"OqdOkJIFLn1l","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672714481,"user_tz":-330,"elapsed":495,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"a97aba2d-f0ea-4766-e796-307ab28ce0e2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GradientBoostingClassifier(learning_rate=1, max_depth=2, max_features=2,\n","                           n_estimators=20, random_state=0)"]},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["y_train_pred = gb_clf4.predict(X_train_sm)\n","y_val_pred = gb_clf4.predict(X_val)"],"metadata":{"id":"oq-kntdU00Ze"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test(y_train_sm, y_train_pred, y_val, y_val_pred)"],"metadata":{"id":"f2RUfGTD00d5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672730082,"user_tz":-330,"elapsed":11,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"ec68e3e4-a303-4973-d627-071c07e98e78"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.8418    0.8618    0.8517      2099\n","           1     0.8585    0.8380    0.8481      2099\n","\n","    accuracy                         0.8499      4198\n","   macro avg     0.8501    0.8499    0.8499      4198\n","weighted avg     0.8501    0.8499    0.8499      4198\n","\n","\n","            ==============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ==============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9270    0.8198    0.8701       899\n","           1     0.3647    0.6159    0.4581       151\n","\n","    accuracy                         0.7905      1050\n","   macro avg     0.6459    0.7178    0.6641      1050\n","weighted avg     0.8462    0.7905    0.8109      1050\n","\n"]}]},{"cell_type":"code","source":["scores = get_metrics(y_train_sm, y_train_pred, y_val, y_val_pred, \"Gradient Boosting\", scores)\n","scores"],"metadata":{"id":"vZ27yHJyMkQ1","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1672672743807,"user_tz":-330,"elapsed":459,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"767d9e4f-9667-4e83-f009-92d835e05e86"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.906622      0.906622         0.907585   \n","1        Random Forest        0.916389      0.916389         0.917355   \n","2    Gradient Boosting        0.849929      0.849929         0.850127   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.906567      0.861905    0.861905       0.875912      0.867705  \n","1        0.916340      0.880952    0.880952       0.898345      0.887371  \n","2        0.849907      0.790476    0.790476       0.846174      0.810880  "],"text/html":["\n","  <div id=\"df-a2129f4f-8ea2-4cd0-8739-064e14c8402e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.906622</td>\n","      <td>0.906622</td>\n","      <td>0.907585</td>\n","      <td>0.906567</td>\n","      <td>0.861905</td>\n","      <td>0.861905</td>\n","      <td>0.875912</td>\n","      <td>0.867705</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>0.916389</td>\n","      <td>0.916389</td>\n","      <td>0.917355</td>\n","      <td>0.916340</td>\n","      <td>0.880952</td>\n","      <td>0.880952</td>\n","      <td>0.898345</td>\n","      <td>0.887371</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gradient Boosting</td>\n","      <td>0.849929</td>\n","      <td>0.849929</td>\n","      <td>0.850127</td>\n","      <td>0.849907</td>\n","      <td>0.790476</td>\n","      <td>0.790476</td>\n","      <td>0.846174</td>\n","      <td>0.810880</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2129f4f-8ea2-4cd0-8739-064e14c8402e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a2129f4f-8ea2-4cd0-8739-064e14c8402e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a2129f4f-8ea2-4cd0-8739-064e14c8402e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":128}]},{"cell_type":"markdown","source":["## AdaBoost"],"metadata":{"id":"eSl8yuCaNTt1"}},{"cell_type":"code","source":["# Import the AdaBoost classifier\n","from sklearn.ensemble import AdaBoostClassifier\n","\n","\n","# Create adaboost classifer object\n","clf5 = AdaBoostClassifier(n_estimators=50, learning_rate=1, random_state=0)\n","\n","# Train Adaboost Classifer\n","clf5.fit(X_train_sm, y_train_sm)\n","\n","\n","#Predict the response for test dataset\n","y_train_pred = clf5.predict(X_train_sm)\n","y_val_pred = clf5.predict(X_val)"],"metadata":{"id":"iN7EqiRDNQXs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test(y_train_sm, y_train_pred, y_val, y_val_pred)"],"metadata":{"id":"SarcAifsUzOa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672672947160,"user_tz":-330,"elapsed":14,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"620cb896-47df-40a1-b144-aec6bf5f9c81"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.8930    0.9266    0.9095      2099\n","           1     0.9238    0.8890    0.9060      2099\n","\n","    accuracy                         0.9078      4198\n","   macro avg     0.9084    0.9078    0.9078      4198\n","weighted avg     0.9084    0.9078    0.9078      4198\n","\n","\n","            ==============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ==============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9334    0.9043    0.9186       899\n","           1     0.5196    0.6159    0.5636       151\n","\n","    accuracy                         0.8629      1050\n","   macro avg     0.7265    0.7601    0.7411      1050\n","weighted avg     0.8739    0.8629    0.8676      1050\n","\n"]}]},{"cell_type":"code","source":["scores = get_metrics(y_train_sm, y_train_pred, y_val, y_val_pred, \"AdaBoost\", scores)\n","scores"],"metadata":{"id":"3I9cJjningeu","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1672672961370,"user_tz":-330,"elapsed":644,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"2b1ab66a-d099-4018-a6f6-0326a91ffb01"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.906622      0.906622         0.907585   \n","1        Random Forest        0.916389      0.916389         0.917355   \n","2    Gradient Boosting        0.849929      0.849929         0.850127   \n","3             AdaBoost        0.907813      0.907813         0.908392   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.906567      0.861905    0.861905       0.875912      0.867705  \n","1        0.916340      0.880952    0.880952       0.898345      0.887371  \n","2        0.849907      0.790476    0.790476       0.846174      0.810880  \n","3        0.907781      0.862857    0.862857       0.873893      0.867591  "],"text/html":["\n","  <div id=\"df-3540b204-565b-4c4d-9fea-86912b4181e7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.906622</td>\n","      <td>0.906622</td>\n","      <td>0.907585</td>\n","      <td>0.906567</td>\n","      <td>0.861905</td>\n","      <td>0.861905</td>\n","      <td>0.875912</td>\n","      <td>0.867705</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>0.916389</td>\n","      <td>0.916389</td>\n","      <td>0.917355</td>\n","      <td>0.916340</td>\n","      <td>0.880952</td>\n","      <td>0.880952</td>\n","      <td>0.898345</td>\n","      <td>0.887371</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gradient Boosting</td>\n","      <td>0.849929</td>\n","      <td>0.849929</td>\n","      <td>0.850127</td>\n","      <td>0.849907</td>\n","      <td>0.790476</td>\n","      <td>0.790476</td>\n","      <td>0.846174</td>\n","      <td>0.810880</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AdaBoost</td>\n","      <td>0.907813</td>\n","      <td>0.907813</td>\n","      <td>0.908392</td>\n","      <td>0.907781</td>\n","      <td>0.862857</td>\n","      <td>0.862857</td>\n","      <td>0.873893</td>\n","      <td>0.867591</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3540b204-565b-4c4d-9fea-86912b4181e7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3540b204-565b-4c4d-9fea-86912b4181e7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3540b204-565b-4c4d-9fea-86912b4181e7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":131}]},{"cell_type":"markdown","source":["### XGBOOST"],"metadata":{"id":"OPvE6hLwofO9"}},{"cell_type":"code","source":["from xgboost import XGBClassifier"],"metadata":{"id":"zpSJCgzarC0J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf6 = XGBClassifier()"],"metadata":{"id":"0SDiUTDnn8NF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf6.fit(X_train,y_train)"],"metadata":{"id":"CfuspRhxo07-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672673082129,"user_tz":-330,"elapsed":675,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"ec10ec4c-2fd1-49ff-857b-595cc1ab62ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["XGBClassifier()"]},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["y_train_pred = clf6.predict(X_train_sm)\n","y_val_pred = clf6.predict(X_val)"],"metadata":{"id":"eawIPEFcq0Kq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test(y_train_sm, y_train_pred, y_val, y_val_pred)"],"metadata":{"id":"o6CuoJ_mo1Id","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672673097139,"user_tz":-330,"elapsed":14,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"16ced435-9494-4146-ae57-2629ee148cab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.7445    0.9981    0.8528      2099\n","           1     0.9971    0.6575    0.7924      2099\n","\n","    accuracy                         0.8278      4198\n","   macro avg     0.8708    0.8278    0.8226      4198\n","weighted avg     0.8708    0.8278    0.8226      4198\n","\n","\n","            ==============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ==============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9537    0.9844    0.9688       899\n","           1     0.8852    0.7152    0.7912       151\n","\n","    accuracy                         0.9457      1050\n","   macro avg     0.9195    0.8498    0.8800      1050\n","weighted avg     0.9438    0.9457    0.9433      1050\n","\n"]}]},{"cell_type":"markdown","source":["## Hyper-parameter tuning using Grid Search and Cross Validation"],"metadata":{"id":"YQqLqo8QwkXJ"}},{"cell_type":"code","source":["XGB = XGBClassifier(n_jobs=-1)\n"," \n","# Use a grid over parameters of interest\n","param_grid = {\n","    'colsample_bytree': np.linspace(0.6, 0.8, 2),\n","    'n_estimators': [50, 100],\n","    'max_depth': [5, 6]}\n","\n","clf7= GridSearchCV(estimator=XGB, param_grid=param_grid, cv=3)"],"metadata":{"id":"JvA897Y2o1N3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf7.fit(X=X_train_sm, y=y_train_sm)"],"metadata":{"id":"R2SpI5bGs_V3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672673144404,"user_tz":-330,"elapsed":12814,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"a58b46e8-730f-4abd-9e31-ea868c644a57"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=3, estimator=XGBClassifier(n_jobs=-1),\n","             param_grid={'colsample_bytree': array([0.6, 0.8]),\n","                         'max_depth': [5, 6], 'n_estimators': [50, 100]})"]},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":["best_xgb_model = clf7.best_estimator_"],"metadata":{"id":"4ERywLMrs_bX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["best_xgb_model\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kpU37fVxZ9m0","executionInfo":{"status":"ok","timestamp":1672673153530,"user_tz":-330,"elapsed":16,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"1d4aa879-b18a-4e69-a90f-b9240bad7835"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["XGBClassifier(colsample_bytree=0.6, max_depth=6, n_jobs=-1)"]},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["print(clf7.best_score_,clf7.best_params_)"],"metadata":{"id":"QvBBkqRQs_jM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672673165740,"user_tz":-330,"elapsed":400,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"45a8f7a0-d77c-41e9-fcf8-4a8362c0afdf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9597506722488852 {'colsample_bytree': 0.6, 'max_depth': 6, 'n_estimators': 100}\n"]}]},{"cell_type":"code","source":["y_train_pred= best_xgb_model.predict(X_train_sm)\n","y_val_pred = best_xgb_model.predict(X_val)"],"metadata":{"id":"qhWJZYzatR3n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test(y_train_sm, y_train_pred, y_val, y_val_pred)"],"metadata":{"id":"WrXXHNHJo1S6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672673203887,"user_tz":-330,"elapsed":6,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"5c963b52-1917-42cf-9b8b-8fc6e0dcc123"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9868    0.9962    0.9915      2099\n","           1     0.9962    0.9867    0.9914      2099\n","\n","    accuracy                         0.9914      4198\n","   macro avg     0.9915    0.9914    0.9914      4198\n","weighted avg     0.9915    0.9914    0.9914      4198\n","\n","\n","            ==============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ==============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9612    0.9655    0.9634       899\n","           1     0.7891    0.7682    0.7785       151\n","\n","    accuracy                         0.9371      1050\n","   macro avg     0.8752    0.8669    0.8709      1050\n","weighted avg     0.9365    0.9371    0.9368      1050\n","\n"]}]},{"cell_type":"code","source":["scores = get_metrics(y_train_sm, y_train_pred, y_val, y_val_pred, \"XGBoost\", scores)\n","scores"],"metadata":{"id":"vAb93UTVx2fB","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1672673212583,"user_tz":-330,"elapsed":425,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"70a156e7-5002-4a5a-8d08-ddb8a94982b3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.906622      0.906622         0.907585   \n","1        Random Forest        0.916389      0.916389         0.917355   \n","2    Gradient Boosting        0.849929      0.849929         0.850127   \n","3             AdaBoost        0.907813      0.907813         0.908392   \n","4              XGBoost        0.991424      0.991424         0.991469   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.906567      0.861905    0.861905       0.875912      0.867705  \n","1        0.916340      0.880952    0.880952       0.898345      0.887371  \n","2        0.849907      0.790476    0.790476       0.846174      0.810880  \n","3        0.907781      0.862857    0.862857       0.873893      0.867591  \n","4        0.991424      0.937143    0.937143       0.936487      0.936791  "],"text/html":["\n","  <div id=\"df-1311e60e-4c98-4f5e-a8ca-9c17c7d5093f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.906622</td>\n","      <td>0.906622</td>\n","      <td>0.907585</td>\n","      <td>0.906567</td>\n","      <td>0.861905</td>\n","      <td>0.861905</td>\n","      <td>0.875912</td>\n","      <td>0.867705</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>0.916389</td>\n","      <td>0.916389</td>\n","      <td>0.917355</td>\n","      <td>0.916340</td>\n","      <td>0.880952</td>\n","      <td>0.880952</td>\n","      <td>0.898345</td>\n","      <td>0.887371</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gradient Boosting</td>\n","      <td>0.849929</td>\n","      <td>0.849929</td>\n","      <td>0.850127</td>\n","      <td>0.849907</td>\n","      <td>0.790476</td>\n","      <td>0.790476</td>\n","      <td>0.846174</td>\n","      <td>0.810880</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AdaBoost</td>\n","      <td>0.907813</td>\n","      <td>0.907813</td>\n","      <td>0.908392</td>\n","      <td>0.907781</td>\n","      <td>0.862857</td>\n","      <td>0.862857</td>\n","      <td>0.873893</td>\n","      <td>0.867591</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>XGBoost</td>\n","      <td>0.991424</td>\n","      <td>0.991424</td>\n","      <td>0.991469</td>\n","      <td>0.991424</td>\n","      <td>0.937143</td>\n","      <td>0.937143</td>\n","      <td>0.936487</td>\n","      <td>0.936791</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1311e60e-4c98-4f5e-a8ca-9c17c7d5093f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1311e60e-4c98-4f5e-a8ca-9c17c7d5093f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1311e60e-4c98-4f5e-a8ca-9c17c7d5093f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":145}]},{"cell_type":"markdown","source":["### SVM (RBF Model)"],"metadata":{"id":"3hdZk1iDWOds"}},{"cell_type":"code","source":["svc=SVC(kernel='rbf',gamma=0.01,C=10)"],"metadata":{"id":"eqaljFXBWM6x"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Train the model"],"metadata":{"id":"jBm6CYnVW4Y8"}},{"cell_type":"code","source":["svc.fit(X=X_train_sm,y=y_train_sm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qRdy2VFKWM_1","executionInfo":{"status":"ok","timestamp":1672677780617,"user_tz":-330,"elapsed":1053,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"9fae910f-5cca-45ca-b7da-0ff8e1ae1596"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(C=10, gamma=0.01)"]},"metadata":{},"execution_count":206}]},{"cell_type":"markdown","source":["### Predict"],"metadata":{"id":"lbTmLVRlXaQG"}},{"cell_type":"code","source":["y_train_pred= svc.predict(X_train_sm)\n","y_val_pred = svc.predict(X_val)"],"metadata":{"id":"mVy41CTNWNEw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test(y_train_sm, y_train_pred, y_val, y_val_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LeDUpCd_Xv74","executionInfo":{"status":"ok","timestamp":1672677913369,"user_tz":-330,"elapsed":428,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"7e23d2bc-ee50-4cb0-9958-749fe67dfb2a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9367    0.9443    0.9405      2099\n","           1     0.9438    0.9362    0.9400      2099\n","\n","    accuracy                         0.9402      4198\n","   macro avg     0.9402    0.9402    0.9402      4198\n","weighted avg     0.9402    0.9402    0.9402      4198\n","\n","\n","            ==============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ==============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9487    0.9255    0.9369       899\n","           1     0.6127    0.7020    0.6543       151\n","\n","    accuracy                         0.8933      1050\n","   macro avg     0.7807    0.8137    0.7956      1050\n","weighted avg     0.9004    0.8933    0.8963      1050\n","\n"]}]},{"cell_type":"code","source":["scores = get_metrics(y_train_sm, y_train_pred, y_val, y_val_pred, \"SVM\", scores)\n","scores"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"8oreuLeeXwtC","executionInfo":{"status":"ok","timestamp":1672677972091,"user_tz":-330,"elapsed":449,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"d9c96b10-8b7b-4020-9e5f-a372b6ab1400"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.906622      0.906622         0.907585   \n","1        Random Forest        0.916389      0.916389         0.917355   \n","2    Gradient Boosting        0.849929      0.849929         0.850127   \n","3             AdaBoost        0.907813      0.907813         0.908392   \n","4              XGBoost        0.991424      0.991424         0.991469   \n","5                  SVM        0.940210      0.940210         0.940239   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.906567      0.861905    0.861905       0.875912      0.867705  \n","1        0.916340      0.880952    0.880952       0.898345      0.887371  \n","2        0.849907      0.790476    0.790476       0.846174      0.810880  \n","3        0.907781      0.862857    0.862857       0.873893      0.867591  \n","4        0.991424      0.937143    0.937143       0.936487      0.936791  \n","5        0.940209      0.893333    0.893333       0.900373      0.896294  "],"text/html":["\n","  <div id=\"df-fc19412b-df0c-40d4-a018-92b254977a60\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.906622</td>\n","      <td>0.906622</td>\n","      <td>0.907585</td>\n","      <td>0.906567</td>\n","      <td>0.861905</td>\n","      <td>0.861905</td>\n","      <td>0.875912</td>\n","      <td>0.867705</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>0.916389</td>\n","      <td>0.916389</td>\n","      <td>0.917355</td>\n","      <td>0.916340</td>\n","      <td>0.880952</td>\n","      <td>0.880952</td>\n","      <td>0.898345</td>\n","      <td>0.887371</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gradient Boosting</td>\n","      <td>0.849929</td>\n","      <td>0.849929</td>\n","      <td>0.850127</td>\n","      <td>0.849907</td>\n","      <td>0.790476</td>\n","      <td>0.790476</td>\n","      <td>0.846174</td>\n","      <td>0.810880</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AdaBoost</td>\n","      <td>0.907813</td>\n","      <td>0.907813</td>\n","      <td>0.908392</td>\n","      <td>0.907781</td>\n","      <td>0.862857</td>\n","      <td>0.862857</td>\n","      <td>0.873893</td>\n","      <td>0.867591</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>XGBoost</td>\n","      <td>0.991424</td>\n","      <td>0.991424</td>\n","      <td>0.991469</td>\n","      <td>0.991424</td>\n","      <td>0.937143</td>\n","      <td>0.937143</td>\n","      <td>0.936487</td>\n","      <td>0.936791</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>SVM</td>\n","      <td>0.940210</td>\n","      <td>0.940210</td>\n","      <td>0.940239</td>\n","      <td>0.940209</td>\n","      <td>0.893333</td>\n","      <td>0.893333</td>\n","      <td>0.900373</td>\n","      <td>0.896294</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc19412b-df0c-40d4-a018-92b254977a60')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fc19412b-df0c-40d4-a018-92b254977a60 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fc19412b-df0c-40d4-a018-92b254977a60');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":209}]},{"cell_type":"markdown","source":["## Predicting Best Model on the Test Dataset"],"metadata":{"id":"DcvJQ1pTGFqP"}},{"cell_type":"code","source":["Test=Test_data.copy()"],"metadata":{"id":"Qr8N3hhSZmqN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Defining the error metrics in a form of function\n","def evaluate_model(act, pred):\n","    print(\"Confusion Matrix \\n\", confusion_matrix(act, pred))\n","    print(\"Accurcay : \", accuracy_score(act, pred))\n","    print(\"Recall   : \", recall_score(act, pred))\n","    print(\"Precision: \", precision_score(act, pred))\n","    print(\"F1_score : \", f1_score(act, pred))"],"metadata":{"id":"N3dPu0zLdupo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Droping trainrows and ID columns form Test_data\n","Test_data.drop(['trainrows','Cust_ID'],axis=1,inplace=True)"],"metadata":{"id":"TpmLj0rAbGQV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Doing Standardization on numeric columns\n","Test_data[num_col]=scaler.transform(Test_data[num_col])"],"metadata":{"id":"dPyRsTteHWXP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Doing dummification on categorical columns\n","Test_data=pd.get_dummies(columns=cat_col,data=Test_data)"],"metadata":{"id":"rmoRRXWI_27C"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Test_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"elxCQzUGZYMS","executionInfo":{"status":"ok","timestamp":1672678818495,"user_tz":-330,"elapsed":628,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"4d2fa7bb-42d7-469a-e5e2-1e9126984d60"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    X..Vmail.Messages  Churn  Total.Day.Minutes  Total.Day.Calls  \\\n","0            1.267896      0           1.561637         0.488269   \n","6            1.193783      0           0.702204        -0.612890   \n","18           1.860794      0           0.179947        -1.714048   \n","23          -0.584913      0          -1.273209         0.137900   \n","27          -0.584913      0          -0.835247        -1.363680   \n","\n","    Total.Day.Charge  Total.Eve.Minutes  Total.Eve.Calls  Total.Eve.Charge  \\\n","0           1.561900          -0.073477        -0.077210         -0.073269   \n","6           0.701710           2.911461         0.378123          2.910840   \n","18          0.179991           0.230746        -1.797359          0.231184   \n","23         -1.273061          -1.260736         0.074567         -1.260870   \n","27         -0.835421          -0.901200        -0.026618         -0.900639   \n","\n","    Total.Night.Minutes  Total.Night.Calls  ...  X..customer.Service.Calls_0  \\\n","0              0.859325          -0.454525  ...                            0   \n","6              0.226489           0.880710  ...                            0   \n","18            -0.698121           0.386178  ...                            0   \n","23            -0.226945           0.237819  ...                            0   \n","27            -1.951963          -1.591946  ...                            0   \n","\n","    X..customer.Service.Calls_1  X..customer.Service.Calls_2  \\\n","0                             1                            0   \n","6                             0                            0   \n","18                            1                            0   \n","23                            0                            1   \n","27                            0                            0   \n","\n","    X..customer.Service.Calls_3  X..customer.Service.Calls_4  \\\n","0                             0                            0   \n","6                             1                            0   \n","18                            0                            0   \n","23                            0                            0   \n","27                            1                            0   \n","\n","    X..customer.Service.Calls_5  X..customer.Service.Calls_6  \\\n","0                             0                            0   \n","6                             0                            0   \n","18                            0                            0   \n","23                            0                            0   \n","27                            0                            0   \n","\n","    X..customer.Service.Calls_7  X..customer.Service.Calls_8  \\\n","0                             0                            0   \n","6                             0                            0   \n","18                            0                            0   \n","23                            0                            0   \n","27                            0                            0   \n","\n","    X..customer.Service.Calls_9  \n","0                             0  \n","6                             0  \n","18                            0  \n","23                            0  \n","27                            0  \n","\n","[5 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-31e435ad-477d-46a7-9ab7-2535ff58e082\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X..Vmail.Messages</th>\n","      <th>Churn</th>\n","      <th>Total.Day.Minutes</th>\n","      <th>Total.Day.Calls</th>\n","      <th>Total.Day.Charge</th>\n","      <th>Total.Eve.Minutes</th>\n","      <th>Total.Eve.Calls</th>\n","      <th>Total.Eve.Charge</th>\n","      <th>Total.Night.Minutes</th>\n","      <th>Total.Night.Calls</th>\n","      <th>...</th>\n","      <th>X..customer.Service.Calls_0</th>\n","      <th>X..customer.Service.Calls_1</th>\n","      <th>X..customer.Service.Calls_2</th>\n","      <th>X..customer.Service.Calls_3</th>\n","      <th>X..customer.Service.Calls_4</th>\n","      <th>X..customer.Service.Calls_5</th>\n","      <th>X..customer.Service.Calls_6</th>\n","      <th>X..customer.Service.Calls_7</th>\n","      <th>X..customer.Service.Calls_8</th>\n","      <th>X..customer.Service.Calls_9</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.267896</td>\n","      <td>0</td>\n","      <td>1.561637</td>\n","      <td>0.488269</td>\n","      <td>1.561900</td>\n","      <td>-0.073477</td>\n","      <td>-0.077210</td>\n","      <td>-0.073269</td>\n","      <td>0.859325</td>\n","      <td>-0.454525</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1.193783</td>\n","      <td>0</td>\n","      <td>0.702204</td>\n","      <td>-0.612890</td>\n","      <td>0.701710</td>\n","      <td>2.911461</td>\n","      <td>0.378123</td>\n","      <td>2.910840</td>\n","      <td>0.226489</td>\n","      <td>0.880710</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1.860794</td>\n","      <td>0</td>\n","      <td>0.179947</td>\n","      <td>-1.714048</td>\n","      <td>0.179991</td>\n","      <td>0.230746</td>\n","      <td>-1.797359</td>\n","      <td>0.231184</td>\n","      <td>-0.698121</td>\n","      <td>0.386178</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>-0.584913</td>\n","      <td>0</td>\n","      <td>-1.273209</td>\n","      <td>0.137900</td>\n","      <td>-1.273061</td>\n","      <td>-1.260736</td>\n","      <td>0.074567</td>\n","      <td>-1.260870</td>\n","      <td>-0.226945</td>\n","      <td>0.237819</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>-0.584913</td>\n","      <td>0</td>\n","      <td>-0.835247</td>\n","      <td>-1.363680</td>\n","      <td>-0.835421</td>\n","      <td>-0.901200</td>\n","      <td>-0.026618</td>\n","      <td>-0.900639</td>\n","      <td>-1.951963</td>\n","      <td>-1.591946</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 28 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-31e435ad-477d-46a7-9ab7-2535ff58e082')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-31e435ad-477d-46a7-9ab7-2535ff58e082 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-31e435ad-477d-46a7-9ab7-2535ff58e082');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":255}]},{"cell_type":"code","source":["#Storing the target column in actual variable\n","actual=Test_data['Churn']"],"metadata":{"id":"RDzpOyI6be1k"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Droping target column from the Test_data\n","Test_data=Test_data.drop(['Churn'],axis=1)"],"metadata":{"id":"F3R2Bv1pB8A5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred = best_xgb_model.predict(Test_data)"],"metadata":{"id":"tSqkLuCRapin"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["### Test data accuracy\n","evaluate_model(actual, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"851jhJNGcUaP","executionInfo":{"status":"ok","timestamp":1672679569894,"user_tz":-330,"elapsed":401,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"c6e80a21-efe8-4e48-a908-25ba4ff719e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix \n"," [[1261   34]\n"," [  36  169]]\n","Accurcay :  0.9533333333333334\n","Recall   :  0.824390243902439\n","Precision:  0.8325123152709359\n","F1_score :  0.8284313725490197\n"]}]},{"cell_type":"markdown","source":["# **Removing Outliers And Building Models**"],"metadata":{"id":"Ia30NBAU9d1O"}},{"cell_type":"markdown","source":[],"metadata":{"id":"2nz6IYCVvmif"}},{"cell_type":"code","source":["df1=pd.get_dummies(columns=cat_col, data=df1)"],"metadata":{"id":"oS6eC3CH0t6o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = df1.drop(['Churn'],axis=1)\n","y = df1['Churn']"],"metadata":{"id":"K9ArUN4u-ER_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.30,random_state=123,stratify=y)  "],"metadata":{"id":"SnYwbZYu-eju"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape)\n","print(X_val.shape)\n","print(y_train.shape)\n","print(y_val.shape)"],"metadata":{"id":"1PqLsnDl-eo7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672673886147,"user_tz":-330,"elapsed":18,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"6ed392d1-6647-4db2-b702-1408425874fe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(2450, 27)\n","(1050, 27)\n","(2450,)\n","(1050,)\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"58p3WO31vsJp"}},{"cell_type":"code","source":["scaler1=StandardScaler()\n","scaler1.fit(X_train[num_col])\n","\n","X_train[num_col]=scaler1.transform(X_train[num_col])\n","X_val[num_col]=scaler1.transform(X_val[num_col])"],"metadata":{"id":"1pVUnGsS-etR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Error Metrics"],"metadata":{"id":"BNKSs3KRvuDZ"}},{"cell_type":"code","source":["scores1 = pd.DataFrame(columns=['Model', 'Train_Accuracy', 'Train_Recall', 'Train_Precision', 'Train_F1_Score', \n","                               'Val_Accuracy', 'Val_Recall', 'Val_Precision', 'Val_F1_Score'])\n","\n","def get_metrics1(train_actual, train_predicted, val_actual, val_predicted, model_description, dataframe):\n","\n","    train_accuracy  = accuracy_score(train_actual, train_predicted)\n","    train_recall    = recall_score(train_actual, train_predicted, average=\"weighted\")\n","    train_precision = precision_score(train_actual, train_predicted, average=\"weighted\")\n","    train_f1score   = f1_score(train_actual, train_predicted, average=\"weighted\")\n","    \n","    val_accuracy   = accuracy_score(val_actual, val_predicted)\n","    val_recall     = recall_score(val_actual, val_predicted, average=\"weighted\")\n","    val_precision  = precision_score(val_actual, val_predicted, average=\"weighted\")\n","    val_f1score    = f1_score(val_actual, val_predicted, average=\"weighted\")\n","\n","    dataframe       = dataframe.append(pd.Series([model_description, \n","                                                  train_accuracy, train_recall, train_precision, train_f1score,\n","                                                  val_accuracy, val_recall, val_precision, val_f1score],\n","                                                 index=scores1.columns ), \n","                                       ignore_index=True)\n","\n","    return(dataframe)"],"metadata":{"id":"LBQOUuZd-ex1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Building Classification Report"],"metadata":{"id":"uVBUASdWv3dZ"}},{"cell_type":"code","source":["def classifcation_report_train_test1(y_train, y_train_pred, y_val, y_val_pred):\n","\n","    print('''\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            ''')\n","    print(classification_report(y_train, y_train_pred, digits=4))\n","\n","    print('''\n","            ===============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ===============================================\n","            ''')\n","    print(classification_report(y_val, y_val_pred, digits=4))"],"metadata":{"id":"2Hpcz1In-e25"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Model Building"],"metadata":{"id":"g3PvVYq8MO6L"}},{"cell_type":"markdown","source":[],"metadata":{"id":"aRZc_9O-JzyN"}},{"cell_type":"code","source":["smote1 = SMOTE(random_state=123)"],"metadata":{"id":"NdcLzDiK-e6s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train_sm1, y_train_sm1 = smote1.fit_resample(X_train, y_train)"],"metadata":{"id":"-NRpGF61-e-v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifier=LogisticRegression(penalty='l2',solver='saga')"],"metadata":{"id":"JzUaBTiv-fC1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifier.fit(X_train_sm1,y_train_sm1)"],"metadata":{"id":"z9AW6HNsN1Wm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674266357,"user_tz":-330,"elapsed":10,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"ef68f522-c0bd-46a5-b900-5ef381ab4e40"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(solver='saga')"]},"metadata":{},"execution_count":156}]},{"cell_type":"code","source":["y_train_pred1 = classifier.predict(X_train_sm1)\n","y_val_pred1 = classifier.predict(X_val)"],"metadata":{"id":"y2DxjZe0N1au"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test1(y_train_sm1, y_train_pred1, y_val, y_val_pred1)"],"metadata":{"id":"idE-etenN1fd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674271921,"user_tz":-330,"elapsed":10,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"caf9f0bd-60b3-41aa-8b57-a908808b8aaf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.8918    0.9271    0.9091      2099\n","           1     0.9241    0.8876    0.9055      2099\n","\n","    accuracy                         0.9073      4198\n","   macro avg     0.9080    0.9073    0.9073      4198\n","weighted avg     0.9080    0.9073    0.9073      4198\n","\n","\n","            ===============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ===============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9354    0.9021    0.9185       899\n","           1     0.5191    0.6291    0.5689       151\n","\n","    accuracy                         0.8629      1050\n","   macro avg     0.7273    0.7656    0.7437      1050\n","weighted avg     0.8755    0.8629    0.8682      1050\n","\n"]}]},{"cell_type":"code","source":["scores1 = get_metrics1(y_train_sm1, y_train_pred1, y_val, y_val_pred1, \"Logistic Regression\", scores1)\n","scores1"],"metadata":{"id":"uBIaS-dtN1lZ","colab":{"base_uri":"https://localhost:8080/","height":81},"executionInfo":{"status":"ok","timestamp":1672674339251,"user_tz":-330,"elapsed":417,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"fdaa9749-d5c1-48d7-aaef-78b92b7518df"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.907337      0.907337         0.907975   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.907301      0.862857    0.862857       0.875544      0.868184  "],"text/html":["\n","  <div id=\"df-ee1b8f9c-8994-4602-a17f-752a81e7008b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.907337</td>\n","      <td>0.907337</td>\n","      <td>0.907975</td>\n","      <td>0.907301</td>\n","      <td>0.862857</td>\n","      <td>0.862857</td>\n","      <td>0.875544</td>\n","      <td>0.868184</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee1b8f9c-8994-4602-a17f-752a81e7008b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ee1b8f9c-8994-4602-a17f-752a81e7008b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ee1b8f9c-8994-4602-a17f-752a81e7008b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":159}]},{"cell_type":"markdown","source":["# RandomForestClassifier Model"],"metadata":{"id":"Oid_zkEMx3KY"}},{"cell_type":"markdown","source":["## Instantiate Model"],"metadata":{"id":"UPmPq9p_ym9b"}},{"cell_type":"code","source":["classifier1=RandomForestClassifier()\n","classifier1.fit(X_train_sm1,y_train_sm1)"],"metadata":{"id":"and-Ef2JN1pm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674350971,"user_tz":-330,"elapsed":1078,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"2d17d900-f7b3-4c92-a78b-37f13865c8dc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"]},"metadata":{},"execution_count":160}]},{"cell_type":"code","source":["y_train_pred1=classifier1.predict(X_train_sm1)\n","y_val_pred1=classifier1.predict(X_val)"],"metadata":{"id":"VNw5qxzq-fIi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test1(y_train_sm1, y_train_pred1, y_val, y_val_pred1)"],"metadata":{"id":"fa474PEq0EY-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674359397,"user_tz":-330,"elapsed":414,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"c8c2f094-3ce9-4b7b-ceb9-034334fd1086"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     1.0000    1.0000    1.0000      2099\n","           1     1.0000    1.0000    1.0000      2099\n","\n","    accuracy                         1.0000      4198\n","   macro avg     1.0000    1.0000    1.0000      4198\n","weighted avg     1.0000    1.0000    1.0000      4198\n","\n","\n","            ===============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ===============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9548    0.9644    0.9596       899\n","           1     0.7746    0.7285    0.7509       151\n","\n","    accuracy                         0.9305      1050\n","   macro avg     0.8647    0.8464    0.8552      1050\n","weighted avg     0.9289    0.9305    0.9296      1050\n","\n"]}]},{"cell_type":"markdown","source":["## Hyper-parameter tuning using Grid Search and Cross Validation"],"metadata":{"id":"zzPrgacR0PAn"}},{"cell_type":"markdown","source":["### Parameters to Test"],"metadata":{"id":"1bfCatPL0hUB"}},{"cell_type":"code","source":["param_grid1 = {\"n_estimators\" : [50, 100],\n","              \"max_depth\" : [1,5],\n","              \"max_features\" : [3, 5],\n","              \"min_samples_leaf\" : [1, 2, 4]}"],"metadata":{"id":"a65VNnwb0EdX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Instantiate RandomForest Model"],"metadata":{"id":"CoycBEHR0zKN"}},{"cell_type":"code","source":["classifier2=RandomForestClassifier()"],"metadata":{"id":"zS7pKm430EhO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Instantiate GridSearchCV"],"metadata":{"id":"m-udVCJ41IIy"}},{"cell_type":"code","source":["clf_grid1=GridSearchCV(classifier2,param_grid1,cv=2)"],"metadata":{"id":"N9Bf8pl40ElO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Train DT using GridSearchCV"],"metadata":{"id":"0obRUMre1vBi"}},{"cell_type":"code","source":["clf_grid1.fit(X_train_sm1,y_train_sm1)"],"metadata":{"id":"dxH9bWJ30EqC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674395278,"user_tz":-330,"elapsed":10490,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"b5c5bfe0-e4c2-4ab2-829b-5fc33be9fe83"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=2, estimator=RandomForestClassifier(),\n","             param_grid={'max_depth': [1, 5], 'max_features': [3, 5],\n","                         'min_samples_leaf': [1, 2, 4],\n","                         'n_estimators': [50, 100]})"]},"metadata":{},"execution_count":166}]},{"cell_type":"markdown","source":["###Best Param"],"metadata":{"id":"QI2l0ut92HwC"}},{"cell_type":"code","source":["clf_grid1.best_params_"],"metadata":{"id":"NQ77_XDA0EuO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674416606,"user_tz":-330,"elapsed":423,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"bad28b9a-9a4a-4a41-a0a8-87e2ac4af73a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'max_depth': 5, 'max_features': 3, 'min_samples_leaf': 1, 'n_estimators': 50}"]},"metadata":{},"execution_count":167}]},{"cell_type":"code","source":["y_train_pred1=clf_grid1.predict(X_train_sm1)\n","y_val_pred1=clf_grid1.predict(X_val)"],"metadata":{"id":"OLI-31a30Eym"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Evaluate"],"metadata":{"id":"bgTv0xZ83LLl"}},{"cell_type":"code","source":["classifcation_report_train_test1(y_train_sm1, y_train_pred1, y_val, y_val_pred1)"],"metadata":{"id":"ro3rMkzh0E2n","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674428844,"user_tz":-330,"elapsed":398,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"e0b9c7d1-7e86-4487-b5c0-edf2a109102a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.8761    0.9166    0.8959      2099\n","           1     0.9126    0.8704    0.8910      2099\n","\n","    accuracy                         0.8935      4198\n","   macro avg     0.8944    0.8935    0.8935      4198\n","weighted avg     0.8944    0.8935    0.8935      4198\n","\n","\n","            ===============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ===============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9569    0.8888    0.9216       899\n","           1     0.5349    0.7616    0.6284       151\n","\n","    accuracy                         0.8705      1050\n","   macro avg     0.7459    0.8252    0.7750      1050\n","weighted avg     0.8962    0.8705    0.8794      1050\n","\n"]}]},{"cell_type":"code","source":["scores1 = get_metrics1(y_train_sm1, y_train_pred1, y_val, y_val_pred1, \"Random Forest\", scores1)\n","scores1"],"metadata":{"id":"NP_yUj1Q4-BB","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1672674447084,"user_tz":-330,"elapsed":398,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"fb58f2bb-9a0c-47c5-a9be-c6d4e207690a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.907337      0.907337         0.907975   \n","1        Random Forest        0.893521      0.893521         0.894363   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.907301      0.862857    0.862857       0.875544      0.868184  \n","1        0.893464      0.870476    0.870476       0.896198      0.879410  "],"text/html":["\n","  <div id=\"df-f568705a-ec03-43d7-b024-8d56c1c1d621\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.907337</td>\n","      <td>0.907337</td>\n","      <td>0.907975</td>\n","      <td>0.907301</td>\n","      <td>0.862857</td>\n","      <td>0.862857</td>\n","      <td>0.875544</td>\n","      <td>0.868184</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>0.893521</td>\n","      <td>0.893521</td>\n","      <td>0.894363</td>\n","      <td>0.893464</td>\n","      <td>0.870476</td>\n","      <td>0.870476</td>\n","      <td>0.896198</td>\n","      <td>0.879410</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f568705a-ec03-43d7-b024-8d56c1c1d621')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f568705a-ec03-43d7-b024-8d56c1c1d621 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f568705a-ec03-43d7-b024-8d56c1c1d621');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":170}]},{"cell_type":"markdown","source":["## Building Gradient BoostingClassifier"],"metadata":{"id":"hRBPzSqt2xD4"}},{"cell_type":"code","source":["from sklearn.ensemble import GradientBoostingClassifier"],"metadata":{"id":"HajB_25r2r3Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lr_list1 = [0.05, 0.075, 0.1, 0.25, 0.5, 0.75, 1]\n","\n","for lr_rate in lr_list1:\n","    gb_clf = GradientBoostingClassifier(n_estimators=20, learning_rate=lr_rate, max_features=2, max_depth=2, random_state=0)\n","    gb_clf.fit(X_train_sm1, y_train_sm1)\n","\n","    print(\"Learning rate: \", lr_rate)\n","    print(\"Accuracy score (training): {0:.3f}\".format(gb_clf.score(X_train_sm1, y_train_sm1)))\n","    print(\"Accuracy score (validation): {0:.3f}\".format(gb_clf.score(X_val, y_val)))"],"metadata":{"id":"375X6WM22uhf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674457817,"user_tz":-330,"elapsed":1015,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"bdb4620a-111b-46e6-bb98-2ffe57ceba09"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Learning rate:  0.05\n","Accuracy score (training): 0.828\n","Accuracy score (validation): 0.755\n","Learning rate:  0.075\n","Accuracy score (training): 0.821\n","Accuracy score (validation): 0.736\n","Learning rate:  0.1\n","Accuracy score (training): 0.839\n","Accuracy score (validation): 0.774\n","Learning rate:  0.25\n","Accuracy score (training): 0.867\n","Accuracy score (validation): 0.813\n","Learning rate:  0.5\n","Accuracy score (training): 0.845\n","Accuracy score (validation): 0.786\n","Learning rate:  0.75\n","Accuracy score (training): 0.843\n","Accuracy score (validation): 0.788\n","Learning rate:  1\n","Accuracy score (training): 0.866\n","Accuracy score (validation): 0.825\n"]}]},{"cell_type":"code","source":["gb_classifier3 = GradientBoostingClassifier(n_estimators=20, learning_rate=1, max_features=2, max_depth=2, random_state=0)\n","gb_classifier3.fit(X_train_sm1, y_train_sm1)"],"metadata":{"id":"BcMAUOyG2umX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674473226,"user_tz":-330,"elapsed":461,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"ad9b82e3-3f8b-4242-90de-9aa14783fa37"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GradientBoostingClassifier(learning_rate=1, max_depth=2, max_features=2,\n","                           n_estimators=20, random_state=0)"]},"metadata":{},"execution_count":173}]},{"cell_type":"code","source":["y_train_pred1=gb_classifier3.predict(X_train_sm1)\n","y_val_pred1=gb_classifier3.predict(X_val)"],"metadata":{"id":"PeJnUjGg2uqp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test1(y_train_sm1, y_train_pred1, y_val, y_val_pred1)"],"metadata":{"id":"aImOalTx2uvT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674531820,"user_tz":-330,"elapsed":416,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"42808b2d-dd3a-4947-c073-10737a4a8be6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.8548    0.8809    0.8677      2099\n","           1     0.8771    0.8504    0.8636      2099\n","\n","    accuracy                         0.8657      4198\n","   macro avg     0.8660    0.8657    0.8656      4198\n","weighted avg     0.8660    0.8657    0.8656      4198\n","\n","\n","            ===============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ===============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9312    0.8587    0.8935       899\n","           1     0.4253    0.6225    0.5054       151\n","\n","    accuracy                         0.8248      1050\n","   macro avg     0.6783    0.7406    0.6994      1050\n","weighted avg     0.8585    0.8248    0.8377      1050\n","\n"]}]},{"cell_type":"code","source":["scores1 = get_metrics1(y_train_sm1, y_train_pred1, y_val, y_val_pred1, \"Gradient Boost\", scores1)\n","scores1"],"metadata":{"id":"x91RqmRD2u0x","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1672674542461,"user_tz":-330,"elapsed":395,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"5575bd0c-e997-44c0-c6fd-effa3149f769"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.907337      0.907337         0.907975   \n","1        Random Forest        0.893521      0.893521         0.894363   \n","2       Gradient Boost        0.865650      0.865650         0.865991   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.907301      0.862857    0.862857       0.875544      0.868184  \n","1        0.893464      0.870476    0.870476       0.896198      0.879410  \n","2        0.865619      0.824762    0.824762       0.858489      0.837700  "],"text/html":["\n","  <div id=\"df-31e06170-b174-4db3-87a5-b3f680914795\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.907337</td>\n","      <td>0.907337</td>\n","      <td>0.907975</td>\n","      <td>0.907301</td>\n","      <td>0.862857</td>\n","      <td>0.862857</td>\n","      <td>0.875544</td>\n","      <td>0.868184</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>0.893521</td>\n","      <td>0.893521</td>\n","      <td>0.894363</td>\n","      <td>0.893464</td>\n","      <td>0.870476</td>\n","      <td>0.870476</td>\n","      <td>0.896198</td>\n","      <td>0.879410</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gradient Boost</td>\n","      <td>0.865650</td>\n","      <td>0.865650</td>\n","      <td>0.865991</td>\n","      <td>0.865619</td>\n","      <td>0.824762</td>\n","      <td>0.824762</td>\n","      <td>0.858489</td>\n","      <td>0.837700</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-31e06170-b174-4db3-87a5-b3f680914795')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-31e06170-b174-4db3-87a5-b3f680914795 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-31e06170-b174-4db3-87a5-b3f680914795');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":176}]},{"cell_type":"markdown","source":["## AdaBoost"],"metadata":{"id":"tnFVsa3I5ppX"}},{"cell_type":"code","source":["from sklearn.ensemble import AdaBoostClassifier"],"metadata":{"id":"GWZBxcRv2u5c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifier4=AdaBoostClassifier(n_estimators=50,learning_rate=1,random_state=0)"],"metadata":{"id":"hTI6A34L2u-r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifier4.fit(X_train_sm1, y_train_sm1)"],"metadata":{"id":"E_OpgTT82vDQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674555789,"user_tz":-330,"elapsed":690,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"d20a2765-3975-42de-969f-a70e8881e5de"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["AdaBoostClassifier(learning_rate=1, random_state=0)"]},"metadata":{},"execution_count":179}]},{"cell_type":"code","source":["y_train_pred1=classifier4.predict(X_train_sm1)\n","y_val_pred1=classifier4.predict(X_val)"],"metadata":{"id":"GVzCTmtr2vJC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test1(y_train_sm1, y_train_pred1, y_val, y_val_pred1)"],"metadata":{"id":"y3wdX3k42vN-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674560047,"user_tz":-330,"elapsed":9,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"1baa6c62-970d-4a96-85ce-dfe9bdede2ec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.8979    0.9219    0.9097      2099\n","           1     0.9197    0.8952    0.9073      2099\n","\n","    accuracy                         0.9085      4198\n","   macro avg     0.9088    0.9085    0.9085      4198\n","weighted avg     0.9088    0.9085    0.9085      4198\n","\n","\n","            ===============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ===============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9376    0.9021    0.9195       899\n","           1     0.5243    0.6424    0.5774       151\n","\n","    accuracy                         0.8648      1050\n","   macro avg     0.7309    0.7722    0.7484      1050\n","weighted avg     0.8781    0.8648    0.8703      1050\n","\n"]}]},{"cell_type":"code","source":["scores1 = get_metrics1(y_train_sm1, y_train_pred1, y_val, y_val_pred1, \"AdaBoost\", scores1)\n","scores1"],"metadata":{"id":"lVMh6Awg2vSD","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1672674561717,"user_tz":-330,"elapsed":22,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"75b42407-ec68-4dec-e667-2cbed8a2f3e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.907337      0.907337         0.907975   \n","1        Random Forest        0.893521      0.893521         0.894363   \n","2       Gradient Boost        0.865650      0.865650         0.865991   \n","3             AdaBoost        0.908528      0.908528         0.908819   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.907301      0.862857    0.862857       0.875544      0.868184  \n","1        0.893464      0.870476    0.870476       0.896198      0.879410  \n","2        0.865619      0.824762    0.824762       0.858489      0.837700  \n","3        0.908512      0.864762    0.864762       0.878143      0.870301  "],"text/html":["\n","  <div id=\"df-2abd3c45-dae8-4c13-9bc9-3e35dda186b2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.907337</td>\n","      <td>0.907337</td>\n","      <td>0.907975</td>\n","      <td>0.907301</td>\n","      <td>0.862857</td>\n","      <td>0.862857</td>\n","      <td>0.875544</td>\n","      <td>0.868184</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>0.893521</td>\n","      <td>0.893521</td>\n","      <td>0.894363</td>\n","      <td>0.893464</td>\n","      <td>0.870476</td>\n","      <td>0.870476</td>\n","      <td>0.896198</td>\n","      <td>0.879410</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gradient Boost</td>\n","      <td>0.865650</td>\n","      <td>0.865650</td>\n","      <td>0.865991</td>\n","      <td>0.865619</td>\n","      <td>0.824762</td>\n","      <td>0.824762</td>\n","      <td>0.858489</td>\n","      <td>0.837700</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AdaBoost</td>\n","      <td>0.908528</td>\n","      <td>0.908528</td>\n","      <td>0.908819</td>\n","      <td>0.908512</td>\n","      <td>0.864762</td>\n","      <td>0.864762</td>\n","      <td>0.878143</td>\n","      <td>0.870301</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2abd3c45-dae8-4c13-9bc9-3e35dda186b2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2abd3c45-dae8-4c13-9bc9-3e35dda186b2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2abd3c45-dae8-4c13-9bc9-3e35dda186b2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":182}]},{"cell_type":"markdown","source":["## XGBOOST"],"metadata":{"id":"NDOKGavj7M8z"}},{"cell_type":"code","source":["classifier5=XGBClassifier()"],"metadata":{"id":"b_F1fyo274cc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifier5.fit(X_train_sm1, y_train_sm1)"],"metadata":{"id":"gLyuuS988A_3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674588713,"user_tz":-330,"elapsed":645,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"0d77d42c-1d88-4093-ee26-59307e5f0fef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["XGBClassifier()"]},"metadata":{},"execution_count":184}]},{"cell_type":"code","source":["y_train_pred1=classifier5.predict(X_train_sm1)\n","y_val_pred1=classifier5.predict(X_val)"],"metadata":{"id":"bq3a4ieV8J4h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test1(y_train_sm1, y_train_pred1, y_val, y_val_pred1)"],"metadata":{"id":"iihbI1D_8RHh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674595117,"user_tz":-330,"elapsed":400,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"be3acf05-251c-46bb-907f-90754ee04615"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9458    0.9724    0.9589      2099\n","           1     0.9716    0.9443    0.9577      2099\n","\n","    accuracy                         0.9583      4198\n","   macro avg     0.9587    0.9583    0.9583      4198\n","weighted avg     0.9587    0.9583    0.9583      4198\n","\n","\n","            ===============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ===============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9647    0.9422    0.9533       899\n","           1     0.6977    0.7947    0.7430       151\n","\n","    accuracy                         0.9210      1050\n","   macro avg     0.8312    0.8684    0.8482      1050\n","weighted avg     0.9263    0.9210    0.9231      1050\n","\n"]}]},{"cell_type":"markdown","source":["## Hyper-parameter tuning using Grid Search and Cross Validation"],"metadata":{"id":"_WzsU74R8ZUf"}},{"cell_type":"code","source":["XGB1 = XGBClassifier(n_jobs=-1)\n"," \n","# Use a grid over parameters of interest\n","param_grid1 = {\n","    'colsample_bytree': np.linspace(0.6, 0.8, 2),\n","    'n_estimators': [50, 100],\n","    'max_depth': [5, 6]}\n","\n","classifier6 = GridSearchCV(estimator=XGB1, param_grid=param_grid1, cv=3)"],"metadata":{"id":"qR_T_gUw8U-B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifier6.fit(X_train_sm1, y_train_sm1)"],"metadata":{"id":"BW2KNr7Z9Pon","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674619985,"user_tz":-330,"elapsed":9890,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"eefc5271-d168-4251-9377-77a8bec99576"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=3, estimator=XGBClassifier(n_jobs=-1),\n","             param_grid={'colsample_bytree': array([0.6, 0.8]),\n","                         'max_depth': [5, 6], 'n_estimators': [50, 100]})"]},"metadata":{},"execution_count":188}]},{"cell_type":"code","source":["best_xgb_model1=classifier6.best_estimator_"],"metadata":{"id":"bpu7_Z0V9iz4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classifier6.best_score_,classifier6.best_params_)"],"metadata":{"id":"3xvdsNGW-B5M","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674643457,"user_tz":-330,"elapsed":11,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"95433fe7-4436-4b80-ddca-47f32326a95f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9604651281527622 {'colsample_bytree': 0.6, 'max_depth': 6, 'n_estimators': 100}\n"]}]},{"cell_type":"code","source":["print(best_xgb_model1)"],"metadata":{"id":"taoUTuRr-UDI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674650051,"user_tz":-330,"elapsed":410,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"41d3f4e3-0158-438a-cafe-0290ae7006cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["XGBClassifier(colsample_bytree=0.6, max_depth=6, n_jobs=-1)\n"]}]},{"cell_type":"code","source":["y_train_pred1=best_xgb_model1.predict(X_train_sm1)\n","y_val_pred1=best_xgb_model1.predict(X_val)"],"metadata":{"id":"cForhzGO-Z2M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test1(y_train_sm1, y_train_pred1, y_val, y_val_pred1)"],"metadata":{"id":"x-14qGLb-rbO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672674653312,"user_tz":-330,"elapsed":14,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"62e56350-a0db-4929-c886-08bae8a33fd5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9877    0.9967    0.9922      2099\n","           1     0.9966    0.9876    0.9921      2099\n","\n","    accuracy                         0.9921      4198\n","   macro avg     0.9922    0.9921    0.9921      4198\n","weighted avg     0.9922    0.9921    0.9921      4198\n","\n","\n","            ===============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ===============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9622    0.9622    0.9622       899\n","           1     0.7748    0.7748    0.7748       151\n","\n","    accuracy                         0.9352      1050\n","   macro avg     0.8685    0.8685    0.8685      1050\n","weighted avg     0.9352    0.9352    0.9352      1050\n","\n"]}]},{"cell_type":"code","source":["scores1 = get_metrics1(y_train_sm1, y_train_pred1, y_val, y_val_pred1, \"XGBoost\", scores1)\n","scores1"],"metadata":{"id":"czfqy4aI-vmR","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1672674666275,"user_tz":-330,"elapsed":429,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"36e0b739-8c0c-4055-ce9e-efe792c9a3ad"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.907337      0.907337         0.907975   \n","1        Random Forest        0.893521      0.893521         0.894363   \n","2       Gradient Boost        0.865650      0.865650         0.865991   \n","3             AdaBoost        0.908528      0.908528         0.908819   \n","4              XGBoost        0.992139      0.992139         0.992179   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.907301      0.862857    0.862857       0.875544      0.868184  \n","1        0.893464      0.870476    0.870476       0.896198      0.879410  \n","2        0.865619      0.824762    0.824762       0.858489      0.837700  \n","3        0.908512      0.864762    0.864762       0.878143      0.870301  \n","4        0.992139      0.935238    0.935238       0.935238      0.935238  "],"text/html":["\n","  <div id=\"df-7798042a-c78f-4c00-97f6-181b23c671f8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.907337</td>\n","      <td>0.907337</td>\n","      <td>0.907975</td>\n","      <td>0.907301</td>\n","      <td>0.862857</td>\n","      <td>0.862857</td>\n","      <td>0.875544</td>\n","      <td>0.868184</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>0.893521</td>\n","      <td>0.893521</td>\n","      <td>0.894363</td>\n","      <td>0.893464</td>\n","      <td>0.870476</td>\n","      <td>0.870476</td>\n","      <td>0.896198</td>\n","      <td>0.879410</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gradient Boost</td>\n","      <td>0.865650</td>\n","      <td>0.865650</td>\n","      <td>0.865991</td>\n","      <td>0.865619</td>\n","      <td>0.824762</td>\n","      <td>0.824762</td>\n","      <td>0.858489</td>\n","      <td>0.837700</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AdaBoost</td>\n","      <td>0.908528</td>\n","      <td>0.908528</td>\n","      <td>0.908819</td>\n","      <td>0.908512</td>\n","      <td>0.864762</td>\n","      <td>0.864762</td>\n","      <td>0.878143</td>\n","      <td>0.870301</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>XGBoost</td>\n","      <td>0.992139</td>\n","      <td>0.992139</td>\n","      <td>0.992179</td>\n","      <td>0.992139</td>\n","      <td>0.935238</td>\n","      <td>0.935238</td>\n","      <td>0.935238</td>\n","      <td>0.935238</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7798042a-c78f-4c00-97f6-181b23c671f8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7798042a-c78f-4c00-97f6-181b23c671f8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7798042a-c78f-4c00-97f6-181b23c671f8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":194}]},{"cell_type":"markdown","source":["### A. SVM (RBF Models)"],"metadata":{"id":"6wuRDNBhL90_"}},{"cell_type":"code","source":["from sklearn.svm import SVC"],"metadata":{"id":"KqxSyXIkMt0W"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###  Non Linear SVM (RBF)"],"metadata":{"id":"yn4gH4uoNh1B"}},{"cell_type":"markdown","source":["#### Create an SVC object "],"metadata":{"id":"InnmmsCENq1v"}},{"cell_type":"code","source":["svc = SVC(kernel='rbf',gamma=0.01,C=10)\n","svc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qpt55merNM0i","executionInfo":{"status":"ok","timestamp":1672675490980,"user_tz":-330,"elapsed":534,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"c85e40b2-35cb-49ce-c636-ea1ccc5b6be7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(C=10, gamma=0.01)"]},"metadata":{},"execution_count":200}]},{"cell_type":"markdown","source":["#### Train the model"],"metadata":{"id":"H0JHk0XLNw5H"}},{"cell_type":"code","source":["svc.fit(X=X_train_sm1, y=y_train_sm1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P1IuFzyZNM6D","executionInfo":{"status":"ok","timestamp":1672675494374,"user_tz":-330,"elapsed":1083,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"10d92f69-3f7c-4633-a39e-e2e3889f2574"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(C=10, gamma=0.01)"]},"metadata":{},"execution_count":201}]},{"cell_type":"markdown","source":["#### Predict"],"metadata":{"id":"pJqQk9jfN8JQ"}},{"cell_type":"code","source":["y_train_pred1=svc.predict(X_train_sm1)\n","y_val_pred1=svc.predict(X_val)"],"metadata":{"id":"en9EOMJaNM-c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classifcation_report_train_test1(y_train_sm1, y_train_pred1, y_val, y_val_pred1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RN2awj-WNNFP","executionInfo":{"status":"ok","timestamp":1672675596679,"user_tz":-330,"elapsed":654,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"6bf75512-61a4-4122-cbff-0be1527329a3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","            =========================================\n","               CLASSIFICATION REPORT FOR TRAIN DATA\n","            =========================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9404    0.9466    0.9435      2099\n","           1     0.9463    0.9400    0.9431      2099\n","\n","    accuracy                         0.9433      4198\n","   macro avg     0.9433    0.9433    0.9433      4198\n","weighted avg     0.9433    0.9433    0.9433      4198\n","\n","\n","            ===============================================\n","               CLASSIFICATION REPORT FOR VALIDATION DATA\n","            ===============================================\n","            \n","              precision    recall  f1-score   support\n","\n","           0     0.9508    0.9244    0.9374       899\n","           1     0.6136    0.7152    0.6606       151\n","\n","    accuracy                         0.8943      1050\n","   macro avg     0.7822    0.8198    0.7990      1050\n","weighted avg     0.9023    0.8943    0.8976      1050\n","\n"]}]},{"cell_type":"code","source":["scores1 = get_metrics1(y_train_sm1, y_train_pred1, y_val, y_val_pred1, \"SVM\", scores1)\n","scores1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"jNZ3e8oPQ-IU","executionInfo":{"status":"ok","timestamp":1672676150284,"user_tz":-330,"elapsed":448,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"cb53837c-dd24-41b2-ebaa-50027355f18f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Train_Accuracy  Train_Recall  Train_Precision  \\\n","0  Logistic Regression        0.907337      0.907337         0.907975   \n","1        Random Forest        0.893521      0.893521         0.894363   \n","2       Gradient Boost        0.865650      0.865650         0.865991   \n","3             AdaBoost        0.908528      0.908528         0.908819   \n","4              XGBoost        0.992139      0.992139         0.992179   \n","5                  SVM        0.943306      0.943306         0.943326   \n","\n","   Train_F1_Score  Val_Accuracy  Val_Recall  Val_Precision  Val_F1_Score  \n","0        0.907301      0.862857    0.862857       0.875544      0.868184  \n","1        0.893464      0.870476    0.870476       0.896198      0.879410  \n","2        0.865619      0.824762    0.824762       0.858489      0.837700  \n","3        0.908512      0.864762    0.864762       0.878143      0.870301  \n","4        0.992139      0.935238    0.935238       0.935238      0.935238  \n","5        0.943306      0.894286    0.894286       0.902313      0.897581  "],"text/html":["\n","  <div id=\"df-de0badd7-3ca1-4f73-8abe-2ac0be1cf37e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Train_Accuracy</th>\n","      <th>Train_Recall</th>\n","      <th>Train_Precision</th>\n","      <th>Train_F1_Score</th>\n","      <th>Val_Accuracy</th>\n","      <th>Val_Recall</th>\n","      <th>Val_Precision</th>\n","      <th>Val_F1_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.907337</td>\n","      <td>0.907337</td>\n","      <td>0.907975</td>\n","      <td>0.907301</td>\n","      <td>0.862857</td>\n","      <td>0.862857</td>\n","      <td>0.875544</td>\n","      <td>0.868184</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Random Forest</td>\n","      <td>0.893521</td>\n","      <td>0.893521</td>\n","      <td>0.894363</td>\n","      <td>0.893464</td>\n","      <td>0.870476</td>\n","      <td>0.870476</td>\n","      <td>0.896198</td>\n","      <td>0.879410</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gradient Boost</td>\n","      <td>0.865650</td>\n","      <td>0.865650</td>\n","      <td>0.865991</td>\n","      <td>0.865619</td>\n","      <td>0.824762</td>\n","      <td>0.824762</td>\n","      <td>0.858489</td>\n","      <td>0.837700</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AdaBoost</td>\n","      <td>0.908528</td>\n","      <td>0.908528</td>\n","      <td>0.908819</td>\n","      <td>0.908512</td>\n","      <td>0.864762</td>\n","      <td>0.864762</td>\n","      <td>0.878143</td>\n","      <td>0.870301</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>XGBoost</td>\n","      <td>0.992139</td>\n","      <td>0.992139</td>\n","      <td>0.992179</td>\n","      <td>0.992139</td>\n","      <td>0.935238</td>\n","      <td>0.935238</td>\n","      <td>0.935238</td>\n","      <td>0.935238</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>SVM</td>\n","      <td>0.943306</td>\n","      <td>0.943306</td>\n","      <td>0.943326</td>\n","      <td>0.943306</td>\n","      <td>0.894286</td>\n","      <td>0.894286</td>\n","      <td>0.902313</td>\n","      <td>0.897581</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de0badd7-3ca1-4f73-8abe-2ac0be1cf37e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-de0badd7-3ca1-4f73-8abe-2ac0be1cf37e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-de0badd7-3ca1-4f73-8abe-2ac0be1cf37e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":204}]},{"cell_type":"markdown","source":["### Predicting Best Model on the Test Dataset"],"metadata":{"id":"4hIcrWC2f1mK"}},{"cell_type":"code","source":["#Droping trainrows and ID columns form Test_data\n","Test.drop(['trainrows','Cust_ID'],axis=1,inplace=True)"],"metadata":{"id":"3kkgtVcwiYsh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Doing Standardization on numeric columns\n","Test[num_col]=scaler1.transform(Test[num_col])"],"metadata":{"id":"5qTsDCGliYxe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Doing dummification on categorical columns\n","Test=pd.get_dummies(columns=cat_col,data=Test)"],"metadata":{"id":"gLEINct9iZCT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Droping target column from the Test\n","Test=Test.drop(['Churn'],axis=1)"],"metadata":{"id":"DylhvhediZH-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Predicting on Test dataset\n","pred1=best_xgb_model1.predict(Test)"],"metadata":{"id":"__bRo5XIPBRE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Evaluation\n","evaluate_model(actual,pred1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3BmfG4Zjfx_X","executionInfo":{"status":"ok","timestamp":1672681121196,"user_tz":-330,"elapsed":11,"user":{"displayName":"Raj DebNath","userId":"08173213942613683783"}},"outputId":"de4a2678-6e49-4f3e-ec98-c5b51bc63de2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix \n"," [[1218    0]\n"," [  80  202]]\n","Accurcay :  0.9466666666666667\n","Recall   :  0.7163120567375887\n","Precision:  1.0\n","F1_score :  0.8347107438016529\n"]}]}]}